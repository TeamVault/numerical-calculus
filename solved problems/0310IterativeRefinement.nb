(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    189177,       5480]*)
(*NotebookOutlinePosition[    189889,       5505]*)
(*  CellTagsIndexPosition[    189845,       5501]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Module for Iterative Refinement - Residual \
Correction",
  FontFamily->"New Century Schlbk",
  FontSize->14,
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]], "Text",
  TextAlignment->Center],

Cell[TextData[{
  StyleBox["Numerical Methods Using Mathematica \nComplementary Supplement \n\
for ",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["\n",
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["Numerical Analysis - Numerical Methods",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/numerical.html"], None},
    ButtonStyle->"Hyperlink"],
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[" \n",
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["(c) ",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["\n",
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["John H. Mathews and Kurtis Fink, 2005",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/numerical.html"], None},
    ButtonStyle->"Hyperlink"],
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[" ",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]]
}], "Text",
  TextAlignment->Center]
}, Closed]],

Cell[TextData[{
  StyleBox["Background",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "\n\n\tIn the ",
  ButtonBox["LU-Factorization module",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/LUFactorMod.html"], None},
    
    ButtonStyle->"Hyperlink"],
  " we developed the \"LU-solve\" method which will now be used as the \
computational engine in the iterative refinement - residual correction \
method.  \n\n",
  StyleBox["Definition (",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["LU-Factorization",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/LUDecomposition.html"], None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[").",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "  The matrix ",
  StyleBox["A",
    FontWeight->"Bold"],
  " has an LU-factorization if it can be expressed as the product of a \
lower-triangular matrix ",
  StyleBox["L",
    FontWeight->"Bold"],
  " and an upper triangular matrix ",
  StyleBox["U",
    FontWeight->"Bold"],
  "  \n\n\t\t",
  Cell[BoxData[
      RowBox[{
        StyleBox["A",
          FontWeight->"Bold"], 
        StyleBox[" ",
          FontWeight->"Bold"], "=", " ", 
        StyleBox[\(L\ U\),
          FontWeight->"Bold"]}]]],
  ". "
}], "Text"],

Cell[TextData[{
  StyleBox["Theorem (A = LU;  Factorization with ",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["NO",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox[" Pivoting).",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  Assume that ",
    FontFamily->"Times New Roman"],
  StyleBox["A",
    FontFamily->"Times New Roman",
    FontWeight->"Bold"],
  StyleBox[" has a ",
    FontFamily->"Times New Roman"],
  "LU-factorization",
  StyleBox[".  The solution ",
    FontFamily->"Times New Roman"],
  StyleBox["X",
    FontFamily->"Times New Roman",
    FontWeight->"Bold"],
  StyleBox[" to the linear system",
    FontFamily->"Times New Roman"],
  "  ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(A\ X\),
          FontWeight->"Bold"], " ", "=", " ", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  ", ",
  StyleBox[" is found in three steps:  \n\n\t",
    FontFamily->"Times New Roman"],
  StyleBox["1.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  Construct the matrices  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox["L",
          FontWeight->"Bold"], " ", 
        StyleBox["and",
          FontFamily->"Times New Roman"], "  ", 
        StyleBox["U",
          FontWeight->"Bold"]}]]],
  ", if possible.  ",
  StyleBox["\n\t",
    FontFamily->"Times New Roman"],
  StyleBox["2.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  Solve  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox[\(L\ Y\),
          FontWeight->"Bold"], " ", "=", " ", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox["  for  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox["Y",
        FontWeight->"Bold"]]],
  StyleBox["  using forward substitution. \n\t",
    FontFamily->"Times New Roman"],
  StyleBox["3.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  Solve  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox[\(U\ X\),
          FontWeight->"Bold"], " ", "=", " ", 
        StyleBox["Y",
          FontWeight->"Bold"]}]]],
  "  ",
  StyleBox["for  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox["X",
        FontWeight->"Bold"]]],
  StyleBox["  using back substitution. ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["Proof  ",
    FontFamily->"New Century Schlbk",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  StyleBox[ButtonBox["LU Factorization",
    ButtonData:>{
      URL[ "http://www.ecs.fullerton.edu/~mathews/n2003/LUFactorProof.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  ",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["LU Factorization",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/LUFactorProof.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  ",
    FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell[TextData[{
  "\tThe above theorem assumes that there are no row interchanges.  If row \
interchanges are permitted then a factorization of a \"permuted matrix\" will \
be obtained.  A permutation of the first ",
  StyleBox["n",
    FontFamily->"Courier New"],
  " positive integers  ",
  Cell[BoxData[
      RowBox[{"1", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "2", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "...", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "n"}]]],
  ".  is an arrangement  ",
  Cell[BoxData[
      RowBox[{\(k\_1\), 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], \(k\_2\), 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "...", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], \(k\_n\)}]]],
  "  of these integers in a definite order.  The standard base vectors  ",
  Cell[BoxData[
      RowBox[{
        SubscriptBox[
          StyleBox["E",
            FontWeight->"Bold"], "i"], " ", "=", " ", 
        RowBox[{"[", 
          RowBox[{"0", 
            StyleBox[",",
              FontFamily->"Times New Roman",
              FontSize->12,
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontColor->GrayLevel[0],
              FontVariations->{"Underline"->False,
              "StrikeThrough"->False}], "...", 
            StyleBox[",",
              FontFamily->"Times New Roman",
              FontSize->12,
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontColor->GrayLevel[0],
              FontVariations->{"Underline"->False,
              "StrikeThrough"->False}], 
            SubscriptBox[
              StyleBox["1",
                FontFamily->"Times New Roman"], "i"], 
            StyleBox[",",
              FontFamily->"Times New Roman",
              FontSize->12,
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontColor->GrayLevel[0],
              FontVariations->{"Underline"->False,
              "StrikeThrough"->False}], "0", 
            StyleBox[",",
              FontFamily->"Times New Roman",
              FontSize->12,
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontColor->GrayLevel[0],
              FontVariations->{"Underline"->False,
              "StrikeThrough"->False}], "...", 
            StyleBox[",",
              FontFamily->"Times New Roman",
              FontSize->12,
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontColor->GrayLevel[0],
              FontVariations->{"Underline"->False,
              "StrikeThrough"->False}], "0"}], "]"}]}]]],
  "  for  ",
  Cell[BoxData[
      RowBox[{\(i = 1\), 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "2", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "...", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "n"}]]],
  "  are used in the next definition.  "
}], "Text"],

Cell[TextData[{
  StyleBox["Definition (",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["Permutation Matrix",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/PermutationMatrix.html"], None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[").",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  An n\[Times]n permutation matrix ",
    FontFamily->"Times New Roman"],
  StyleBox["P",
    FontFamily->"Times New Roman",
    FontWeight->"Bold"],
  StyleBox[" is a matrix with precisely one entry whose value is \"1\" in \
each column and row, and all of whose other entries are \"0.\"  The rows of  \
",
    FontFamily->"Times New Roman"],
  StyleBox["P",
    FontFamily->"Times New Roman",
    FontWeight->"Bold"],
  StyleBox["  are a permutation of the rows of the identity matrix and  ",
    FontFamily->"Times New Roman"],
  StyleBox["P",
    FontFamily->"Times New Roman",
    FontWeight->"Bold"],
  StyleBox["  can be written as  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox["P",
          FontWeight->"Bold"], " ", "=", 
        SuperscriptBox[
          RowBox[{"[", 
            RowBox[{
              SubsuperscriptBox[
                StyleBox["E",
                  FontWeight->"Bold"], \(k\_1\), "T"], 
              StyleBox[",",
                FontFamily->"Times New Roman",
                FontSize->12,
                FontWeight->"Plain",
                FontSlant->"Plain",
                FontColor->GrayLevel[0],
                FontVariations->{"Underline"->False,
                "StrikeThrough"->False}], 
              SubsuperscriptBox[
                StyleBox["E",
                  FontWeight->"Bold"], \(k\_2\), "T"], 
              StyleBox[",",
                FontFamily->"Times New Roman",
                FontSize->12,
                FontWeight->"Plain",
                FontSlant->"Plain",
                FontColor->GrayLevel[0],
                FontVariations->{"Underline"->False,
                "StrikeThrough"->False}], "...", 
              StyleBox[",",
                FontFamily->"Times New Roman",
                FontSize->12,
                FontWeight->"Plain",
                FontSlant->"Plain",
                FontColor->GrayLevel[0],
                FontVariations->{"Underline"->False,
                "StrikeThrough"->False}], 
              SubsuperscriptBox[
                StyleBox["E",
                  FontWeight->"Bold"], \(k\_n\), "T"]}], "]"}], "T"]}]]],
  ".  The elements of  ",
  Cell[BoxData[
      RowBox[{
        StyleBox["P",
          FontWeight->"Bold"], " ", "=", \([p\_\(i, j\)]\)}]]],
  "  have the form  \n\n\t\t",
  Cell[BoxData[
      RowBox[{\(p\_\(i, j\)\), " ", "=", " ", 
        RowBox[{"{", GridBox[{
              {"1", 
                RowBox[{"  ", 
                  RowBox[{
                    RowBox[{
                      StyleBox["for",
                        FontFamily->"Times New Roman",
                        FontSize->12,
                        FontWeight->"Plain",
                        FontSlant->"Plain",
                        FontColor->GrayLevel[0],
                        FontVariations->{"Underline"->False,
                        "StrikeThrough"->False}], "  ", "j"}], " ", 
                    "=", \(k\_i\), " "}]}]},
              {"0", 
                StyleBox["otherwise",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}]}
              }], 
          StyleBox["}",
            FontColor->GrayLevel[1]]}]}]]],
  "  "
}], "Text"],

Cell[TextData[{
  StyleBox["Theorem.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  Suppose that  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox["P",
          FontWeight->"Bold"], " ", "=", 
        SuperscriptBox[
          RowBox[{"[", 
            RowBox[{
              SubsuperscriptBox[
                StyleBox["E",
                  FontWeight->"Bold"], \(k\_1\), "T"], 
              StyleBox[",",
                FontFamily->"Times New Roman",
                FontSize->12,
                FontWeight->"Plain",
                FontSlant->"Plain",
                FontColor->GrayLevel[0],
                FontVariations->{"Underline"->False,
                "StrikeThrough"->False}], 
              SubsuperscriptBox[
                StyleBox["E",
                  FontWeight->"Bold"], \(k\_2\), "T"], 
              StyleBox[",",
                FontFamily->"Times New Roman",
                FontSize->12,
                FontWeight->"Plain",
                FontSlant->"Plain",
                FontColor->GrayLevel[0],
                FontVariations->{"Underline"->False,
                "StrikeThrough"->False}], "...", 
              StyleBox[",",
                FontFamily->"Times New Roman",
                FontSize->12,
                FontWeight->"Plain",
                FontSlant->"Plain",
                FontColor->GrayLevel[0],
                FontVariations->{"Underline"->False,
                "StrikeThrough"->False}], 
              SubsuperscriptBox[
                StyleBox["E",
                  FontWeight->"Bold"], \(k\_n\), "T"]}], "]"}], "T"]}]]],
  StyleBox["  is a permutation matrix.  The product  ",
    FontFamily->"Times New Roman"],
  StyleBox["PA",
    FontFamily->"Times New Roman",
    FontWeight->"Bold"],
  StyleBox["  is a new matrix whose rows consists of the rows of  ",
    FontFamily->"Times New Roman"],
  StyleBox["A",
    FontFamily->"Times New Roman",
    FontWeight->"Bold"],
  StyleBox["  rearranged in the new order  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{\(row\_\(k\_1\)\), 
          StyleBox["A",
            FontWeight->"Bold"]}], 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], 
        RowBox[{\(row\_\(k\_2\)\), 
          StyleBox["A",
            FontWeight->"Bold"]}], 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "...", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], 
        RowBox[{\(row\_\(k\_n\)\), 
          StyleBox["A",
            FontWeight->"Bold"]}]}]]],
  StyleBox[".  ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Exploration",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[TextData[{
  "For example, the permutation matrix  ",
  Cell[BoxData[
      RowBox[{
        StyleBox["P",
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{"(", GridBox[{
              {"0", "1", "0", "0"},
              {"1", "0", "0", "0"},
              {"0", "0", "0", "1"},
              {"0", "0", "1", "0"}
              }], ")"}]}]]],
  "  will interchange rows 1 and 2 and also interchange rows 3 and 4.  "
}], "Text"],

Cell[BoxData[{\(Clear[a];\), "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"P", "=", 
          RowBox[{"(", GridBox[{
                {"0", "1", "0", "0"},
                {"1", "0", "0", "0"},
                {"0", "0", "0", "1"},
                {"0", "0", "1", "0"}
                }], ")"}]}], ";", " ", 
        RowBox[{"M", "=", 
          TagBox[
            RowBox[{"(", GridBox[{
                  {\(a\_\(1, 1\)\), \(a\_\(1, 2\)\), \(a\_\(1, 
                        3\)\), \(a\_\(1, 4\)\)},
                  {\(a\_\(2, 1\)\), \(a\_\(2, 2\)\), \(a\_\(2, 
                        3\)\), \(a\_\(2, 4\)\)},
                  {\(a\_\(3, 1\)\), \(a\_\(3, 2\)\), \(a\_\(3, 
                        3\)\), \(a\_\(3, 4\)\)},
                  {\(a\_\(4, 1\)\), \(a\_\(4, 2\)\), \(a\_\(4, 
                        3\)\), \(a\_\(4, 4\)\)}
                  }], ")"}],
            (MatrixForm[ #]&)]}], ";"}], " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{"MatrixForm", "[", 
        RowBox[{
          RowBox[{"(", GridBox[{
                {"0", "1", "0", "0"},
                {"1", "0", "0", "0"},
                {"0", "0", "0", "1"},
                {"0", "0", "1", "0"}
                }], ")"}], ".", 
          TagBox[
            RowBox[{"(", GridBox[{
                  {\(a\_\(1, 1\)\), \(a\_\(1, 2\)\), \(a\_\(1, 
                        3\)\), \(a\_\(1, 4\)\)},
                  {\(a\_\(2, 1\)\), \(a\_\(2, 2\)\), \(a\_\(2, 
                        3\)\), \(a\_\(2, 4\)\)},
                  {\(a\_\(3, 1\)\), \(a\_\(3, 2\)\), \(a\_\(3, 
                        3\)\), \(a\_\(3, 4\)\)},
                  {\(a\_\(4, 1\)\), \(a\_\(4, 2\)\), \(a\_\(4, 
                        3\)\), \(a\_\(4, 4\)\)}
                  }], ")"}],
            (MatrixForm[ #]&)]}], " ", "]"}], 
      ";"}], "\[IndentingNewLine]", \(Print["\<The permutation matrix P =\>", 
        MatrixForm[P]\ ];\), "\[IndentingNewLine]", 
    RowBox[{\(Print["\<Multiplication on the left will interchange\>"];\), 
      " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print["\<rows 1 and 2, and also interchange rows 3 and 4\>"];\),
       " "}], "\[IndentingNewLine]", \(Print["\<P A =\>", MatrixForm[P], 
        MatrixForm[
          M]\ ];\), "\[IndentingNewLine]", \(Print["\<           P A =\>", 
        MatrixForm[P . M]\ ];\)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Theorem.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  If  ",
    FontFamily->"Times New Roman"],
  StyleBox["A",
    FontFamily->"Times New Roman",
    FontWeight->"Bold"],
  StyleBox["  is a nonsingular matrix, then there exists a permutation matrix \
 ",
    FontFamily->"Times New Roman"],
  StyleBox["P",
    FontFamily->"Times New Roman",
    FontWeight->"Bold"],
  StyleBox["  so that  ",
    FontFamily->"Times New Roman"],
  StyleBox["PA",
    FontFamily->"Times New Roman",
    FontWeight->"Bold"],
  StyleBox["  has an LU-factorization \n\n\t\t",
    FontFamily->"Times New Roman"],
  StyleBox["P A",
    FontFamily->"Times New Roman",
    FontWeight->"Bold"],
  StyleBox["  =  ",
    FontFamily->"Times New Roman"],
  StyleBox["L U",
    FontFamily->"Times New Roman",
    FontWeight->"Bold"],
  StyleBox[".  ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["Theorem (PA = LU;  Factorization with Pivoting).",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  Given that ",
    FontFamily->"Times New Roman"],
  StyleBox["A",
    FontFamily->"Times New Roman",
    FontWeight->"Bold"],
  StyleBox[" is nonsingular.  The solution ",
    FontFamily->"Times New Roman"],
  StyleBox["X",
    FontFamily->"Times New Roman",
    FontWeight->"Bold"],
  StyleBox[" to the linear system",
    FontFamily->"Times New Roman"],
  "  ",
  Cell[BoxData[
      RowBox[{
        StyleBox["AX",
          FontWeight->"Bold"], " ", "=", " ", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  ", ",
  StyleBox["is found in four steps:  \n\n\t",
    FontFamily->"Times New Roman"],
  StyleBox["1.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  Construct the matrices  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox["L",
          FontWeight->"Bold"], ",", 
        RowBox[{
          StyleBox["U",
            FontWeight->"Bold"], "  ", 
          StyleBox["and",
            FontFamily->"Times New Roman"], "  ", 
          StyleBox["P",
            FontWeight->"Bold"]}]}]]],
  StyleBox[".  \n\t",
    FontFamily->"Times New Roman"],
  StyleBox["2.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  Compute the column vector   ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(P\ B\),
        FontWeight->"Bold"]]],
  StyleBox[".\n\t",
    FontFamily->"Times New Roman"],
  StyleBox["3.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  Solve  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox[\(L\ Y\),
          FontWeight->"Bold"], " ", "=", " ", 
        StyleBox[\(P\ B\),
          FontWeight->"Bold"]}]]],
  StyleBox["  for  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox["Y",
        FontWeight->"Bold"]]],
  StyleBox["  using forward substitution.\n\t",
    FontFamily->"Times New Roman"],
  StyleBox["4.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  Solve  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox[\(U\ X\),
          FontWeight->"Bold"], " ", "=", " ", 
        StyleBox["Y",
          FontWeight->"Bold"]}]]],
  "  ",
  StyleBox["for  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox["X",
        FontWeight->"Bold"]]],
  StyleBox["  using back substitution.",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["Proof  ",
    FontFamily->"New Century Schlbk",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  StyleBox[ButtonBox["LU Factorization",
    ButtonData:>{
      URL[ "http://www.ecs.fullerton.edu/~mathews/n2003/LUFactorProof.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  ",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["LU Factorization",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/LUFactorProof.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  ",
    FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell[TextData[{
  StyleBox["Computer Programs  ",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  StyleBox[ButtonBox["LU Factorization",
    ButtonData:>{
      URL[ "http://www.ecs.fullerton.edu/~mathews/n2003/LUFactorProg.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  ",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["LU Factorization",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/LUFactorProg.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  ",
    FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell[TextData[{
  StyleBox["The \"LU-solve\" Method",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "\n\n\tThe following pair of subroutines are the heart of the computational \
engine for the computational engine in the iterative refinement - residual \
correction method.  When we refer to a ",
  StyleBox[" \"LU-solve step\" it means use ",
    FontFamily->"Times New Roman"],
  StyleBox["LUfactor",
    FontWeight->"Bold"],
  StyleBox[" followed by ",
    FontFamily->"Times New Roman"],
  StyleBox["SolveLU",
    FontWeight->"Bold"],
  StyleBox[".  The next example will review these concepts, and more \
explanation is in the",
    FontFamily->"Times New Roman"],
  " ",
  ButtonBox["LU-Factorization module",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/LUFactorMod.html"], None},
    
    ButtonStyle->"Hyperlink"],
  " "
}], "Text"],

Cell[TextData[{
  StyleBox["Mathematica Subroutine (LUfactor).",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  "  Matrix  ",
  StyleBox["A",
    FontWeight->"Bold"],
  "  is a global variable and elements are changed when ",
  StyleBox["the ",
    FontFamily->"Times New Roman"],
  StyleBox["LUfactor",
    FontWeight->"Bold"],
  StyleBox[" ",
    FontFamily->"Times New Roman"],
  "is executed.  We save a copy of ",
  StyleBox["A",
    FontWeight->"Bold"],
  " in ",
  StyleBox["A0",
    FontWeight->"Bold"],
  "."
}], "Text"],

Cell[BoxData[
    \(\(\(LUfactor[
          A0_] := \[IndentingNewLine]Module[\ {A = A0, i, j, k, 
            n = Length[A], p, Z}, \ 
          r\  = \ Table[j, {j, n}]; \ \[IndentingNewLine]For[\ p = 1, \ 
            p \[LessEqual] n - 1, \ \(p++\), \[IndentingNewLine]For[\ 
              j = p + 1, \ 
              j \[LessEqual] 
                n, \ \(j++\), \[IndentingNewLine]\(If[\ 
                  Abs[A\_\(\(\[LeftDoubleBracket]\)\(r\_\(\(\
\[LeftDoubleBracket]\)\(j\)\(\[RightDoubleBracket]\)\), p\)\(\
\[RightDoubleBracket]\)\)] > 
                    Abs[A\_\(\(\[LeftDoubleBracket]\)\(r\_\(\(\
\[LeftDoubleBracket]\)\(p\)\(\[RightDoubleBracket]\)\), p\)\(\
\[RightDoubleBracket]\)\)], \ 
                  r\_\(\(\[LeftDoubleBracket]\)\({j, p}\)\(\
\[RightDoubleBracket]\)\)\  = \ 
                    r\_\(\(\[LeftDoubleBracket]\)\({p, j}\)\(\
\[RightDoubleBracket]\)\)\ \ ];\)\ ]; \[IndentingNewLine]For[\ k = p + 1, \ 
              k \[LessEqual] n, \ \(k++\), \ 
              A\_\(\(\[LeftDoubleBracket]\)\(r\_\(\(\[LeftDoubleBracket]\)\(k\
\)\(\[RightDoubleBracket]\)\), p\)\(\[RightDoubleBracket]\)\)\  = \ 
                A\_\(\(\[LeftDoubleBracket]\)\(r\_\(\(\[LeftDoubleBracket]\)\(\
k\)\(\[RightDoubleBracket]\)\), p\)\(\[RightDoubleBracket]\)\)\/A\_\(\(\
\[LeftDoubleBracket]\)\(r\_\(\(\[LeftDoubleBracket]\)\(p\)\(\
\[RightDoubleBracket]\)\), p\)\(\[RightDoubleBracket]\)\); \ \
\[IndentingNewLine]A\_\(\(\[LeftDoubleBracket]\)\(\ \)\(r\_\(\(\
\[LeftDoubleBracket]\)\(k\)\(\[RightDoubleBracket]\)\), Range[p + 1, n]\)\(\ \
\)\(\[RightDoubleBracket]\)\)\  = \ 
                A\_\(\(\[LeftDoubleBracket]\)\(\ \)\(r\_\(\(\
\[LeftDoubleBracket]\)\(k\)\(\[RightDoubleBracket]\)\), Range[p + 1, n]\)\(\ \
\)\(\[RightDoubleBracket]\)\)\  - \ 
                  A\_\(\(\[LeftDoubleBracket]\)\(r\_\(\(\[LeftDoubleBracket]\)\
\(k\)\(\[RightDoubleBracket]\)\), p\)\(\[RightDoubleBracket]\)\)\ A\_\(\(\
\[LeftDoubleBracket]\)\(\ \)\(r\_\(\(\[LeftDoubleBracket]\)\(p\)\(\
\[RightDoubleBracket]\)\), Range[p + 1, n]\)\(\ \
\)\(\[RightDoubleBracket]\)\);\ ];\ ]; \ \[IndentingNewLine]A1 = A; \ 
          L\  = \ \(P\  = \ IdentityMatrix[n]\); \ 
          Z\  = \ Table[0, {j, n}]; \ 
          P\  = \ P\_\(\(\[LeftDoubleBracket]\)\(r\)\(\[RightDoubleBracket]\)\
\); \ U\  = \ 
            A\_\(\(\[LeftDoubleBracket]\)\(r\)\(\[RightDoubleBracket]\)\); \
\[IndentingNewLine]For[\ i = 1, \ 
            i \[LessEqual] 
              n, \ \(i++\), \
\[IndentingNewLine]L\_\(\(\[LeftDoubleBracket]\)\(\ \)\(i, Range[1, i - \
1]\)\(\ \)\(\[RightDoubleBracket]\)\)\  = \ 
              A\_\(\(\[LeftDoubleBracket]\)\(\ \
\)\(r\_\(\(\[LeftDoubleBracket]\)\(i\)\(\[RightDoubleBracket]\)\), Range[1, i \
- 1]\)\(\ \)\(\[RightDoubleBracket]\)\); \ \[IndentingNewLine]U\_\(\(\
\[LeftDoubleBracket]\)\(\ \)\(i, Range[1, i - 1]\)\(\ \)\(\
\[RightDoubleBracket]\)\)\  = \ 
              Z\_\(\(\[LeftDoubleBracket]\)\(\ \)\(Range[1, i - 1]\)\(\ \)\(\
\[RightDoubleBracket]\)\);\ \ ];\ ];\)\(\ \ \)\)\)], "Input",
  PageWidth->Infinity],

Cell[TextData[{
  StyleBox["Mathematica Subroutine (SolveLU).",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  StyleBox["  The subroutine",
    FontFamily->"Times New Roman"],
  StyleBox[" SolveLU",
    FontWeight->"Bold"],
  StyleBox[" which is similar to the ",
    FontFamily->"Times New Roman"],
  ButtonBox["back substitution subroutine",
    ButtonData:>{
      URL[ 
      "http://math.fullerton.edu/mathews/n2003/BackSubstitutionMod.html"], 
      None},
    ButtonStyle->"Hyperlink"],
  StyleBox[".",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[BoxData[
    \(\(SolveLU[
          B0_] := \[IndentingNewLine]Module[{A, B = B0, k, n = Length[B], 
            X}, \ A\  = \ A1; \ 
          X = \(Y = Table[0, {n}]\); \ \[IndentingNewLine]For[\ k = 1, \ 
            k \[LessEqual] 
              n, \ \(k++\), \
\[IndentingNewLine]\(Y\_\(\(\[LeftDoubleBracket]\)\(k\)\(\[RightDoubleBracket]\
\)\)\  = \ \((B\_\(\(\[LeftDoubleBracket]\)\(r\_\(\(\[LeftDoubleBracket]\)\(k\
\)\(\[RightDoubleBracket]\)\)\)\(\[RightDoubleBracket]\)\) - \[Sum]\+\(j = \ \
1\)\%\(k - \
1\)\(A\_\(\(\[LeftDoubleBracket]\)\(r\_\(\(\[LeftDoubleBracket]\)\(k\)\(\
\[RightDoubleBracket]\)\), j\)\(\[RightDoubleBracket]\)\)\) 
                        Y\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\))\);\)\ ]; \[IndentingNewLine]For[\ k = n, \ 
            1 \[LessEqual] 
              k, \ \(k--\), \
\[IndentingNewLine]X\_\(\(\[LeftDoubleBracket]\)\(k\)\(\[RightDoubleBracket]\)\
\)\  = \ \((Y\_\(\(\[LeftDoubleBracket]\)\(k\)\(\[RightDoubleBracket]\)\) - \
\[Sum]\+\(j = \ k + 1\)\%n\( 
                            A\_\(\(\[LeftDoubleBracket]\)\(r\_\(\(\
\[LeftDoubleBracket]\)\(k\)\(\[RightDoubleBracket]\)\), 
                            j\)\(\[RightDoubleBracket]\)\)\) 
                        X\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\))\)/
                A\_\(\(\[LeftDoubleBracket]\)\(r\_\(\(\[LeftDoubleBracket]\)\(\
k\)\(\[RightDoubleBracket]\)\), k\)\(\[RightDoubleBracket]\)\)\ ]; \ \
\[IndentingNewLine]Return[X];\ ];\)\)], "Input",
  PageWidth->Infinity],

Cell[TextData[{
  StyleBox["Example 1.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Use the ",
  StyleBox["P A",
    FontWeight->"Bold"],
  "  =  ",
  StyleBox["L U",
    FontWeight->"Bold"],
  " factorization with pivoting to solve the linear system  ",
  Cell[BoxData[
      RowBox[{
        RowBox[{
          RowBox[{"(", GridBox[{
                {"2.0", "4.0", "1.0"},
                {"4.0", \(-10\), "2.0"},
                {"1.0", "2.0", "4.0"}
                }], ")"}], 
          InterpretationBox[
            RowBox[{"(", "\[NoBreak]", GridBox[{
                  {\(x\_1\)},
                  {\(x\_2\)},
                  {\(x\_3\)}
                  }], "\[NoBreak]", ")"}],
            MatrixForm[ {
              Subscript[ x, 1], 
              Subscript[ x, 2], 
              Subscript[ x, 3]}]]}], " ", "=", " ", 
        RowBox[{"(", GridBox[{
              {"5.0"},
              {\(-8.0\)},
              {"13.0"}
              }], ")"}]}]]],
  ".  "
}], "Text",
  Evaluatable->False,
  CellHorizontalScrolling->False,
  AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 1.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[TextData[{
  StyleBox["Remark.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 1]],
  "  The  ",
  StyleBox["LU",
    FontWeight->"Bold"],
  "  factorization part does not depend on  ",
  StyleBox["B",
    FontWeight->"Bold"],
  ".  To emphasize this, we only enter the matrix  ",
  StyleBox["A",
    FontWeight->"Bold"],
  "  at this time."
}], "Text"],

Cell[BoxData[{
    RowBox[{
      RowBox[{"A", " ", "=", 
        RowBox[{"(", GridBox[{
              {"2.0", "4.0", "1.0"},
              {"4.0", \(-10.0\), "2.0"},
              {"1.0", "2.0", "4.0"}
              }], ")"}]}], 
      ";"}], "\[IndentingNewLine]", \(vars = {\*"\"\<\!\(x\_1\)\>\"", \*"\"\<\
\!\(x\_2\)\>\"", \*"\"\<\!\(x\_3\)\>\""};\), "\[IndentingNewLine]", \(Bval = \
{\*"\"\<\!\(b\_1\)\>\"", \*"\"\<\!\(b\_2\)\>\"", \*"\"\<\!\(b\_3\)\>\""};\), \
"\[IndentingNewLine]", \(Print["\<To solve  A X = B\>"];\), "\
\[IndentingNewLine]", \(Print[MatrixForm[A]\ , MatrixForm[vars], "\< = \>", 
        MatrixForm[
          Bval]];\), "\[IndentingNewLine]", \(Print["\<Enter  B  \
later.\>"];\)}], "Input"],

Cell[TextData[{
  "Execute the  ",
  StyleBox["LUfactor",
    FontWeight->"Bold"],
  "  subroutine.   \n\n",
  StyleBox["Attention.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox["Make sure you",
    FontColor->RGBColor[0, 0, 1]],
  " ",
  StyleBox["evaluate the next cell",
    FontColor->RGBColor[1, 0, 1]],
  " ",
  StyleBox["!",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]]
}], "Text"],

Cell[BoxData[
    \(\(LUfactor[A];\)\)], "Input"],

Cell[TextData[{
  "Now print out the matrices  ",
  StyleBox["L",
    FontWeight->"Bold"],
  ",  ",
  StyleBox["U",
    FontWeight->"Bold"],
  ",  ",
  StyleBox["L.U",
    FontWeight->"Bold"],
  ",  ",
  StyleBox["L.U",
    FontWeight->"Bold"],
  " and  ",
  StyleBox["P.A",
    FontWeight->"Bold"],
  ".  (Remember we stored a copy of  ",
  StyleBox["A",
    FontWeight->"Bold"],
  "  in ",
  StyleBox["A0",
    FontWeight->"Bold"],
  ")."
}], "Text"],

Cell[BoxData[{
    \(\(Print["\<  L = \>", MatrixForm[L]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<  U = \>", MatrixForm[U]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<  P = \>", MatrixForm[P]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<  A = \>", MatrixForm[A]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<L U = \>", MatrixForm[L], MatrixForm[U], "\< = \>", 
        MatrixForm[L . U]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<P A = \>", "\<   \>", MatrixForm[P], 
        MatrixForm[A], "\<   \>", "\< = \>", 
        MatrixForm[P . A]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<L U = \>", 
        MatrixForm[L . U]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<P A = \>", 
        MatrixForm[P . A]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Does   L U = P A ?  \>", \ \ L . U \[Equal] 
          P . A\ ];\)\)}], "Input"],

Cell[TextData[{
  "Now enter the matrix  ",
  StyleBox["B",
    FontWeight->"Bold"],
  ".  "
}], "Text"],

Cell[BoxData[{
    RowBox[{
      RowBox[{"B", " ", "=", " ", 
        RowBox[{"(", GridBox[{
              {"5.0"},
              {\(-8.0\)},
              {"13.0"}
              }], ")"}]}], 
      ";"}], "\[IndentingNewLine]", \(Print["\<To solve  A X = B\>"];\), "\
\[IndentingNewLine]", \(Print[MatrixForm[A]\ , MatrixForm[vars], "\< = \>", 
        MatrixForm[B]];\)}], "Input"],

Cell[TextData[{
  "Solve the system  ",
  StyleBox["AX",
    FontWeight->"Bold"],
  " = ",
  StyleBox["B",
    FontWeight->"Bold"],
  " for  ",
  StyleBox["X",
    FontWeight->"Bold"],
  "."
}], "Text"],

Cell[BoxData[{
    \(\(X\  = \ SolveLU[B];\)\), "\[IndentingNewLine]", 
    \(\(vars = {\*"\"\<\!\(x\_1\)\>\"", \*"\"\<\!\(x\_2\)\>\"", \
\*"\"\<\!\(x\_3\)\>\""};\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Solve  A X = B\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[A]\ , MatrixForm[vars], "\< = \>", 
        MatrixForm[A . X]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Get\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<  X = \>", MatrixForm[vars], "\< = \>", 
        MatrixForm[X]\ \ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Verity it\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<A X = \>", MatrixForm[A]\ , MatrixForm[X], "\< = \>", 
        MatrixForm[A . X]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<  B = \>", MatrixForm[B]\ ];\)\)}], "Input"],

Cell[TextData[{
  StyleBox["We are done.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  "\n\n",
  StyleBox["Aside.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  For curiosity, we can check to see the \"in between\" steps that were \
made in the solution.  First, we solved",
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox["LY",
          FontWeight->"Bold"], " ", "=", " ", 
        StyleBox["PB",
          FontWeight->"Bold"]}]]],
  StyleBox["  for  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox["Y",
        FontWeight->"Bold"]]],
  StyleBox["  using forward substitution.  This is just for fun ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[BoxData[{
    \(\(Print["\<  L = \>", MatrixForm[L]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<P B = \>", MatrixForm[P], MatrixForm[B], "\< = \>", 
        MatrixForm[P . B]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Solve  L Y = P B  for  Y\>"];\)\), "\[IndentingNewLine]", 
    \(\(Yvars = {\*"\"\<\!\(y\_1\)\>\"", \*"\"\<\!\(y\_2\)\>\"", \*"\"\<\!\(y\
\_3\)\>\""};\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[L], MatrixForm[Yvars], "\< = \>", 
        MatrixForm[P . B]\ ];\)\), "\[IndentingNewLine]", 
    \(Print["\<Get\>"]\ \), "\[IndentingNewLine]", 
    \(\(Print["\<  Y = \>", MatrixForm[Y]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Verify it\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<L Y = \>", MatrixForm[L], MatrixForm[Y], "\< = \>", 
        MatrixForm[P . B]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<More\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<  L = \>", MatrixForm[L]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<  Y = \>", MatrixForm[Y]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<  P = \>", MatrixForm[P]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<L Y = \>", MatrixForm[L], MatrixForm[Y], "\< = \>", 
        MatrixForm[L . Y]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<P B = \>", "\<   \>", MatrixForm[P], 
        MatrixForm[B], "\<   \>", "\< = \>", 
        MatrixForm[P . B]\ ];\)\)}], "Input"],

Cell[TextData[{
  "Second, we solved",
  StyleBox[" ",
    FontFamily->"Times New Roman"],
  StyleBox[" ",
    FontFamily->"Times New Roman",
    FontWeight->"Bold"],
  Cell[BoxData[
      RowBox[{
        StyleBox["UX",
          FontWeight->"Bold"], " ", "=", " ", 
        StyleBox["Y",
          FontWeight->"Bold"]}]]],
  "  ",
  StyleBox["for  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox["X",
        FontWeight->"Bold"]]],
  StyleBox["  using back substitution.",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[BoxData[{
    \(\(Print["\<  U = \>", MatrixForm[U]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<  Y = \>", MatrixForm[Y]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Solve  U X = Y  for  X\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[U]\ , MatrixForm[vars], "\< = \>", 
        MatrixForm[Y]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Get\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<  X = \>", MatrixForm[X]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Verify it\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<U X = \>", MatrixForm[U]\ , MatrixForm[X], "\< = \>", 
        MatrixForm[U . X]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<  Y = \>", MatrixForm[Y]\ ];\)\)}], "Input"],

Cell[TextData[{
  "Finally, we can verify that the residual is  zero, i. e. use matrix \
multiplication to see if    ",
  StyleBox["AX",
    FontWeight->"Bold"],
  " - ",
  StyleBox["B",
    FontWeight->"Bold"],
  "  =  ",
  StyleBox["0",
    FontWeight->"Bold"],
  "."
}], "Text",
  Evaluatable->False,
  CellHorizontalScrolling->False,
  AspectRatioFixed->True],

Cell[BoxData[{
    \(\(Print["\<A X - B = \>", MatrixForm[A]\ , MatrixForm[X], "\< - \>", 
        MatrixForm[B]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<A X - B = \>", MatrixForm[A . X], "\< - \>", 
        MatrixForm[B]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<A X - B = \>", MatrixForm[A . X - B]\ ];\)\)}], "Input",
  PageWidth->Infinity],

Cell[TextData[{
  StyleBox["Aside.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  Suppose a new linear system  ",
  StyleBox["AX",
    FontWeight->"Bold"],
  " = ",
  StyleBox["B",
    FontWeight->"Bold"],
  "  is to be solved, where  ",
  StyleBox["A",
    FontWeight->"Bold"],
  "  is the same we used above, but  ",
  StyleBox["B",
    FontWeight->"Bold"],
  "  is a new vector.\nThen we enter  ",
  StyleBox["B",
    FontWeight->"Bold"],
  "  and only invoke the  ",
  StyleBox["SolveLU",
    FontWeight->"Bold"],
  "  subroutine."
}], "Text"],

Cell[BoxData[{
    RowBox[{
      RowBox[{"B", " ", "=", " ", 
        RowBox[{"(", GridBox[{
              {"1.0"},
              {"5.0"},
              {"4.0"}
              }], ")"}]}], 
      ";"}], "\[IndentingNewLine]", \(Print["\<To solve  A X = B\>"];\), "\
\[IndentingNewLine]", 
    RowBox[{\(Print[MatrixForm[A]\ , MatrixForm[vars], "\< = \>", 
          MatrixForm[B]\ ];\), " "}]}], "Input"],

Cell[TextData[{
  "Solve the new system  ",
  StyleBox["AX",
    FontWeight->"Bold"],
  " = ",
  StyleBox["B",
    FontWeight->"Bold"],
  " for  ",
  StyleBox["X",
    FontWeight->"Bold"],
  "."
}], "Text"],

Cell[BoxData[{
    \(\(X\  = \ SolveLU[B];\)\), "\[IndentingNewLine]", 
    \(\(vars = {\*"\"\<\!\(x\_1\)\>\"", \*"\"\<\!\(x\_2\)\>\"", \
\*"\"\<\!\(x\_3\)\>\""};\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Solve  A X = B\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[A]\ , MatrixForm[vars], "\< = \>", 
        MatrixForm[A . X]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Get\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<  X = \>", MatrixForm[vars], "\< = \>", 
        MatrixForm[X]\ \ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Verify it\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<A X = \>", MatrixForm[A]\ , MatrixForm[X], "\< = \>", 
        MatrixForm[A . X]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<  B = \>", MatrixForm[B]\ ];\)\)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Iterative Refinement - Residual Correction Method",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["\n\n\tThis is a method for improving the accuracy of a solution \
produced using ",
    FontFamily->"Times New Roman"],
  " LU-factorization",
  StyleBox[".  To start the process, the factorization  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox["A",
          FontWeight->"Bold"], 
        StyleBox[" ",
          FontWeight->"Bold"], "=", " ", 
        StyleBox[\(L\ U\),
          FontWeight->"Bold"]}]]],
  "  ",
  StyleBox["is computed only once, and we have\n\t\n(1)\t\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["L",
            FontWeight->"Bold"], 
          StyleBox[" ",
            FontWeight->"Bold"], 
          StyleBox["U",
            FontWeight->"Bold"], " ", 
          StyleBox["X",
            FontWeight->"Bold"]}], " ", "=", " ", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox[".  ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["U",
    FontFamily->"Times New Roman"],
  "se the LU solver to construct",
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  StyleBox["  which is an approximate solution to  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["A",
            FontWeight->"Bold"], " ", 
          StyleBox["X",
            FontWeight->"Bold"]}], " ", "=", " ", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox[",  i.e.  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["L",
            FontWeight->"Bold"], " ", 
          StyleBox["U",
            FontWeight->"Bold"], " ", 
          StyleBox[\(X\_1\),
            FontWeight->"Bold"]}], " ", "\[TildeTilde]", " ", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox["   ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["Form the error in the computation  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox["A",
          FontWeight->"Bold"], " ", 
        StyleBox[\(X\_1\),
          FontWeight->"Bold"]}]]],
  StyleBox[",  this is called the residual \n\n(2)\t\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox[\(R\_1\),
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{
          StyleBox["B",
            FontWeight->"Bold"], "-", 
          RowBox[{
            StyleBox["A",
              FontWeight->"Bold"], " ", 
            StyleBox[\(X\_1\),
              FontWeight->"Bold"]}]}]}]]],
  ".  ",
  StyleBox["\n\nNow subtract  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["A",
            FontWeight->"Bold"], " ", 
          StyleBox[\(X\_1\),
            FontWeight->"Bold"]}], " ", "=", " ", 
        RowBox[{
          StyleBox["B",
            FontWeight->"Bold"], " ", "-", " ", 
          StyleBox[\(R\_1\),
            FontWeight->"Bold"]}]}]]],
  StyleBox["  from  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["A",
            FontWeight->"Bold"], " ", 
          StyleBox["X",
            FontWeight->"Bold"]}], " ", "=", " ", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox[",  obtaining  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          RowBox[{
            StyleBox["A",
              FontWeight->"Bold"], " ", 
            StyleBox["X",
              FontWeight->"Bold"]}], " ", "-", " ", 
          RowBox[{
            StyleBox["A",
              FontWeight->"Bold"], " ", 
            StyleBox[\(X\_1\),
              FontWeight->"Bold"]}]}], " ", "=", " ", 
        RowBox[{
          StyleBox["B",
            FontWeight->"Bold"], " ", "-", 
          RowBox[{"(", 
            RowBox[{
              StyleBox["B",
                FontWeight->"Bold"], "-", " ", 
              StyleBox[\(R\_1\),
                FontWeight->"Bold"]}], ")"}]}]}]]],
  "  or",
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["A",
            FontWeight->"Bold"], " ", 
          RowBox[{"(", 
            RowBox[{
              StyleBox["X",
                FontWeight->"Bold"], "-", 
              StyleBox[\(X\_1\),
                FontWeight->"Bold"]}], ")"}]}], "=", " ", 
        StyleBox[\(R\_1\),
          FontWeight->"Bold"]}]]],
  ".  Use the substitution  ",
  Cell[BoxData[
      RowBox[{
        StyleBox["\[CapitalDelta]X",
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{
          StyleBox["X",
            FontWeight->"Bold"], "-", 
          StyleBox[\(X\_1\),
            FontWeight->"Bold"]}]}]]],
  "  and this equation becomes",
  StyleBox["  \n\n   \t\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["A",
            FontWeight->"Bold"], " ", 
          StyleBox["\[CapitalDelta]X",
            FontWeight->"Bold"]}], "=", " ", 
        StyleBox[\(R\_1\),
          FontWeight->"Bold"]}]]],
  ".   \n\nUse the LU solver to compute  ",
  Cell[BoxData[
      StyleBox["\[CapitalDelta]X",
        FontWeight->"Bold"]]],
  "  as follows  ",
  StyleBox["\n\n(3)\t\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["\[CapitalDelta]X",
            FontWeight->"Bold"], "   ", 
          StyleBox["is",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], 
          StyleBox[" ",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], 
          StyleBox["the",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], 
          StyleBox[" ",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], 
          StyleBox["solution",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], 
          StyleBox[" ",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], 
          StyleBox["to",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], "   ", 
          StyleBox["L",
            FontWeight->"Bold"], 
          StyleBox[" ",
            FontWeight->"Bold"], 
          StyleBox["U",
            FontWeight->"Bold"], " ", 
          StyleBox["\[CapitalDelta]X",
            FontWeight->"Bold"]}], " ", "=", " ", 
        StyleBox[\(R\_1\),
          FontWeight->"Bold"]}]]],
  ".  "
}], "Text"],

Cell[TextData[{
  StyleBox["Then the improvement  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\_2\),
        FontWeight->"Bold"]]],
  StyleBox["  is made  ",
    FontFamily->"Times New Roman"],
  StyleBox["\n",
    FontFamily->"CMSS8",
    FontSize->10],
  "\n(4)\t\t\t",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(X\_2\),
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{
          StyleBox[\(X\_1\),
            FontWeight->"Bold"], " ", "+", " ", 
          StyleBox["\[CapitalDelta]X",
            FontWeight->"Bold"]}]}]]]
}], "Text"],

Cell[TextData[{
  "The process can be iterated to obtain a sequence ",
  Cell[BoxData[
      SubsuperscriptBox[
        RowBox[{"{", 
          SubscriptBox[
            StyleBox["X",
              FontWeight->"Bold"], "k"], "}"}], \(k = 1\), "m"]]],
  "  converging to  ",
  Cell[BoxData[
      StyleBox["X",
        FontWeight->"Bold"]]],
  "  \n\t",
  StyleBox["\n\t\t",
    FontFamily->"Times New Roman"],
  "\tFor  ",
  Cell[BoxData[
      RowBox[{\(k = 2\), 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "3", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "...", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "m"}]]],
  "  \n\t\n\t\t\t",
  Cell[BoxData[{
      RowBox[{
        RowBox[{
          StyleBox[\(R\_\(k - 1\)\),
            FontWeight->"Bold"], " ", "=", " ", 
          RowBox[{
            StyleBox["B",
              FontWeight->"Bold"], "-", 
            RowBox[{
              StyleBox["A",
                FontWeight->"Bold"], " ", 
              SubscriptBox[
                StyleBox["X",
                  FontWeight->"Bold"], \(k - 1\)]}]}]}], " "}], "\n", 
      RowBox[{
        RowBox[{
          StyleBox["\[CapitalDelta]X",
            FontWeight->"Bold"], "   ", 
          StyleBox["is",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], 
          StyleBox[" ",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], 
          StyleBox["the",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], 
          StyleBox[" ",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], 
          StyleBox["solution",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], 
          StyleBox[" ",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], 
          StyleBox["to",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], "   ", 
          StyleBox["L",
            FontWeight->"Bold"], 
          StyleBox[" ",
            FontWeight->"Bold"], 
          StyleBox["U",
            FontWeight->"Bold"], " ", 
          StyleBox["\[CapitalDelta]X",
            FontWeight->"Bold"]}], " ", "=", " ", 
        StyleBox[\(R\_\(k - 1\)\),
          FontWeight->"Bold"]}], "\n", 
      RowBox[{
        SubscriptBox[
          StyleBox["X",
            FontWeight->"Bold"], "k"], " ", "=", " ", 
        RowBox[{
          SubscriptBox[
            StyleBox["X",
              FontWeight->"Bold"], "k"], " ", "+", " ", 
          StyleBox["\[CapitalDelta]X",
            FontWeight->"Bold"], " "}]}]}]]
}], "Text"],

Cell[TextData[{
  StyleBox["Proof",
    FontFamily->"New Century Schlbk",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  StyleBox[ButtonBox["Iterative Refinement",
    ButtonData:>{
      URL[ 
      "http://math.fullerton.edu/mathews/n2003/IterativeRefinementProof.html"]\
, None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"]
}], "Text"],

Cell[TextData[{
  StyleBox["Algorithm (Iterative Refinement).",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  "  ",
  StyleBox["Compute the factorization  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox["A",
          FontWeight->"Bold"], 
        StyleBox[" ",
          FontWeight->"Bold"], "=", " ", 
        StyleBox[\(L\ U\),
          FontWeight->"Bold"]}]]],
  "  ",
  StyleBox["is computed once.  The notation  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox["Z",
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{"SolveLU", "[", " ", 
          StyleBox["V",
            FontWeight->"Bold"], " ", "]"}]}]]],
  "  means that ",
  Cell[BoxData[
      StyleBox["Z",
        FontWeight->"Bold"]]],
  " is the computed solution for the equation  ",
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["L",
            FontWeight->"Bold"], 
          StyleBox[" ",
            FontWeight->"Bold"], 
          StyleBox["U",
            FontWeight->"Bold"], " ", 
          StyleBox["Z",
            FontWeight->"Bold"]}], " ", "=", " ", 
        StyleBox["V",
          FontWeight->"Bold"]}]]],
  StyleBox[".  \n",
    FontFamily->"Times New Roman"],
  "\n\t\tSet  ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(X\_1\),
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{"SolveLU", "[", " ", 
          StyleBox["B",
            FontWeight->"Bold"], " ", "]"}]}]]],
  "\n\t\n\t\t",
  Cell[BoxData[{
      RowBox[{
        StyleBox[\(R\_1\),
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{
          StyleBox["B",
            FontWeight->"Bold"], "-", 
          StyleBox[\(A . X\_\(\(1\)\(\ \)\)\),
            FontWeight->"Bold"]}]}], "\n", 
      RowBox[{
        StyleBox["\[CapitalDelta]X",
          FontWeight->"Bold"], 
        StyleBox[" ",
          FontWeight->"Bold"], "=", "  ", 
        RowBox[{"SolveLU", "[", " ", 
          StyleBox[\(R\_1\),
            FontWeight->"Bold"], " ", "]"}]}], "\n", 
      RowBox[{
        StyleBox[\(X\_2\),
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{
          StyleBox[\(X\_1\),
            FontWeight->"Bold"], " ", "+", " ", 
          StyleBox["\[CapitalDelta]X",
            FontWeight->"Bold"], " "}]}]}]],
  "\n\t",
  StyleBox["\n\t",
    FontFamily->"Times New Roman"],
  "\tFor  ",
  Cell[BoxData[
      RowBox[{\(k = 2\), 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "3", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "...", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "m"}]]],
  "  \n\t\n\t\t",
  Cell[BoxData[{
      RowBox[{
        StyleBox[\(R\_\(k - 1\)\),
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{
          StyleBox["B",
            FontWeight->"Bold"], "-", 
          StyleBox[\(A . X\_\(\(k - 1\)\(\ \)\)\),
            FontWeight->"Bold"]}]}], "\n", 
      RowBox[{
        StyleBox["\[CapitalDelta]X",
          FontWeight->"Bold"], " ", "=", "  ", 
        RowBox[{"SolveLU", "[", " ", 
          StyleBox[\(R\_\(k - 1\)\),
            FontWeight->"Bold"], " ", "]"}]}], "\n", 
      RowBox[{
        StyleBox[\(X\_k\),
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{
          StyleBox[\(X\_k\),
            FontWeight->"Bold"], " ", "+", " ", 
          StyleBox["\[CapitalDelta]X",
            FontWeight->"Bold"], " "}]}]}]]
}], "Text"],

Cell[TextData[{
  StyleBox["Computer Programs",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  StyleBox[ButtonBox["Iterative Refinement",
    ButtonData:>{
      URL[ 
      "http://math.fullerton.edu/mathews/n2003/IterativeRefinementProg.html"],
       None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"]
}], "Text"],

Cell[TextData[{
  StyleBox["Mathematica Subroutine (Iterative Refinement).",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  "  The following subroutine will perform the ",
  Cell[BoxData[
      FormBox[
        StyleBox[\(k\^th\),
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], TraditionalForm]]],
  " step of iterative refinement.  Input ",
  Cell[BoxData[
      StyleBox[\(X\_k\),
        FontWeight->"Bold"]]],
  " and output ",
  Cell[BoxData[
      StyleBox[\(X\_\(k + 1\)\),
        FontWeight->"Bold"]]],
  ".  The local variables in the subroutine are labeled as the first step.  \
The subroutine call should be  ",
  Cell[BoxData[
      \(X\_\(k + 1\)\  = \ IterateRefine[k]\)]],
  ",  it is assumed that ",
  Cell[BoxData[
      \(X\_k\)],
    FontWeight->"Bold"],
  " is already a global variable and will create and return  ",
  Cell[BoxData[
      \(X\_\(k + 1\)\)],
    FontWeight->"Bold"],
  ".  Notice that the computational part of the subroutine consists of only \
three lines:\n\n\t\t",
  Cell[BoxData[{
      \(\(R\_k\  = \ B - A . X\_k;\)\), "\[IndentingNewLine]", 
      \(\(\[CapitalDelta]X\  = \ \ SolveLU[R\_k];\)\), 
    "\[IndentingNewLine]", 
      \(\(X\_\(k + 1\)\  = \ X\_k\  + \ \[CapitalDelta]X;\)\)}]],
  "\n\nThe remainder of the subroutine consists of print statements. "
}], "Text"],

Cell[BoxData[
    \(IterateRefine[k0_] := 
      Module[{k = k0}, \[IndentingNewLine]R\_k\  = \ 
          B - A . X\_k; \[IndentingNewLine]\[CapitalDelta]X\  = \ \ SolveLU[
            R\_k]; \[IndentingNewLine]X\_\(k + 1\)\  = \ 
          X\_k\  + \ \[CapitalDelta]X; \[IndentingNewLine]vars = 
          Table["\<x\>"\_i, {i, 1, 
              Length[A]}]; \[IndentingNewLine]\[CapitalDelta]vars = 
          Table["\<\[CapitalDelta]x\>"\_i, {i, 1, 
              Length[A]}]; \[IndentingNewLine]Print["\<X\>"\_k, "\< = \>", \ 
          NumberForm[MatrixForm[X\_k], 
            17]\ ]; \[IndentingNewLine]Print["\<R\>"\_k, "\< = B - A.\>", \
"\<X\>"\_k, "\< = \>", \ MatrixForm[B], "\< - \>", \ MatrixForm[A], \ 
          MatrixForm[
            X\_k]\ ]; \[IndentingNewLine]Print["\<R\>"\_k, "\< = B - A.\>", "\
\<X\>"\_k, "\< = \>", \ MatrixForm[B], "\< - \>", \ 
          MatrixForm[A . X\_k], "\< = \>", \ \ MatrixForm[
            R\_k]\ ]; \[IndentingNewLine]Print["\<R\>"\_k, "\< = \>", \ 
          MatrixForm[
            R\_k]\ ]; \[IndentingNewLine]Print["\<\n\>", "\<Solve  A \
\[CapitalDelta]X  =  L U \[CapitalDelta]X  = \>", "\<R\>"\_k, "\<\n\>"]; \ \
\[IndentingNewLine]Print[MatrixForm[A], 
          MatrixForm[\[CapitalDelta]vars], "\< = \>", 
          MatrixForm[
            R\_k]]; \[IndentingNewLine]Print["\<Get\>"]; \
\[IndentingNewLine]Print["\<\[CapitalDelta]X = \>", 
          MatrixForm[\[CapitalDelta]vars], "\< = \>", 
          NumberForm[MatrixForm[N[\[CapitalDelta]X]], 
            17]\ ]; \[IndentingNewLine]Print["\<\>"]; \
\[IndentingNewLine]Print["\<X\>"\_\(k + 1\), "\< = \>", "\<X\>"\_k, "\< + \
\[CapitalDelta]X\>", "\< = \>", \ 
          NumberForm[MatrixForm[N[X\_k]], 17], "\< + \>", \ 
          NumberForm[MatrixForm[N[\[CapitalDelta]X]], 17], "\< = \>", \ 
          NumberForm[MatrixForm[N[X\_\(k + 1\)]], 
            17]\ ]; \[IndentingNewLine]Print["\<\>"]; \
\[IndentingNewLine]Print["\<X\>"\_\(k + 1\), "\< = \>", 
          MatrixForm[vars], "\< = \>", \ 
          NumberForm[MatrixForm[N[X\_\(k + 1\)]], 
            17]\ ]; \ \[IndentingNewLine]R\_\(k + 1\)\  = \ 
          B - A . X\_\(k + 1\); \[IndentingNewLine]Return[
          X\_\(k + 1\)];\ ]\)], "Input"],

Cell[TextData[{
  StyleBox["Remark 1.",
    FontFamily->"New Century Schlbk",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  StyleBox["  Historically, iterative improvement was devised to use a \
limited amount of \"",
    FontFamily->"New Century Schlbk"],
  ButtonBox["double precision",
    ButtonData:>{
      URL[ 
      "http://www.cray.com/swpubs/manuals/007-3694-005/html-007-3694-005/\
c15005.htm#AEN15206"], None},
    ButtonStyle->"Hyperlink"],
  StyleBox["\" arithmetic to try to refine the computed solution  ",
    FontFamily->"New Century Schlbk"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  StyleBox["  of a linear system",
    FontFamily->"New Century Schlbk"],
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["A",
            FontWeight->"Bold"], " ", 
          StyleBox["X",
            FontWeight->"Bold"]}], " ", "=", " ", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox[".  We see an inherent difficulty in this process:  if we cannot \
solve  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["A",
            FontWeight->"Bold"], " ", 
          StyleBox["X",
            FontWeight->"Bold"]}], "=", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox["  exactly, we cannot expect to solve  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["A",
            FontWeight->"Bold"], " ", 
          StyleBox["\[CapitalDelta]X",
            FontWeight->"Bold"]}], "=", 
        StyleBox["R",
          FontWeight->"Bold"]}]]],
  StyleBox["  exactly!  The signal feature of iterative improvement is to \
calculate the residuals  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox[\(R\_\(k - 1\)\),
          FontWeight->"Bold"], "=", 
        RowBox[{
          StyleBox["B",
            FontWeight->"Bold"], "-", 
          RowBox[{
            StyleBox["A",
              FontWeight->"Bold"], " ", 
            StyleBox[\(X\_\(\(k - 1\)\(\ \)\)\),
              FontWeight->"Bold"]}]}]}]]],
  StyleBox[" in double precision and everything else in single precision.",
    FontFamily->"Times New Roman"],
  StyleBox["  ",
    FontFamily->"New Century Schlbk"],
  ButtonBox["FORTRAN",
    ButtonData:>{
      URL[ "http://www.kcl.ac.uk/kis/support/cc/fortran/engfaq.html"], None},
    ButtonStyle->"Hyperlink"],
  StyleBox[" is well suited for defining the type of a variable to be either \
single precision or ",
    FontFamily->"New Century Schlbk"],
  ButtonBox["double precision",
    ButtonData:>{
      URL[ 
      "http://www.cray.com/swpubs/manuals/007-3694-005/html-007-3694-005/\
c15005.htm#AEN15206"], None},
    ButtonStyle->"Hyperlink"],
  StyleBox[".  A resource for this technique is found in, ",
    FontFamily->"New Century Schlbk"],
  ButtonBox["Section 2.5 Iterative Improvement of a Solution to Linear \
Equations pp. 47-50",
    ButtonData:>{
      URL[ "http://lib-www.lanl.gov/numerical/bookfpdf.html"], None},
    ButtonStyle->"Hyperlink"],
  ", in the book by William H. Press, Saul A. Teukolsky, William T. \
Vetterling, Brian P. Flannery: Numerical Recipes in Fortran 77, Cambridge \
University Press, 1992, Cambridge, UK. "
}], "Text"],

Cell[TextData[{
  StyleBox["Remark 2.",
    FontFamily->"New Century Schlbk",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  StyleBox["  The examples we present are for pedagogical purposes and \
because this module does not use FORTRAN, we cannot illustrate the full \
purpose of iterative improvement.  Also, because the convergence will be \
rapid, we only perform two iterations and to not need a subroutine for the \
computations. ",
    FontFamily->"New Century Schlbk"]
}], "Text"],

Cell[TextData[{
  StyleBox["Example 2.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Solve  ",
  Cell[BoxData[
      RowBox[{
        RowBox[{
          RowBox[{"(", "\[NoBreak]", GridBox[{
                {"1", \(-4\), "4", "7"},
                {"0", "2", \(-1\), "0"},
                {"2", "1", "1", "4"},
                {"2", \(-3\), "2", \(-5\)}
                }], "\[NoBreak]", ")"}], 
          InterpretationBox[
            RowBox[{"(", "\[NoBreak]", GridBox[{
                  {\(x\_1\)},
                  {\(x\_2\)},
                  {\(x\_3\)},
                  {\(x\_4\)}
                  }], "\[NoBreak]", ")"}],
            MatrixForm[ {
              Subscript[ "x", 1], 
              Subscript[ "x", 2], 
              Subscript[ "x", 3], 
              Subscript[ "x", 4]}]]}], "  ", "=", " ", 
        RowBox[{"(", "\[NoBreak]", GridBox[{
              {"4"},
              {"5"},
              {"2"},
              {"9"}
              }], "\[NoBreak]", ")"}]}]]],
  ".  Use iterative refinement. "
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 2.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[TextData[{
  "Use the menu \"Input\" then submenu \"Create Table/Matrix/Palette\" to \
enter matrices ",
  StyleBox["A",
    FontWeight->"Bold"],
  " and ",
  StyleBox["M",
    FontWeight->"Bold"],
  " and vector ",
  StyleBox["B",
    FontWeight->"Bold"],
  "."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[{
    RowBox[{
      RowBox[{
        RowBox[{"A", " ", "=", " ", 
          TagBox[
            RowBox[{"(", "\[NoBreak]", GridBox[{
                  {"1", \(-4\), "4", "7"},
                  {"0", "2", \(-1\), "0"},
                  {"2", "1", "1", "4"},
                  {"2", \(-3\), "2", \(-5\)}
                  }], "\[NoBreak]", ")"}],
            Function[ BoxForm`e$, 
              MatrixForm[ BoxForm`e$]]]}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"B", " ", "=", " ", 
          TagBox[
            RowBox[{"(", "\[NoBreak]", GridBox[{
                  {"4"},
                  {"5"},
                  {"2"},
                  {"9"}
                  }], "\[NoBreak]", ")"}],
            Function[ BoxForm`e$, 
              MatrixForm[ BoxForm`e$]]]}], ";"}], 
      " "}], "\[IndentingNewLine]", \(vars = 
        Table["\<x\>"\_i, {i, 1, 
            Length[A]}];\), "\[IndentingNewLine]", \(X\_true\  = 
        LinearSolve[A, 
          B];\), "\[IndentingNewLine]", \(Print["\<Solve the system\>"];\), "\
\[IndentingNewLine]", \(Print[MatrixForm[A], MatrixForm[vars], "\< = \>", 
        MatrixForm[
          B]];\), "\[IndentingNewLine]", \(Print["\<The true solution is\>"];\
\), "\[IndentingNewLine]", \(Print["\<X = \>", MatrixForm[vars], "\< = \>", 
        MatrixForm[X\_true], "\< = \>", 
        MatrixForm[N[X\_true]]\ ];\)}], "Input"],

Cell[TextData[{
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " has obtained the \"true solution\" and there is no refinement possible."
}], "Text"],

Cell[TextData[{
  "So we will select a vector ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " close to ",
  Cell[BoxData[
      StyleBox["X",
        FontWeight->"Bold"]]],
  " and then perform iterative refinement. \nFor illustration purposes, we \
choose  ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(X\_1\),
          FontWeight->"Bold"], " ", "=", 
        TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
                {\(-15\)},
                {"20"},
                {"34"},
                {\(-6\)}
                }], "\[NoBreak]", ")"}],
          Function[ BoxForm`e$, 
            MatrixForm[ BoxForm`e$]]]}]]],
  "  which is close to  ",
  Cell[BoxData[
      RowBox[{
        StyleBox["X",
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{
          TagBox[
            RowBox[{"(", "\[NoBreak]", GridBox[{
                  {\(-\(362\/25\)\)},
                  {\(489\/25\)},
                  {\(853\/25\)},
                  {\(-\(142\/25\)\)}
                  }], "\[NoBreak]", ")"}],
            Function[ BoxForm`e$, 
              MatrixForm[ BoxForm`e$]]], " ", "=", " ", 
          TagBox[
            RowBox[{"(", "\[NoBreak]", GridBox[{
                  {\(-14.48`\)},
                  {"19.56`"},
                  {"34.12`"},
                  {\(-5.68`\)}
                  }], "\[NoBreak]", ")"}],
            Function[ BoxForm`e$, 
              MatrixForm[ BoxForm`e$]]]}]}]]],
  ". "
}], "Text"],

Cell[TextData[{
  "The first thing we must do is to compute the LU-factorization once.\n\n",
  StyleBox["Attention.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox["Make sure you",
    FontColor->RGBColor[0, 0, 1]],
  " ",
  StyleBox["evaluate the next cell",
    FontColor->RGBColor[1, 0, 1]],
  " ",
  StyleBox["!",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]]
}], "Text"],

Cell[BoxData[
    \(\(LUfactor[A];\)\)], "Input"],

Cell["Next, perform the first step of iterative refinement.", "Text"],

Cell[BoxData[{
    RowBox[{
      RowBox[{\(X\_1\), " ", "=", 
        TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
                {\(-15\)},
                {"20"},
                {"34"},
                {\(-6\)}
                }], "\[NoBreak]", ")"}],
          Function[ BoxForm`e$, 
            MatrixForm[ BoxForm`e$]]]}], 
      ";"}], "\[IndentingNewLine]", \(R\_1\  = \ 
        B - A . X\_1;\), "\[IndentingNewLine]", \(\[CapitalDelta]X\  = \ \ \
SolveLU[R\_1];\), "\[IndentingNewLine]", \(X\_2\  = \ 
        X\_1\  + \ \[CapitalDelta]X;\), "\[IndentingNewLine]", \(\
\[CapitalDelta]vars = 
        Table["\<\[CapitalDelta]x\>"\_i, {i, 1, 
            Length[A]}];\), "\[IndentingNewLine]", \(Print[\*"\"\<\!\(X\_1\) \
=\>\"", \ MatrixForm[
          X\_1]\ ];\), "\[IndentingNewLine]", \(Print[\*"\"\<\!\(R\_1\) = B - \
A.\!\(X\_1\)\>\"", "\< = \>", \ MatrixForm[B], "\< - \>", \ MatrixForm[A], \ 
        MatrixForm[
          X\_1]\ ];\), "\[IndentingNewLine]", \(Print[\*"\"\<\!\(R\_1\) = B - \
A.\!\(X\_1\)\>\"", "\< = \>", \ MatrixForm[B], "\< - \>", \ 
        MatrixForm[
          A . X\_1]\ ];\), "\[IndentingNewLine]", \(Print[\*"\"\<\!\(R\_1\) = \
B - A.\!\(X\_1\)\>\"", "\< = \>", \ \ MatrixForm[
          R\_1]\ ];\), "\[IndentingNewLine]", \(Print[\*"\"\<\!\(R\_1\) = \
\>\"", \ MatrixForm[R\_1]\ ];\), "\[IndentingNewLine]", 
    RowBox[{\(Print["\<\n\>", \*"\"\<Solve  A \[CapitalDelta]X  =  L U \
\[CapitalDelta]X  =  \!\(R\_1\)\>\"", "\<\n\>"];\), 
      " "}], "\[IndentingNewLine]", \(Print[MatrixForm[A], 
        MatrixForm[\[CapitalDelta]vars], "\< = \>", 
        MatrixForm[
          R\_1]];\), "\[IndentingNewLine]", \(Print["\<Get\>"];\), "\
\[IndentingNewLine]", \(Print["\<\[CapitalDelta]X = \>", 
        MatrixForm[\[CapitalDelta]vars], "\< = \>", 
        MatrixForm[\[CapitalDelta]X], "\< = \>", 
        MatrixForm[
          N[\[CapitalDelta]X]]\ ];\), "\[IndentingNewLine]", \(Print["\<\>"];\
\), "\[IndentingNewLine]", \(Print[\*"\"\<\!\(X\_2\) = \!\(X\_1\) + \
\[CapitalDelta]X\>\"", "\< = \>", \ MatrixForm[X\_1], "\< + \>", \ 
        MatrixForm[\[CapitalDelta]X], "\< = \>", \ 
        MatrixForm[
          X\_2]\ ];\), "\[IndentingNewLine]", \(Print[\*"\"\<\!\(X\_2\) = \
\!\(X\_1\) + \[CapitalDelta]X\>\"", "\< = \>", \ 
        MatrixForm[N[X\_1]], "\< + \>", \ 
        MatrixForm[N[\[CapitalDelta]X]], "\< = \>", \ 
        MatrixForm[
          N[X\_2]]\ ];\), "\[IndentingNewLine]", \(Print["\<\>"];\), "\
\[IndentingNewLine]", \(Print[\*"\"\<\!\(X\_2\) = \>\"", 
        MatrixForm[vars], "\< = \>", \ MatrixForm[X\_2], "\< = \>", \ 
        MatrixForm[N[X\_2]]\ ];\)}], "Input"],

Cell["\<\
Iterative refinement has converged after one step and we are done. \
\>", "Text"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 3.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  " Solve  ",
  Cell[BoxData[
      RowBox[{
        RowBox[{
          RowBox[{"(", "\[NoBreak]", GridBox[{
                {"1", "2", "4", "3", "5"},
                {"3", "5", "3", "1", "2"},
                {"1", "4", "4", "2", "1"},
                {"4", "1", "2", "5", "3"},
                {"5", "2", "1", "4", "1"}
                }], "\[NoBreak]", ")"}], 
          RowBox[{"(", GridBox[{
                {\(x\_1\)},
                {\(x\_2\)},
                {\(x\_3\)},
                {\(x\_4\)},
                {\(x\_5\)}
                }], ")"}]}], " ", "=", " ", 
        RowBox[{"(", GridBox[{
              {"5"},
              {"6"},
              {"7"},
              {"8"},
              {"9"}
              }], ")"}]}]]],
  ".  Use iterative refinement. "
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 3.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[TextData[{
  "Use the menu \"Input\" then submenu \"Create Table/Matrix/Palette\" to \
enter matrices ",
  StyleBox["A",
    FontWeight->"Bold"],
  " and ",
  StyleBox["M",
    FontWeight->"Bold"],
  " and vector ",
  StyleBox["B",
    FontWeight->"Bold"],
  "."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[{
    RowBox[{
      RowBox[{
        RowBox[{"A", " ", "=", 
          TagBox[
            TagBox[
              RowBox[{"(", "\[NoBreak]", GridBox[{
                    {"1", "2", "4", "3", "5"},
                    {"3", "5", "3", "1", "2"},
                    {"1", "4", "4", "2", "1"},
                    {"4", "1", "2", "5", "3"},
                    {"5", "2", "1", "4", "1"}
                    }], "\[NoBreak]", ")"}],
              Function[ BoxForm`e$, 
                MatrixForm[ BoxForm`e$]]],
            Function[ BoxForm`e$, 
              MatrixForm[ BoxForm`e$]]]}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"B", " ", "=", " ", 
          RowBox[{"(", GridBox[{
                {"5"},
                {"6"},
                {"7"},
                {"8"},
                {"9"}
                }], ")"}]}], ";"}], 
      " "}], "\[IndentingNewLine]", \(vars = 
        Table["\<x\>"\_i, {i, 1, 
            Length[A]}];\), "\[IndentingNewLine]", \(X\_true\  = 
        LinearSolve[A, 
          B];\), "\[IndentingNewLine]", \(Print["\<Solve the system\>"];\), "\
\[IndentingNewLine]", \(Print[MatrixForm[A], MatrixForm[vars], "\< = \>", 
        MatrixForm[
          B]];\), "\[IndentingNewLine]", \(Print["\<The true solution is\>"];\
\), "\[IndentingNewLine]", \(Print["\<X = \>", MatrixForm[vars], "\< = \>", 
        MatrixForm[X\_true], "\< = \>", 
        MatrixForm[N[X\_true]]\ ];\)}], "Input"],

Cell[TextData[{
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " has obtained the \"true solution\" and there is no refinement possible."
}], "Text"],

Cell[TextData[{
  "So we will select a vector ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " close to ",
  Cell[BoxData[
      StyleBox["X",
        FontWeight->"Bold"]]],
  " and then perform iterative refinement. \nFor illustration purposes, we \
choose  ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(X\_1\),
          FontWeight->"Bold"], " ", "=", 
        TagBox[
          TagBox[
            RowBox[{"(", "\[NoBreak]", GridBox[{
                  {\(\(\ \ \ \)\(60\)\)},
                  {\(-68\)},
                  {\(\(\ \ \ \)\(85\)\)},
                  {\(-56\)},
                  {\(-20\)}
                  }], "\[NoBreak]", ")"}],
            Function[ BoxForm`e$, 
              MatrixForm[ BoxForm`e$]]],
          Function[ BoxForm`e$, 
            MatrixForm[ BoxForm`e$]]]}]]],
  "  which is close to  ",
  Cell[BoxData[
      RowBox[{
        StyleBox["X",
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{
          TagBox[
            TagBox[
              RowBox[{"(", "\[NoBreak]", GridBox[{
                    {\(\(\ \ \)\(119\/2\)\)},
                    {\(-\(135\/2\)\)},
                    {\(\(\ \ \)\(87\)\)},
                    {\(-55\)},
                    {\(-\(41\/2\)\)}
                    }], "\[NoBreak]", ")"}],
              Function[ BoxForm`e$, 
                MatrixForm[ BoxForm`e$]]],
            Function[ BoxForm`e$, 
              MatrixForm[ BoxForm`e$]]], " ", "=", " ", 
          TagBox[
            RowBox[{"(", "\[NoBreak]", GridBox[{
                  {\(\(\ \ \)\(59.5`\)\)},
                  {\(-67.5`\)},
                  {\(\(\ \ \)\(87.0\)\)},
                  {\(-55.0\)},
                  {\(-20.5`\)}
                  }], "\[NoBreak]", ")"}],
            Function[ BoxForm`e$, 
              MatrixForm[ BoxForm`e$]]]}]}]]],
  ". "
}], "Text"],

Cell[TextData[{
  "The first thing we must do is to compute the LU-factorization once.\n\n",
  StyleBox["Attention.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox["Make sure you",
    FontColor->RGBColor[0, 0, 1]],
  " ",
  StyleBox["evaluate the next cell",
    FontColor->RGBColor[1, 0, 1]],
  " ",
  StyleBox["!",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]]
}], "Text"],

Cell[BoxData[
    \(\(LUfactor[A];\)\)], "Input"],

Cell["Next, perform the first step of iterative refinement.", "Text"],

Cell[BoxData[{
    RowBox[{
      RowBox[{\(X\_1\), " ", "=", 
        TagBox[
          TagBox[
            RowBox[{"(", "\[NoBreak]", GridBox[{
                  {"60"},
                  {\(-68\)},
                  {"85"},
                  {\(-56\)},
                  {\(-20\)}
                  }], "\[NoBreak]", ")"}],
            Function[ BoxForm`e$, 
              MatrixForm[ BoxForm`e$]]],
          Function[ BoxForm`e$, 
            MatrixForm[ BoxForm`e$]]]}], 
      ";"}], "\[IndentingNewLine]", \(R\_1\  = \ 
        B - A . X\_1;\), "\[IndentingNewLine]", \(\[CapitalDelta]X\  = \ \ \
SolveLU[R\_1];\), "\[IndentingNewLine]", \(X\_2\  = \ 
        X\_1\  + \ \[CapitalDelta]X;\), "\[IndentingNewLine]", \(\
\[CapitalDelta]vars = 
        Table["\<\[CapitalDelta]x\>"\_i, {i, 1, 
            Length[A]}];\), "\[IndentingNewLine]", \(Print[\*"\"\<\!\(X\_1\) \
=\>\"", \ MatrixForm[
          X\_1]\ ];\), "\[IndentingNewLine]", \(Print[\*"\"\<\!\(R\_1\) = B - \
A.\!\(X\_1\)\>\"", "\< = \>", \ MatrixForm[B], "\< - \>", \ MatrixForm[A], \ 
        MatrixForm[
          X\_1]\ ];\), "\[IndentingNewLine]", \(Print[\*"\"\<\!\(R\_1\) = B - \
A.\!\(X\_1\)\>\"", "\< = \>", \ MatrixForm[B], "\< - \>", \ 
        MatrixForm[
          A . X\_1]\ ];\), "\[IndentingNewLine]", \(Print[\*"\"\<\!\(R\_1\) = \
B - A.\!\(X\_1\)\>\"", "\< = \>", \ \ MatrixForm[
          R\_1]\ ];\), "\[IndentingNewLine]", \(Print[\*"\"\<\!\(R\_1\) = \
\>\"", \ MatrixForm[R\_1]\ ];\), "\[IndentingNewLine]", 
    RowBox[{\(Print["\<\n\>", \*"\"\<Solve  A \[CapitalDelta]X  =  L U \
\[CapitalDelta]X  =  \!\(R\_1\)\>\"", "\<\n\>"];\), 
      " "}], "\[IndentingNewLine]", \(Print[MatrixForm[A], 
        MatrixForm[\[CapitalDelta]vars], "\< = \>", 
        MatrixForm[
          R\_1]];\), "\[IndentingNewLine]", \(Print["\<Get\>"];\), "\
\[IndentingNewLine]", \(Print["\<\[CapitalDelta]X = \>", 
        MatrixForm[\[CapitalDelta]vars], "\< = \>", 
        MatrixForm[\[CapitalDelta]X], "\< = \>", 
        MatrixForm[
          N[\[CapitalDelta]X]]\ ];\), "\[IndentingNewLine]", \(Print["\<\>"];\
\), "\[IndentingNewLine]", \(Print[\*"\"\<\!\(X\_2\) = \!\(X\_1\) + \
\[CapitalDelta]X\>\"", "\< = \>", \ MatrixForm[X\_1], "\< + \>", \ 
        MatrixForm[\[CapitalDelta]X], "\< = \>", \ 
        MatrixForm[
          X\_2]\ ];\), "\[IndentingNewLine]", \(Print[\*"\"\<\!\(X\_2\) = \
\!\(X\_1\) + \[CapitalDelta]X\>\"", "\< = \>", \ 
        MatrixForm[N[X\_1]], "\< + \>", \ 
        MatrixForm[N[\[CapitalDelta]X]], "\< = \>", \ 
        MatrixForm[
          N[X\_2]]\ ];\), "\[IndentingNewLine]", \(Print["\<\>"];\), "\
\[IndentingNewLine]", \(Print[\*"\"\<\!\(X\_2\) = \>\"", 
        MatrixForm[vars], "\< = \>", \ MatrixForm[X\_2], "\< = \>", \ 
        MatrixForm[N[X\_2]]\ ];\)}], "Input"],

Cell["\<\
Iterative refinement has converged after one step and we are done. \
\>", "Text"]
}, Closed]],

Cell[TextData[{
  "\tA linear system with a ",
  ButtonBox["Hilbert matrix",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/HilbertMatrix.html"], None},
    ButtonStyle->"Hyperlink"],
  "  ",
  Cell[BoxData[
      RowBox[{
        SubscriptBox[
          StyleBox["A",
            FontWeight->"Bold"], \(n\[Times]n\)], " ", "=", " ", 
        RowBox[{
          RowBox[{\(\((a\_\(i, j\))\)\_\(n\[Times]n\)\), "  ", 
            StyleBox["where",
              FontFamily->"Times New Roman",
              FontSize->12,
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontColor->GrayLevel[0],
              FontVariations->{"Underline"->False,
              "StrikeThrough"->False}], "  ", \(a\_\(i, j\)\)}], 
          "=", \(1\/\(i + j - 1\)\)}]}]]],
  "  is difficult to solve numerically. The following examples illustrate \
this situation.  "
}], "Text"],

Cell[TextData[{
  StyleBox["Example 4.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Solve  ",
  Cell[BoxData[
      RowBox[{
        RowBox[{
          SubscriptBox[
            StyleBox["A",
              FontWeight->"Bold"], \(5\[Times]5\)], 
          StyleBox["X",
            FontWeight->"Bold"]}], "=", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  ",  where ",
  Cell[BoxData[
      SubscriptBox[
        StyleBox["A",
          FontWeight->"Bold"], \(5\[Times]5\)]]],
  " is the Hilbert matrix and  ",
  Cell[BoxData[
      RowBox[{
        StyleBox["B",
          FontWeight->"Bold"], 
        StyleBox[" ",
          FontWeight->"Plain"], 
        StyleBox["=",
          FontWeight->"Plain"], 
        StyleBox[" ",
          FontWeight->"Plain"], 
        StyleBox[
          SuperscriptBox[
            RowBox[{"(", 
              RowBox[{"5", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "4", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "3", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "2", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "1"}], ")"}], 
            StyleBox["T",
              FontWeight->"Bold"]],
          FontWeight->"Plain"]}]]],
  ".  Use iterative refinement. "
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 4.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(n = 5;\)\ \ \), "\[IndentingNewLine]", 
    \(\(A\  = \(Atrue\  = 
          Table[1\/\(i + j - 1\), {i, n}, {j, 
              n}]\);\)\ \), "\[IndentingNewLine]", 
    \(\(B\  = \ Table[{n + 1 - i}, {i, n}];\)\ \), "\[IndentingNewLine]", 
    \(\(vars = 
        Table["\<x\>"\_i, {i, 1, Length[A]}];\)\), "\[IndentingNewLine]", 
    \(\(X\_true\  = LinearSolve[A, B];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the system\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[A], MatrixForm[vars], "\< = \>", 
        MatrixForm[B]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The true solution is\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<X = \>", MatrixForm[vars], "\< = \>", 
        MatrixForm[X\_true]\ ];\)\)}], "Input"],

Cell[TextData[{
  "\tThe first thing we must do is to compute the LU-factorization once.  \
However, we will form the numerical approximation to ",
  Cell[BoxData[
      StyleBox["A",
        FontWeight->"Bold"]]],
  " which contains only 16 digits of accuracy.  We should see some round off \
error in the computations.  \n\n",
  StyleBox["Attention.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox["Make sure you",
    FontColor->RGBColor[0, 0, 1]],
  " ",
  StyleBox["evaluate the next cell",
    FontColor->RGBColor[1, 0, 1]],
  " ",
  StyleBox["!",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]]
}], "Text"],

Cell[BoxData[{
    \(\(A = N[A];\)\), "\[IndentingNewLine]", 
    \(\(LUfactor[A];\)\)}], "Input"],

Cell[TextData[{
  "The numerical approximation  ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " obtained by the LU-factorization method is"
}], "Text"],

Cell[BoxData[{
    \(\(X\_1\  = \ SolveLU[B];\)\), "\[IndentingNewLine]", 
    \(\(R\_1\  = \ B - A . X\_1;\)\), "\[IndentingNewLine]", 
    \(\(\[CapitalDelta]X\  = \ \ SolveLU[R\_1];\)\), "\[IndentingNewLine]", 
    \(\(X\_2\  = \ X\_1\  + \ \[CapitalDelta]X;\)\), "\[IndentingNewLine]", 
    \(\(R\_2\  = \ B - A . X\_2;\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The numerical approximations obtained by \
LU-factorization\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<followed by one step of the iterative refinement method\>"];\
\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(X\_1\) = \>\"", 
        NumberForm[MatrixForm[X\_1], 17]];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(X\_2\) = \>\"", 
        NumberForm[MatrixForm[X\_2], 
          17], \*"\"\< \[TildeTilde] \!\(X\_true\) = \>\"", 
        MatrixForm[X\_true]];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<{\!\(X\_true\)-\!\(X\_i\) = \!\(R\_i\)\!\(\(}\_\(i = 1\)\
\%2\)\) = \>\"", NumberForm[MatrixForm[R\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_2], 17]\ ];\)\)}], "Input"],

Cell[TextData[StyleBox["We are done !",
  FontColor->RGBColor[0, 1, 1]]], "Text"],

Cell[TextData[{
  StyleBox["Aside.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  The approximation ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " was so close to the true solution that we have difficulty seeing the \
iterations converge.  For this reason, we will chose an arbitrary vector ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " that is close and then perform the iteration.  This is for pedagogical \
purposes.  "
}], "Text"],

Cell[BoxData[{
    RowBox[{
      RowBox[{
        RowBox[{\(X\_1\), " ", "=", 
          TagBox[
            RowBox[{"(", "\[NoBreak]", GridBox[{
                  {\(-100\)},
                  {"2000"},
                  {\(-10000\)},
                  {"18000"},
                  {\(-10000\)}
                  }], "\[NoBreak]", ")"}],
            Function[ BoxForm`e$, 
              MatrixForm[ BoxForm`e$]]]}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{\(X\_2\  = \ IterateRefine[1];\), " "}]}], "Input"],

Cell["\<\
Iterative refinement has converged after one step and we are done. \
\>", "Text"],

Cell["\<\
Now print out the sequence of approximations to the solution.  \
\>", "Text"],

Cell[BoxData[{
    \(\(Print["\<The solutions to\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[Atrue], MatrixForm[vars], "\< = \>", 
        MatrixForm[B]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Are\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<{\!\(X\_i\)\!\(\(}\_\(i = 1\)\%3\)\) = \>\"", 
        NumberForm[MatrixForm[X\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_2], 17]\ ];\)\)}], "Input"],

Cell["The sequence of residuals can also be considered.  ", "Text"],

Cell[BoxData[
    \(\(Print[\*"\"\<{X-\!\(X\_i\) = \!\(R\_i\)\!\(\(}\_\(i = 1\)\%2\)\) = \>\
\"", NumberForm[MatrixForm[R\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_2], 17]\ ];\)\)], "Input"],

Cell[TextData[{
  StyleBox["We are done!",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  "  Iterative refinement has converged after one step. \n\n",
  StyleBox["Caveat.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 1]],
  "  If iteration is done one more time the values will not get closer to the \
solution. "
}], "Text"],

Cell[BoxData[
    \(\(\(X\_3\  = \ IterateRefine[2];\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \(\(Print[\*"\"\<{\!\(X\_i\)\!\(\(}\_\(i = 1\)\%3\)\) = \>\"", 
        NumberForm[MatrixForm[X\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_3], 17]\ ];\)\)], "Input"],

Cell[BoxData[
    \(\(Print[\*"\"\<{\!\(R\_i\)\!\(\(}\_\(i = 1\)\%3\)\) = \>\"", 
        NumberForm[MatrixForm[R\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_3], 17]\ ];\)\)], "Input"],

Cell[TextData[{
  StyleBox["Warning.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 1]],
  "  We must proceed with caution when using a Hilbert matrix because the \
linear system might be ill conditioned.  "
}], "Text"],

Cell[BoxData[{
    \(\(Print["\<The system we solved was  A X = B\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print[MatrixForm[Atrue], MatrixForm[Partition[vars, 1]], "\< = \>", 
        MatrixForm[B]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The 'true' solution is\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(X\_true = N[X\_true];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<X = \>", MatrixForm[Partition[vars, 1]], "\< = \>", 
        MatrixForm[X\_true]];\)\ \)}], "Input"],

Cell[TextData[{
  "\tThe ",
  ButtonBox["condition number",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/ConditionNumber.html"], None},
    ButtonStyle->"Hyperlink"],
  " of the above system can be determined by ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  ". "
}], "Text"],

Cell[BoxData[{
    \(\(Needs["\<LinearAlgebra`MatrixManipulation`\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<The condition number of the matrix A is\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<Cond[A] = \>", \ 
        MatrixConditionNumber[N[A]]];\)\ \)}], "Input"],

Cell[TextData[{
  StyleBox["Fact.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  Given the linear system  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["A",
            FontWeight->"Bold"], " ", 
          StyleBox["X",
            FontWeight->"Bold"]}], "=", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox[".  If   ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox["A",
          FontWeight->"Bold"], "  ", 
        StyleBox["and",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "  ", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox["  are input with machine precision then a bound for the error in \
the computed solution  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  "  ",
  StyleBox["is given by\n\n\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          RowBox[{"\[LeftDoubleBracketingBar]", 
            RowBox[{
              StyleBox["X",
                FontWeight->"Bold"], "-", 
              StyleBox[\(X\&^\),
                FontWeight->"Bold"]}], "\[RightDoubleBracketingBar]"}], "  ", 
          "\[LessEqual]", "  ", 
          RowBox[{
            RowBox[{"\[LeftDoubleBracketingBar]", 
              StyleBox[\(X\&^\),
                FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}], 
            RowBox[{"Cond", "[", 
              StyleBox["A",
                FontWeight->"Bold"], "]"}]}]}], "\[Element]"}]]],
  " ",
  StyleBox["\n\nwhere ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \( \[Element] \)]],
  " ",
  StyleBox["is machine epsilon for the computer.  The computed solution  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  StyleBox["  loses about  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{\(log\_10\), 
        RowBox[{"Cond", "[", 
          StyleBox["A",
            FontWeight->"Bold"], "]"}]}]]],
  StyleBox["  decimal digits of accuracy relative to precision of input. ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[BoxData[{
    \(\(Needs["\<LinearAlgebra`MatrixManipulation`\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(error = 
        VectorNorm[Flatten[X\_true], 2]*
          MatrixConditionNumber[
            N[A]]*$MachineEpsilon;\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The condition number of the matrix A is\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<Cond[A]  =  \>", \ 
        MatrixConditionNumber[N[A]]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<    \[LeftDoubleBracketingBar]X\[RightDoubleBracketingBar]  \
=  \>", VectorNorm[Flatten[X\_true], 2]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<      \[Epsilon]  =  \>", \ $MachineEpsilon\ ];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\< \[LeftDoubleBracketingBar]X - \!\(X\&^\)\
\[RightDoubleBracketingBar] \[LessEqual]  \[LeftDoubleBracketingBar]X\
\[RightDoubleBracketingBar]*Cond[A]*\[Epsilon]\>\""\ ];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\< \[LeftDoubleBracketingBar]X - \!\(X\&^\)\
\[RightDoubleBracketingBar] \[LessEqual] (\>\"", 
        VectorNorm[Flatten[X\_true], 2], "\<)(\>", 
        MatrixConditionNumber[
          N[A]], "\<)(\>", $MachineEpsilon, "\<)\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\< \[LeftDoubleBracketingBar]X - \!\(X\&^\)\
\[RightDoubleBracketingBar] \[LessEqual]  \>\"", 
        error\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<A 'computed' solution might be of the form\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<X = \>", MatrixForm[Partition[vars, 1]], "\< = \>", 
        MatrixForm[X\_true*\(\[PlusMinus]error\)]];\)\ \)}], "Input"],

Cell[TextData[{
  StyleBox["Caveat.",
    FontWeight->"Bold",
    FontColor->RGBColor[0.996109, 0.500008, 0.750011]],
  "  ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " uses extended precision sixteen digit numbers, the solution",
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  StyleBox["  retains a little of this accuracy.  ",
    FontFamily->"Times New Roman"],
  " "
}], "Text"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 5.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Solve  ",
  Cell[BoxData[
      RowBox[{
        RowBox[{
          SubscriptBox[
            StyleBox["A",
              FontWeight->"Bold"], \(6\[Times]6\)], 
          StyleBox["X",
            FontWeight->"Bold"]}], "=", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  ",  where ",
  Cell[BoxData[
      SubscriptBox[
        StyleBox["A",
          FontWeight->"Bold"], \(6\[Times]6\)]]],
  " is the Hilbert matrix and  ",
  Cell[BoxData[
      RowBox[{
        StyleBox["B",
          FontWeight->"Bold"], 
        StyleBox[" ",
          FontWeight->"Plain"], 
        StyleBox["=",
          FontWeight->"Plain"], 
        StyleBox[" ",
          FontWeight->"Plain"], 
        StyleBox[
          SuperscriptBox[
            RowBox[{"(", 
              RowBox[{"6", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "5", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox["4",
                  FontFamily->"Courier New"], 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox["...",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox[" ",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "2", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "1"}], ")"}], 
            StyleBox["T",
              FontWeight->"Bold"]],
          FontWeight->"Plain"]}]]],
  ".  Use iterative refinement. "
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 5.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(n = 6;\)\ \ \), "\[IndentingNewLine]", 
    \(\(A\  = \(Atrue\  = 
          Table[1\/\(i + j - 1\), {i, n}, {j, 
              n}]\);\)\ \), "\[IndentingNewLine]", 
    \(\(B\  = \ Table[{n + 1 - i}, {i, n}];\)\ \), "\[IndentingNewLine]", 
    \(\(X\_true\  = LinearSolve[A, B];\)\), "\[IndentingNewLine]", 
    \(\(vars = 
        Table["\<x\>"\_i, {i, 1, Length[A]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the system\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[A], MatrixForm[vars], "\< = \>", 
        MatrixForm[B]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The true solution is\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<X = \>", MatrixForm[vars], "\< = \>", 
        MatrixForm[X\_true]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<To illustrate round off error we use numerical \
approximations.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Mathematica always uses 16 digits in its numerical \
calculations.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<But we display only 6 digits to make it easier to read.\>"];\
\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the system\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[N[A]], MatrixForm[vars], "\< = \>", 
        MatrixForm[B]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Remember. Mathematica uses 16 digits in its calculations for \
this example!\>"];\)\)}], "Input"],

Cell[TextData[{
  "\tThe first thing we must do is to compute the LU-factorization once.  \
However, we will form the numerical approximation to ",
  Cell[BoxData[
      StyleBox["A",
        FontWeight->"Bold"]]],
  " which contains only 16 digits of accuracy.  We should see some round off \
error in the computations.  \n\n",
  StyleBox["Attention.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox["Make sure you",
    FontColor->RGBColor[0, 0, 1]],
  " ",
  StyleBox["evaluate the next cell",
    FontColor->RGBColor[1, 0, 1]],
  " ",
  StyleBox["!",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]]
}], "Text"],

Cell[BoxData[{
    \(\(A = N[A];\)\), "\[IndentingNewLine]", 
    \(\(LUfactor[A];\)\)}], "Input"],

Cell[TextData[{
  "The numerical approximation  ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " obtained by the LU-factorization method is"
}], "Text"],

Cell[BoxData[{
    \(\(X\_1\  = \ SolveLU[B];\)\), "\[IndentingNewLine]", 
    \(\(R\_1\  = \ B - A . X\_1;\)\), "\[IndentingNewLine]", 
    \(\(\[CapitalDelta]X\  = \ \ SolveLU[R\_1];\)\), "\[IndentingNewLine]", 
    \(\(X\_2\  = \ X\_1\  + \ \[CapitalDelta]X;\)\), "\[IndentingNewLine]", 
    \(\(R\_2\  = \ B - A . X\_2;\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The numerical approximations obtained by \
LU-factorization\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<followed by one step of the iterative refinement method\>"];\
\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(X\_1\) = \>\"", 
        NumberForm[MatrixForm[X\_1], 17]];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(X\_2\) = \>\"", 
        NumberForm[MatrixForm[X\_2], 
          17], \*"\"\< \[TildeTilde] \!\(X\_true\) = \>\"", 
        MatrixForm[X\_true]];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<{\!\(X\_true\)-\!\(X\_i\) = \!\(R\_i\)\!\(\(}\_\(i = 1\)\
\%2\)\) = \>\"", NumberForm[MatrixForm[R\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_2], 17]\ ];\)\)}], "Input"],

Cell[TextData[StyleBox["We are done !",
  FontColor->RGBColor[0, 1, 1]]], "Text"],

Cell[TextData[{
  StyleBox["Aside.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  The approximation ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " was so close to the true solution that we have difficulty seeing the \
iterations converge.  For this reason, we will chose an arbitrary vector ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " that is close and then perform the iteration.  This is for pedagogical \
purposes.  "
}], "Text"],

Cell[BoxData[{
    RowBox[{
      RowBox[{\(X\_1\), " ", "=", 
        TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
                {"200"},
                {\(-6000\)},
                {"50000"},
                {\(-100000\)},
                {"200000"},
                {\(-70000\)}
                }], "\[NoBreak]", ")"}],
          Function[ BoxForm`e$, 
            MatrixForm[ BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
    RowBox[{\(Print["\<For pedagogical purposes we choose the starting vector\
\>"];\), " "}], "\[IndentingNewLine]", \(Print[\*"\"\<\!\(X\_1\) = \>\"", 
        MatrixForm[X\_1]\ ];\)}], "Input"],

Cell["Next, perform the iterative refinement steps. ", "Text"],

Cell[BoxData[
    \(\(\(X\_2\  = \ IterateRefine[1];\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \(\(\(X\_3\  = \ IterateRefine[2];\)\(\ \)\)\)], "Input"],

Cell["\<\
Now print out the sequence of approximations to the solution.  \
\>", "Text"],

Cell[BoxData[{
    \(\(Print["\<The solutions to\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[Atrue], MatrixForm[vars], "\< = \>", 
        MatrixForm[B]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Are\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<{\!\(X\_i\)\!\(\(}\_\(i = 1\)\%3\)\) = \>\"", 
        NumberForm[MatrixForm[X\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_3], 17]\ ];\)\)}], "Input"],

Cell["The sequence of residuals can also be considered.  ", "Text"],

Cell[BoxData[
    \(\(Print[\*"\"\<{X-\!\(X\_i\) = \!\(R\_i\)\!\(\(}\_\(i = 1\)\%3\)\) = \>\
\"", NumberForm[MatrixForm[R\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_3], 17]\ ];\)\)], "Input"],

Cell[TextData[{
  StyleBox["We are done!",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  "  Iterative refinement has converged after one or two steps. \n\n",
  StyleBox["Caveat.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 1]],
  "  If iteration is done one more time the values will not get closer to the \
solution. "
}], "Text"],

Cell[BoxData[
    \(\(\(X\_4\  = \ IterateRefine[3];\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \(\(Print[\*"\"\<{\!\(X\_i\)\!\(\(}\_\(i = 1\)\%4\)\) = \>\"", 
        NumberForm[MatrixForm[X\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_3], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_4], 17\ ]\ ];\)\)], "Input"],

Cell[BoxData[
    \(\(Print[\*"\"\<{\!\(R\_i\)\!\(\(}\_\(i = 1\)\%4\)\) = \>\"", 
        NumberForm[MatrixForm[R\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_3], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_4], 17]\ ];\)\)], "Input"],

Cell[TextData[{
  StyleBox["Warning.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 1]],
  "  We must proceed with caution when using a Hilbert matrix because the \
linear system might be ill conditioned.  "
}], "Text"],

Cell[BoxData[{
    \(\(Print["\<The system we solved was  A X = B\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print[MatrixForm[Atrue], MatrixForm[Partition[vars, 1]], "\< = \>", 
        MatrixForm[B]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The 'true' solution is\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(X\_true = N[X\_true];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<X = \>", MatrixForm[Partition[vars, 1]], "\< = \>", 
        MatrixForm[X\_true]];\)\ \)}], "Input"],

Cell[TextData[{
  "\tThe ",
  ButtonBox["condition number",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/ConditionNumber.html"], None},
    ButtonStyle->"Hyperlink"],
  " of the above system can be determined by ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  ". "
}], "Text"],

Cell[BoxData[{
    \(\(Needs["\<LinearAlgebra`MatrixManipulation`\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<The condition number of the matrix A is\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<Cond[A] = \>", \ 
        MatrixConditionNumber[N[A]]];\)\ \)}], "Input"],

Cell[TextData[{
  StyleBox["Fact.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  Given the linear system  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["A",
            FontWeight->"Bold"], " ", 
          StyleBox["X",
            FontWeight->"Bold"]}], "=", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox[".  If   ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox["A",
          FontWeight->"Bold"], "  ", 
        StyleBox["and",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "  ", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox["  are input with machine precision then a bound for the error in \
the computed solution  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  "  ",
  StyleBox["is given by\n\n\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          RowBox[{"\[LeftDoubleBracketingBar]", 
            RowBox[{
              StyleBox["X",
                FontWeight->"Bold"], "-", 
              StyleBox[\(X\&^\),
                FontWeight->"Bold"]}], "\[RightDoubleBracketingBar]"}], "  ", 
          "\[LessEqual]", "  ", 
          RowBox[{
            RowBox[{"\[LeftDoubleBracketingBar]", 
              StyleBox[\(X\&^\),
                FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}], 
            RowBox[{"Cond", "[", 
              StyleBox["A",
                FontWeight->"Bold"], "]"}]}]}], "\[Element]"}]]],
  " ",
  StyleBox["\n\nwhere ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \( \[Element] \)]],
  " ",
  StyleBox["is machine epsilon for the computer.  The computed solution  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  StyleBox["  loses about  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{\(log\_10\), 
        RowBox[{"Cond", "[", 
          StyleBox["A",
            FontWeight->"Bold"], "]"}]}]]],
  StyleBox["  decimal digits of accuracy relative to precision of input. ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[BoxData[{
    \(\(Needs["\<LinearAlgebra`MatrixManipulation`\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(error = 
        VectorNorm[Flatten[X\_true], 2]*
          MatrixConditionNumber[
            N[A]]*$MachineEpsilon;\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The condition number of the matrix A is\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<Cond[A]  =  \>", \ 
        MatrixConditionNumber[N[A]]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<    \[LeftDoubleBracketingBar]X\[RightDoubleBracketingBar]  \
=  \>", VectorNorm[Flatten[X\_true], 2]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<      \[Epsilon]  =  \>", \ $MachineEpsilon\ ];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\< \[LeftDoubleBracketingBar]X - \!\(X\&^\)\
\[RightDoubleBracketingBar] \[LessEqual]  \[LeftDoubleBracketingBar]X\
\[RightDoubleBracketingBar]*Cond[A]*\[Epsilon]\>\""\ ];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\< \[LeftDoubleBracketingBar]X - \!\(X\&^\)\
\[RightDoubleBracketingBar] \[LessEqual] (\>\"", 
        VectorNorm[Flatten[X\_true], 2], "\<)(\>", 
        MatrixConditionNumber[
          N[A]], "\<)(\>", $MachineEpsilon, "\<)\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\< \[LeftDoubleBracketingBar]X - \!\(X\&^\)\
\[RightDoubleBracketingBar] \[LessEqual]  \>\"", 
        error\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<A 'computed' solution might be of the form\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<X = \>", MatrixForm[Partition[vars, 1]], "\< = \>", 
        MatrixForm[X\_true*\(\[PlusMinus]error\)]];\)\ \)}], "Input"],

Cell[TextData[{
  StyleBox["Caveat.",
    FontWeight->"Bold",
    FontColor->RGBColor[0.996109, 0.500008, 0.750011]],
  "  ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " uses extended precision sixteen digit numbers, the solution",
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  StyleBox["  retains a little of this accuracy.  ",
    FontFamily->"Times New Roman"],
  " "
}], "Text"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 6.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Solve  ",
  Cell[BoxData[
      RowBox[{
        RowBox[{
          SubscriptBox[
            StyleBox["A",
              FontWeight->"Bold"], \(7\[Times]7\)], 
          StyleBox["X",
            FontWeight->"Bold"]}], "=", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  ",  where ",
  Cell[BoxData[
      SubscriptBox[
        StyleBox["A",
          FontWeight->"Bold"], \(7\[Times]7\)]]],
  " is the Hilbert matrix and  ",
  Cell[BoxData[
      RowBox[{
        StyleBox["B",
          FontWeight->"Bold"], 
        StyleBox[" ",
          FontWeight->"Plain"], 
        StyleBox["=",
          FontWeight->"Plain"], 
        StyleBox[" ",
          FontWeight->"Plain"], 
        StyleBox[
          SuperscriptBox[
            RowBox[{"(", 
              RowBox[{"7", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "6", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox["5",
                  FontFamily->"Courier New"], 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox["...",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox[" ",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "2", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "1"}], ")"}], 
            StyleBox["T",
              FontWeight->"Bold"]],
          FontWeight->"Plain"]}]]],
  ".  Use iterative refinement. "
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 6.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(n = 7;\)\ \ \), "\[IndentingNewLine]", 
    \(\(A\  = \(Atrue\  = 
          Table[1\/\(i + j - 1\), {i, n}, {j, 
              n}]\);\)\ \), "\[IndentingNewLine]", 
    \(\(B\  = \ Table[{n + 1 - i}, {i, n}];\)\ \), "\[IndentingNewLine]", 
    \(\(X\_true\  = LinearSolve[A, B];\)\), "\[IndentingNewLine]", 
    \(\(vars = 
        Table["\<x\>"\_i, {i, 1, Length[A]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the system\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[A], MatrixForm[vars], "\< = \>", 
        MatrixForm[B]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The true solution is\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<X = \>", MatrixForm[vars], "\< = \>", 
        MatrixForm[X\_true]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<To illustrate round off error we use numerical \
approximations.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Mathematica always uses 16 digits in its numerical \
calculations.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<But we display only 6 digits to make it easier to read.\>"];\
\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the system\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[N[A]], MatrixForm[vars], "\< = \>", 
        MatrixForm[B]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Remember. Mathematica uses 16 digits in its calculations for \
this example!\>"];\)\)}], "Input"],

Cell[TextData[{
  "\tThe first thing we must do is to compute the LU-factorization once.  \
However, we will form the numerical approximation to ",
  Cell[BoxData[
      StyleBox["A",
        FontWeight->"Bold"]]],
  " which contains only 16 digits of accuracy.  We should see some round off \
error in the computations.  \n\n",
  StyleBox["Attention.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox["Make sure you",
    FontColor->RGBColor[0, 0, 1]],
  " ",
  StyleBox["evaluate the next cell",
    FontColor->RGBColor[1, 0, 1]],
  " ",
  StyleBox["!",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]]
}], "Text"],

Cell[BoxData[{
    \(\(A = N[A];\)\), "\[IndentingNewLine]", 
    \(\(LUfactor[A];\)\)}], "Input"],

Cell[TextData[{
  "The numerical approximation  ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " obtained by the LU-factorization method is"
}], "Text"],

Cell[BoxData[{
    \(\(X\_1\  = \ SolveLU[B];\)\), "\[IndentingNewLine]", 
    \(\(R\_1\  = \ B - A . X\_1;\)\), "\[IndentingNewLine]", 
    \(\(\[CapitalDelta]X\  = \ \ SolveLU[R\_1];\)\), "\[IndentingNewLine]", 
    \(\(X\_2\  = \ X\_1\  + \ \[CapitalDelta]X;\)\), "\[IndentingNewLine]", 
    \(\(R\_2\  = \ B - A . X\_2;\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The numerical approximations obtained by \
LU-factorization\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<followed by one step of the iterative refinement method\>"];\
\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(X\_1\) = \>\"", 
        NumberForm[MatrixForm[X\_1], 17]];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(X\_2\) = \>\"", 
        NumberForm[MatrixForm[X\_2], 
          17], \*"\"\< \[TildeTilde] \!\(X\_true\) = \>\"", 
        MatrixForm[X\_true]];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<{\!\(X\_true\)-\!\(X\_i\) = \!\(R\_i\)\!\(\(}\_\(i = 1\)\
\%2\)\) = \>\"", NumberForm[MatrixForm[R\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_2], 17]\ ];\)\)}], "Input"],

Cell[TextData[StyleBox["We are done !",
  FontColor->RGBColor[0, 1, 1]]], "Text"],

Cell[TextData[{
  StyleBox["Aside.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  The approximation ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " was so close to the true solution that we have difficulty seeing the \
iterations converge.  For this reason, we will chose an arbitrary vector ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " that is close and then perform the iteration.  This is for pedagogical \
purposes.  "
}], "Text"],

Cell[BoxData[{
    RowBox[{
      RowBox[{\(X\_1\), " ", "=", 
        TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
                {\(-300\)},
                {"10000"},
                {\(-100000\)},
                {"600000"},
                {\(-1000000\)},
                {"1000000"},
                {\(-400000\)}
                }], "\[NoBreak]", ")"}],
          Function[ BoxForm`e$, 
            MatrixForm[ BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
    RowBox[{\(Print["\<For pedagogical purposes we choose the starting vector\
\>"];\), " "}], "\[IndentingNewLine]", \(Print[\*"\"\<\!\(X\_1\) = \>\"", 
        MatrixForm[X\_1]\ ];\)}], "Input"],

Cell["Next, perform the iterative refinement steps. ", "Text"],

Cell[BoxData[
    \(\(\(X\_2\  = \ IterateRefine[1];\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \(\(\(X\_3\  = \ IterateRefine[2];\)\(\ \)\)\)], "Input"],

Cell["\<\
Now print out the sequence of approximations to the solution.  \
\>", "Text"],

Cell[BoxData[{
    \(\(Print["\<The solutions to\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[Atrue], MatrixForm[vars], "\< = \>", 
        MatrixForm[B]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Are\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<{\!\(X\_i\)\!\(\(}\_\(i = 1\)\%3\)\) = \>\"", 
        NumberForm[MatrixForm[X\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_3], 17]\ ];\)\)}], "Input"],

Cell["The sequence of residuals can also be considered.  ", "Text"],

Cell[BoxData[
    \(\(Print[\*"\"\<{X-\!\(X\_i\) = \!\(R\_i\)\!\(\(}\_\(i = 1\)\%3\)\) = \>\
\"", NumberForm[MatrixForm[R\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_3], 17]\ ];\)\)], "Input"],

Cell[TextData[{
  StyleBox["We are done!",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  "  Iterative refinement has converged after one or two steps. \n\n",
  StyleBox["Caveat.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 1]],
  "  If iteration is done one more time the values will not get closer to the \
solution. "
}], "Text"],

Cell[BoxData[
    \(\(\(X\_4\  = \ IterateRefine[3];\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \(\(Print[\*"\"\<{\!\(X\_i\)\!\(\(}\_\(i = 1\)\%4\)\) = \>\"", 
        NumberForm[MatrixForm[X\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_3], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_4], 17\ ]\ ];\)\)], "Input"],

Cell[BoxData[
    \(\(Print[\*"\"\<{X-\!\(X\_i\) = \!\(R\_i\)\!\(\(}\_\(i = 1\)\%4\)\) = \>\
\"", NumberForm[MatrixForm[R\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_3], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_4], 17]\ ];\)\)], "Input"],

Cell[TextData[{
  StyleBox["Warning.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 1]],
  "  We must proceed with caution when using a Hilbert matrix because the \
linear system might be ill conditioned.  "
}], "Text"],

Cell[BoxData[{
    \(\(Print["\<The system we solved was  A X = B\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print[MatrixForm[Atrue], MatrixForm[Partition[vars, 1]], "\< = \>", 
        MatrixForm[B]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The 'true' solution is\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(X\_true = N[X\_true];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<X = \>", MatrixForm[Partition[vars, 1]], "\< = \>", 
        MatrixForm[X\_true]];\)\ \)}], "Input"],

Cell[TextData[{
  "\tThe ",
  ButtonBox["condition number",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/ConditionNumber.html"], None},
    ButtonStyle->"Hyperlink"],
  " of the above system can be determined by ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  ". "
}], "Text"],

Cell[BoxData[{
    \(\(Needs["\<LinearAlgebra`MatrixManipulation`\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<The condition number of the matrix A is\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<Cond[A] = \>", \ 
        MatrixConditionNumber[N[A]]];\)\ \)}], "Input"],

Cell[TextData[{
  StyleBox["Fact.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  Given the linear system  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["A",
            FontWeight->"Bold"], " ", 
          StyleBox["X",
            FontWeight->"Bold"]}], "=", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox[".  If   ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox["A",
          FontWeight->"Bold"], "  ", 
        StyleBox["and",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "  ", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox["  are input with machine precision then a bound for the error in \
the computed solution  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  "  ",
  StyleBox["is given by\n\n\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          RowBox[{"\[LeftDoubleBracketingBar]", 
            RowBox[{
              StyleBox["X",
                FontWeight->"Bold"], "-", 
              StyleBox[\(X\&^\),
                FontWeight->"Bold"]}], "\[RightDoubleBracketingBar]"}], "  ", 
          "\[LessEqual]", "  ", 
          RowBox[{
            RowBox[{"\[LeftDoubleBracketingBar]", 
              StyleBox[\(X\&^\),
                FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}], 
            RowBox[{"Cond", "[", 
              StyleBox["A",
                FontWeight->"Bold"], "]"}]}]}], "\[Element]"}]]],
  " ",
  StyleBox["\n\nwhere ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \( \[Element] \)]],
  " ",
  StyleBox["is machine epsilon for the computer.  The computed solution  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  StyleBox["  loses about  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{\(log\_10\), 
        RowBox[{"Cond", "[", 
          StyleBox["A",
            FontWeight->"Bold"], "]"}]}]]],
  StyleBox["  decimal digits of accuracy relative to precision of input. ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[BoxData[{
    \(\(Needs["\<LinearAlgebra`MatrixManipulation`\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(error = 
        VectorNorm[Flatten[X\_true], 2]*
          MatrixConditionNumber[
            N[A]]*$MachineEpsilon;\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The condition number of the matrix A is\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<Cond[A]  =  \>", \ 
        MatrixConditionNumber[N[A]]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<    \[LeftDoubleBracketingBar]X\[RightDoubleBracketingBar]  \
=  \>", VectorNorm[Flatten[X\_true], 2]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<      \[Epsilon]  =  \>", \ $MachineEpsilon\ ];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\< \[LeftDoubleBracketingBar]X - \!\(X\&^\)\
\[RightDoubleBracketingBar] \[LessEqual]  \[LeftDoubleBracketingBar]X\
\[RightDoubleBracketingBar]*Cond[A]*\[Epsilon]\>\""\ ];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\< \[LeftDoubleBracketingBar]X - \!\(X\&^\)\
\[RightDoubleBracketingBar] \[LessEqual] (\>\"", 
        VectorNorm[Flatten[X\_true], 2], "\<)(\>", 
        MatrixConditionNumber[
          N[A]], "\<)(\>", $MachineEpsilon, "\<)\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\< \[LeftDoubleBracketingBar]X - \!\(X\&^\)\
\[RightDoubleBracketingBar] \[LessEqual]  \>\"", 
        error\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<A 'computed' solution might be of the form\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<X = \>", MatrixForm[Partition[vars, 1]], "\< = \>", 
        MatrixForm[X\_true*\(\[PlusMinus]error\)]];\)\ \)}], "Input"],

Cell[TextData[{
  StyleBox["Caveat.",
    FontWeight->"Bold",
    FontColor->RGBColor[0.996109, 0.500008, 0.750011]],
  "  ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " uses extended precision sixteen digit numbers, the solution",
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  StyleBox["  retains a little of this accuracy.  ",
    FontFamily->"Times New Roman"],
  " "
}], "Text"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 7.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Solve  ",
  Cell[BoxData[
      RowBox[{
        RowBox[{
          SubscriptBox[
            StyleBox["A",
              FontWeight->"Bold"], \(8\[Times]8\)], 
          StyleBox["X",
            FontWeight->"Bold"]}], "=", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  ",  where ",
  Cell[BoxData[
      SubscriptBox[
        StyleBox["A",
          FontWeight->"Bold"], \(8\[Times]8\)]]],
  " is the Hilbert matrix and  ",
  Cell[BoxData[
      RowBox[{
        StyleBox["B",
          FontWeight->"Bold"], 
        StyleBox[" ",
          FontWeight->"Plain"], 
        StyleBox["=",
          FontWeight->"Plain"], 
        StyleBox[" ",
          FontWeight->"Plain"], 
        StyleBox[
          SuperscriptBox[
            RowBox[{"(", 
              RowBox[{"8", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "7", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox["6",
                  FontFamily->"Courier New",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox["...",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox[" ",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "2", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "1"}], ")"}], 
            StyleBox["T",
              FontWeight->"Bold"]],
          FontWeight->"Plain"]}]]],
  ".   Use iterative refinement. "
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 7.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(n = 8;\)\ \ \), "\[IndentingNewLine]", 
    \(\(A\  = \(Atrue\  = 
          Table[1\/\(i + j - 1\), {i, n}, {j, 
              n}]\);\)\ \), "\[IndentingNewLine]", 
    \(\(B\  = \ Table[{n + 1 - i}, {i, n}];\)\ \), "\[IndentingNewLine]", 
    \(\(X\_true\  = LinearSolve[A, B];\)\), "\[IndentingNewLine]", 
    \(\(vars = 
        Table["\<x\>"\_i, {i, 1, Length[A]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the system\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[A], MatrixForm[vars], "\< = \>", 
        MatrixForm[B]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The true solution is\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<X = \>", MatrixForm[vars], "\< = \>", 
        MatrixForm[X\_true]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<To illustrate round off error we use numerical \
approximations.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Mathematica always uses 16 digits in its numerical \
calculations.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<But we display only 6 digits to make it easier to read.\>"];\
\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the system\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[N[A]], MatrixForm[vars], "\< = \>", 
        MatrixForm[B]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Remember. Mathematica uses 16 digits in its calculations for \
this example!\>"];\)\)}], "Input"],

Cell[TextData[{
  "\tThe first thing we must do is to compute the LU-factorization once.  \
However, we will form the numerical approximation to ",
  Cell[BoxData[
      StyleBox["A",
        FontWeight->"Bold"]]],
  " which contains only 16 digits of accuracy.  We should see some round off \
error in the computations.  \n\n",
  StyleBox["Attention.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox["Make sure you",
    FontColor->RGBColor[0, 0, 1]],
  " ",
  StyleBox["evaluate the next cell",
    FontColor->RGBColor[1, 0, 1]],
  " ",
  StyleBox["!",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]]
}], "Text"],

Cell[BoxData[{
    \(\(A = N[A];\)\), "\[IndentingNewLine]", 
    \(\(LUfactor[A];\)\)}], "Input"],

Cell[TextData[{
  "The numerical approximation  ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " obtained by the LU-factorization method is"
}], "Text"],

Cell[BoxData[{
    \(\(X\_1\  = \ SolveLU[B];\)\), "\[IndentingNewLine]", 
    \(\(R\_1\  = \ B - A . X\_1;\)\), "\[IndentingNewLine]", 
    \(\(\[CapitalDelta]X\  = \ \ SolveLU[R\_1];\)\), "\[IndentingNewLine]", 
    \(\(X\_2\  = \ X\_1\  + \ \[CapitalDelta]X;\)\), "\[IndentingNewLine]", 
    \(\(R\_2\  = \ B - A . X\_2;\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The numerical approximations obtained by \
LU-factorization\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<followed by one step of the iterative refinement method\>"];\
\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(X\_1\) = \>\"", 
        NumberForm[MatrixForm[X\_1], 17]];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(X\_2\) = \>\"", 
        NumberForm[MatrixForm[X\_2], 
          17], \*"\"\< \[TildeTilde] \!\(X\_true\) = \>\"", 
        MatrixForm[X\_true]];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<{\!\(X\_true\)-\!\(X\_i\) = \!\(R\_i\)\!\(\(}\_\(i = 1\)\
\%2\)\) = \>\"", NumberForm[MatrixForm[R\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_2], 17]\ ];\)\)}], "Input"],

Cell[TextData[StyleBox["We are done !",
  FontColor->RGBColor[0, 1, 1]]], "Text"],

Cell[TextData[{
  StyleBox["Aside.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  The approximation ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " was so close to the true solution that we have difficulty seeing the \
iterations converge.  For this reason, we will chose an arbitrary vector ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " that is close and then perform the iteration.  This is for pedagogical \
purposes.  "
}], "Text"],

Cell[BoxData[{
    RowBox[{
      RowBox[{\(X\_1\), " ", "=", 
        TagBox[
          TagBox[
            RowBox[{"(", "\[NoBreak]", GridBox[{
                  {"500"},
                  {\(-30000\)},
                  {"400000"},
                  {\(-2000000\)},
                  {"7000000"},
                  {\(-10000000\)},
                  {"8000000"},
                  {\(-2000000\)}
                  }], "\[NoBreak]", ")"}],
            Function[ BoxForm`e$, 
              MatrixForm[ BoxForm`e$]]],
          Function[ BoxForm`e$, 
            MatrixForm[ BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
    RowBox[{\(Print["\<For pedagogical purposes we choose the starting vector\
\>"];\), " "}], "\[IndentingNewLine]", \(Print[\*"\"\<\!\(X\_1\) = \>\"", 
        MatrixForm[X\_1]\ ];\)}], "Input"],

Cell["Next, perform the iterative refinement steps. ", "Text"],

Cell[BoxData[
    \(\(\(X\_2\  = \ IterateRefine[1];\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \(\(\(X\_3\  = \ IterateRefine[2];\)\(\ \)\)\)], "Input"],

Cell["\<\
Now print out the sequence of approximations to the solution.  \
\>", "Text"],

Cell[BoxData[{
    \(\(Print["\<The solutions to\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[Atrue], MatrixForm[vars], "\< = \>", 
        MatrixForm[B]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Are\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<{\!\(X\_i\)\!\(\(}\_\(i = 1\)\%3\)\) = \>\"", 
        NumberForm[MatrixForm[X\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_3], 17]\ ];\)\)}], "Input"],

Cell["The sequence of residuals can also be considered.  ", "Text"],

Cell[BoxData[
    \(\(Print[\*"\"\<{X-\!\(X\_i\) = \!\(R\_i\)\!\(\(}\_\(i = 1\)\%3\)\) = \>\
\"", NumberForm[MatrixForm[R\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_3], 17]\ ];\)\)], "Input"],

Cell[TextData[{
  StyleBox["We are done!",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  "  Iterative refinement has converged after two steps. \n\n",
  StyleBox["Caveat.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 1]],
  "  If iteration is done one more time the values will not get closer to the \
solution. "
}], "Text"],

Cell[BoxData[
    \(\(\(X\_4\  = \ IterateRefine[3];\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \(\(Print[\*"\"\<{\!\(X\_i\)\!\(\(}\_\(i = 1\)\%4\)\) = \>\"", 
        NumberForm[MatrixForm[X\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_3], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_4], 17\ ]\ ];\)\)], "Input"],

Cell[BoxData[
    \(\(Print[\*"\"\<{X-\!\(X\_i\) = \!\(R\_i\)\!\(\(}\_\(i = 1\)\%4\)\) = \>\
\"", NumberForm[MatrixForm[R\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_3], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_4], 17]\ ];\)\)], "Input"],

Cell[TextData[{
  StyleBox["Warning.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 1]],
  "  We must proceed with caution when using a Hilbert matrix because the \
linear system might be ill conditioned.  "
}], "Text"],

Cell[BoxData[{
    \(\(Print["\<The system we solved was  A X = B\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print[MatrixForm[Atrue], MatrixForm[Partition[vars, 1]], "\< = \>", 
        MatrixForm[B]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The 'true' solution is\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(X\_true = N[X\_true];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<X = \>", MatrixForm[Partition[vars, 1]], "\< = \>", 
        MatrixForm[X\_true]];\)\ \)}], "Input"],

Cell[TextData[{
  "\tThe ",
  ButtonBox["condition number",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/ConditionNumber.html"], None},
    ButtonStyle->"Hyperlink"],
  " of the above system can be determined by ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  ". "
}], "Text"],

Cell[BoxData[{
    \(\(Needs["\<LinearAlgebra`MatrixManipulation`\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<The condition number of the matrix A is\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<Cond[A] = \>", \ 
        MatrixConditionNumber[N[A]]];\)\ \)}], "Input"],

Cell[TextData[{
  StyleBox["Fact.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  Given the linear system  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["A",
            FontWeight->"Bold"], " ", 
          StyleBox["X",
            FontWeight->"Bold"]}], "=", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox[".  If   ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox["A",
          FontWeight->"Bold"], "  ", 
        StyleBox["and",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "  ", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox["  are input with machine precision then a bound for the error in \
the computed solution  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  "  ",
  StyleBox["is given by\n\n\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          RowBox[{"\[LeftDoubleBracketingBar]", 
            RowBox[{
              StyleBox["X",
                FontWeight->"Bold"], "-", 
              StyleBox[\(X\&^\),
                FontWeight->"Bold"]}], "\[RightDoubleBracketingBar]"}], "  ", 
          "\[LessEqual]", "  ", 
          RowBox[{
            RowBox[{"\[LeftDoubleBracketingBar]", 
              StyleBox[\(X\&^\),
                FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}], 
            RowBox[{"Cond", "[", 
              StyleBox["A",
                FontWeight->"Bold"], "]"}]}]}], "\[Element]"}]]],
  " ",
  StyleBox["\n\nwhere ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \( \[Element] \)]],
  " ",
  StyleBox["is machine epsilon for the computer.  The computed solution  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  StyleBox["  loses about  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{\(log\_10\), 
        RowBox[{"Cond", "[", 
          StyleBox["A",
            FontWeight->"Bold"], "]"}]}]]],
  StyleBox["  decimal digits of accuracy relative to precision of input. ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[BoxData[{
    \(\(Needs["\<LinearAlgebra`MatrixManipulation`\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(error = 
        VectorNorm[Flatten[X\_true], 2]*
          MatrixConditionNumber[
            N[A]]*$MachineEpsilon;\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The condition number of the matrix A is\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<Cond[A]  =  \>", \ 
        MatrixConditionNumber[N[A]]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<    \[LeftDoubleBracketingBar]X\[RightDoubleBracketingBar]  \
=  \>", VectorNorm[Flatten[X\_true], 2]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<      \[Epsilon]  =  \>", \ $MachineEpsilon\ ];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\< \[LeftDoubleBracketingBar]X - \!\(X\&^\)\
\[RightDoubleBracketingBar] \[LessEqual]  \[LeftDoubleBracketingBar]X\
\[RightDoubleBracketingBar]*Cond[A]*\[Epsilon]\>\""\ ];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\< \[LeftDoubleBracketingBar]X - \!\(X\&^\)\
\[RightDoubleBracketingBar] \[LessEqual] (\>\"", 
        VectorNorm[Flatten[X\_true], 2], "\<)(\>", 
        MatrixConditionNumber[
          N[A]], "\<)(\>", $MachineEpsilon, "\<)\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\< \[LeftDoubleBracketingBar]X - \!\(X\&^\)\
\[RightDoubleBracketingBar] \[LessEqual]  \>\"", 
        error\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<A 'computed' solution might be of the form\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<X = \>", MatrixForm[Partition[vars, 1]], "\< = \>", 
        MatrixForm[X\_true*\(\[PlusMinus]error\)]];\)\ \)}], "Input"],

Cell[TextData[{
  StyleBox["Caveat.",
    FontWeight->"Bold",
    FontColor->RGBColor[0.996109, 0.500008, 0.750011]],
  "  ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " uses extended precision sixteen digit numbers, the solution",
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  StyleBox["  retains a little of this accuracy.  ",
    FontFamily->"Times New Roman"],
  " "
}], "Text"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 8.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Solve  ",
  Cell[BoxData[
      RowBox[{
        RowBox[{
          SubscriptBox[
            StyleBox["A",
              FontWeight->"Bold"], \(9\[Times]9\)], 
          StyleBox["X",
            FontWeight->"Bold"]}], "=", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  ",  where ",
  Cell[BoxData[
      SubscriptBox[
        StyleBox["A",
          FontWeight->"Bold"], \(9\[Times]9\)]]],
  " is the Hilbert matrix and  ",
  Cell[BoxData[
      RowBox[{
        StyleBox["B",
          FontWeight->"Bold"], 
        StyleBox[" ",
          FontWeight->"Plain"], 
        StyleBox["=",
          FontWeight->"Plain"], 
        StyleBox[" ",
          FontWeight->"Plain"], 
        StyleBox[
          SuperscriptBox[
            RowBox[{"(", 
              RowBox[{"9", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "8", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox["7",
                  FontFamily->"Courier New",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox["...",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox[" ",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "2", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "1"}], ")"}], 
            StyleBox["T",
              FontWeight->"Bold"]],
          FontWeight->"Plain"]}]]],
  ".  Use iterative refinement. "
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 8.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(n = 9;\)\ \ \), "\[IndentingNewLine]", 
    \(\(A\  = \(Atrue\  = 
          Table[1\/\(i + j - 1\), {i, n}, {j, 
              n}]\);\)\ \), "\[IndentingNewLine]", 
    \(\(B\  = \ Table[{n + 1 - i}, {i, n}];\)\ \), "\[IndentingNewLine]", 
    \(\(X\_true\  = LinearSolve[A, B];\)\), "\[IndentingNewLine]", 
    \(\(vars = 
        Table["\<x\>"\_i, {i, 1, Length[A]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the system\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[A], MatrixForm[vars], "\< = \>", 
        MatrixForm[B]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The true solution is\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<X = \>", MatrixForm[vars], "\< = \>", 
        MatrixForm[X\_true]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<To illustrate round off error we use numerical \
approximations.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Mathematica always uses 16 digits in its numerical \
calculations.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<But we display only 6 digits to make it easier to read.\>"];\
\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the system\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[N[A]], MatrixForm[vars], "\< = \>", 
        MatrixForm[B]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Remember. Mathematica uses 16 digits in its calculations for \
this example!\>"];\)\)}], "Input"],

Cell[TextData[{
  "\tThe first thing we must do is to compute the LU-factorization once.  \
However, we will form the numerical approximation to ",
  Cell[BoxData[
      StyleBox["A",
        FontWeight->"Bold"]]],
  " which contains only 16 digits of accuracy.  We should see some round off \
error in the computations.  \n\n",
  StyleBox["Attention.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox["Make sure you",
    FontColor->RGBColor[0, 0, 1]],
  " ",
  StyleBox["evaluate the next cell",
    FontColor->RGBColor[1, 0, 1]],
  " ",
  StyleBox["!",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]]
}], "Text"],

Cell[BoxData[{
    \(\(A = N[A];\)\), "\[IndentingNewLine]", 
    \(\(LUfactor[A];\)\)}], "Input"],

Cell[TextData[{
  "The numerical approximation  ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " obtained by the LU-factorization method is"
}], "Text"],

Cell[BoxData[{
    \(\(X\_1\  = \ SolveLU[B];\)\), "\[IndentingNewLine]", 
    \(\(R\_1\  = \ B - A . X\_1;\)\), "\[IndentingNewLine]", 
    \(\(\[CapitalDelta]X\  = \ \ SolveLU[R\_1];\)\), "\[IndentingNewLine]", 
    \(\(X\_2\  = \ X\_1\  + \ \[CapitalDelta]X;\)\), "\[IndentingNewLine]", 
    \(\(R\_2\  = \ B - A . X\_2;\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The numerical approximations obtained by \
LU-factorization\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<followed by one step of the iterative refinement method\>"];\
\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(X\_1\) = \>\"", 
        NumberForm[MatrixForm[X\_1], 17]];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(X\_2\) = \>\"", 
        NumberForm[MatrixForm[X\_2], 
          17], \*"\"\< \[TildeTilde] \!\(X\_true\) = \>\"", 
        MatrixForm[X\_true]];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<{\!\(X\_true\)-\!\(X\_i\) = \!\(R\_i\)\!\(\(}\_\(i = 1\)\
\%2\)\) = \>\"", NumberForm[MatrixForm[R\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_2], 17]\ ];\)\)}], "Input"],

Cell[TextData[StyleBox["We are done !",
  FontColor->RGBColor[0, 1, 1]]], "Text"],

Cell[TextData[{
  StyleBox["Aside.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  The approximation ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " was so close to the true solution that we have difficulty seeing the \
iterations converge.  For this reason, we will chose an arbitrary vector ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " that is close and then perform the iteration.  This is for pedagogical \
purposes.  "
}], "Text"],

Cell[BoxData[{
    RowBox[{
      RowBox[{\(X\_1\), " ", "=", 
        TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
                {\(-1000\)},
                {"50000"},
                {\(-1000000\)},
                {"8000000"},
                {\(-30000000\)},
                {"70000000"},
                {\(-90000000\)},
                {"50000000"},
                {\(-10000000\)}
                }], "\[NoBreak]", ")"}],
          Function[ BoxForm`e$, 
            MatrixForm[ BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
    RowBox[{\(Print["\<For pedagogical purposes we choose the starting vector\
\>"];\), " "}], "\[IndentingNewLine]", \(Print[\*"\"\<\!\(X\_1\) = \>\"", 
        MatrixForm[X\_1]\ ];\)}], "Input"],

Cell["Next, perform the iterative refinement steps. ", "Text"],

Cell[BoxData[
    \(\(\(X\_2\  = \ IterateRefine[1];\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \(\(\(X\_3\  = \ IterateRefine[2];\)\(\ \)\)\)], "Input"],

Cell["\<\
Now print out the sequence of approximations to the solution.  \
\>", "Text"],

Cell[BoxData[{
    \(\(Print["\<The solutions to\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[Atrue], MatrixForm[vars], "\< = \>", 
        MatrixForm[B]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Are\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<{\!\(X\_i\)\!\(\(}\_\(i = 1\)\%3\)\) = \>\"", 
        NumberForm[MatrixForm[X\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_3], 17]\ ];\)\)}], "Input"],

Cell["The sequence of residuals can also be considered.  ", "Text"],

Cell[BoxData[
    \(\(Print[\*"\"\<{X-\!\(X\_i\) = \!\(R\_i\)\!\(\(}\_\(i = 1\)\%3\)\) = \>\
\"", NumberForm[MatrixForm[R\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_3], 17]\ ];\)\)], "Input"],

Cell[TextData[{
  StyleBox["We are done!",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  "  Iterative refinement has converged after one or two steps. \n\n",
  StyleBox["Caveat.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 1]],
  "  If iteration is done one more time the values will not get closer to the \
solution. "
}], "Text"],

Cell[BoxData[
    \(\(\(X\_4\  = \ IterateRefine[3];\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \(\(Print[\*"\"\<{\!\(X\_i\)\!\(\(}\_\(i = 1\)\%4\)\) = \>\"", 
        NumberForm[MatrixForm[X\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_3], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_4], 17\ ]\ ];\)\)], "Input"],

Cell[BoxData[
    \(\(Print[\*"\"\<{X-\!\(X\_i\) = \!\(R\_i\)\!\(\(}\_\(i = 1\)\%4\)\) = \>\
\"", NumberForm[MatrixForm[R\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_3], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_4], 17]\ ];\)\)], "Input"],

Cell[TextData[{
  StyleBox["Warning.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 1]],
  "  We must proceed with caution when using a Hilbert matrix because the \
linear system might be ill conditioned.  "
}], "Text"],

Cell[BoxData[{
    \(\(Print["\<The system we solved was  A X = B\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print[MatrixForm[Atrue], MatrixForm[Partition[vars, 1]], "\< = \>", 
        MatrixForm[B]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The 'true' solution is\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(X\_true = N[X\_true];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<X = \>", MatrixForm[Partition[vars, 1]], "\< = \>", 
        MatrixForm[X\_true]];\)\ \)}], "Input"],

Cell[TextData[{
  "\tThe ",
  ButtonBox["condition number",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/ConditionNumber.html"], None},
    ButtonStyle->"Hyperlink"],
  " of the above system can be determined by ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  ". "
}], "Text"],

Cell[BoxData[{
    \(\(Needs["\<LinearAlgebra`MatrixManipulation`\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<The condition number of the matrix A is\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<Cond[A] = \>", \ 
        MatrixConditionNumber[N[A]]];\)\ \)}], "Input"],

Cell[TextData[{
  StyleBox["Fact.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  Given the linear system  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["A",
            FontWeight->"Bold"], " ", 
          StyleBox["X",
            FontWeight->"Bold"]}], "=", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox[".  If   ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox["A",
          FontWeight->"Bold"], "  ", 
        StyleBox["and",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "  ", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox["  are input with machine precision then a bound for the error in \
the computed solution  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  "  ",
  StyleBox["is given by\n\n\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          RowBox[{"\[LeftDoubleBracketingBar]", 
            RowBox[{
              StyleBox["X",
                FontWeight->"Bold"], "-", 
              StyleBox[\(X\&^\),
                FontWeight->"Bold"]}], "\[RightDoubleBracketingBar]"}], "  ", 
          "\[LessEqual]", "  ", 
          RowBox[{
            RowBox[{"\[LeftDoubleBracketingBar]", 
              StyleBox[\(X\&^\),
                FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}], 
            RowBox[{"Cond", "[", 
              StyleBox["A",
                FontWeight->"Bold"], "]"}]}]}], "\[Element]"}]]],
  " ",
  StyleBox["\n\nwhere ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \( \[Element] \)]],
  " ",
  StyleBox["is machine epsilon for the computer.  The computed solution  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  StyleBox["  loses about  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{\(log\_10\), 
        RowBox[{"Cond", "[", 
          StyleBox["A",
            FontWeight->"Bold"], "]"}]}]]],
  StyleBox["  decimal digits of accuracy relative to precision of input. ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[BoxData[{
    \(\(Needs["\<LinearAlgebra`MatrixManipulation`\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(error = 
        VectorNorm[Flatten[X\_true], 2]*
          MatrixConditionNumber[
            N[A]]*$MachineEpsilon;\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The condition number of the matrix A is\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<Cond[A]  =  \>", \ 
        MatrixConditionNumber[N[A]]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<    \[LeftDoubleBracketingBar]X\[RightDoubleBracketingBar]  \
=  \>", VectorNorm[Flatten[X\_true], 2]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<      \[Epsilon]  =  \>", \ $MachineEpsilon\ ];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\< \[LeftDoubleBracketingBar]X - \!\(X\&^\)\
\[RightDoubleBracketingBar] \[LessEqual]  \[LeftDoubleBracketingBar]X\
\[RightDoubleBracketingBar]*Cond[A]*\[Epsilon]\>\""\ ];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\< \[LeftDoubleBracketingBar]X - \!\(X\&^\)\
\[RightDoubleBracketingBar] \[LessEqual] (\>\"", 
        VectorNorm[Flatten[X\_true], 2], "\<)(\>", 
        MatrixConditionNumber[
          N[A]], "\<)(\>", $MachineEpsilon, "\<)\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\< \[LeftDoubleBracketingBar]X - \!\(X\&^\)\
\[RightDoubleBracketingBar] \[LessEqual]  \>\"", 
        error\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<A 'computed' solution might be of the form\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<X = \>", MatrixForm[Partition[vars, 1]], "\< = \>", 
        MatrixForm[X\_true*\(\[PlusMinus]error\)]];\)\ \)}], "Input"],

Cell[TextData[{
  StyleBox["Caveat.",
    FontWeight->"Bold",
    FontColor->RGBColor[0.996109, 0.500008, 0.750011]],
  "  ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " uses extended precision sixteen digit numbers, the solution",
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  StyleBox["  retains a little of this accuracy.  ",
    FontFamily->"Times New Roman"],
  " "
}], "Text"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 9.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Solve  ",
  Cell[BoxData[
      RowBox[{
        RowBox[{
          SubscriptBox[
            StyleBox["A",
              FontWeight->"Bold"], \(10\[Times]10\)], 
          StyleBox["X",
            FontWeight->"Bold"]}], "=", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  ",  where ",
  Cell[BoxData[
      SubscriptBox[
        StyleBox["A",
          FontWeight->"Bold"], \(10\[Times]10\)]]],
  " is the Hilbert matrix and  ",
  Cell[BoxData[
      RowBox[{
        StyleBox["B",
          FontWeight->"Bold"], 
        StyleBox[" ",
          FontWeight->"Plain"], 
        StyleBox["=",
          FontWeight->"Plain"], 
        StyleBox[" ",
          FontWeight->"Plain"], 
        StyleBox[
          SuperscriptBox[
            RowBox[{"(", 
              RowBox[{"10", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "9", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox["8",
                  FontFamily->"Courier New",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox["...",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox[" ",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "2", 
                StyleBox[",",
                  FontFamily->"Times New Roman",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "1"}], ")"}], 
            StyleBox["T",
              FontWeight->"Bold"]],
          FontWeight->"Plain"]}]]],
  ".  Use iterative refinement. "
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 9.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(n = 10;\)\ \ \), "\[IndentingNewLine]", 
    \(\(A\  = \(Atrue\  = 
          Table[1\/\(i + j - 1\), {i, n}, {j, 
              n}]\);\)\ \), "\[IndentingNewLine]", 
    \(\(B\  = \ Table[{n + 1 - i}, {i, n}];\)\ \), "\[IndentingNewLine]", 
    \(\(X\_true\  = LinearSolve[A, B];\)\), "\[IndentingNewLine]", 
    \(\(vars = 
        Table["\<x\>"\_i, {i, 1, Length[A]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the system\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[A], MatrixForm[vars], "\< = \>", 
        MatrixForm[B]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The true solution is\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<X = \>", MatrixForm[vars], "\< = \>", 
        MatrixForm[X\_true]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<To illustrate round off error we use numerical \
approximations.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Mathematica always uses 16 digits in its numerical \
calculations.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<But we display only 6 digits to make it easier to read.\>"];\
\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the system\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[N[A]], MatrixForm[vars], "\< = \>", 
        MatrixForm[B]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Remember. Mathematica uses 16 digits in its calculations for \
this example!\>"];\)\)}], "Input"],

Cell[TextData[{
  "\tThe first thing we must do is to compute the LU-factorization once.  \
However, we will form the numerical approximation to ",
  Cell[BoxData[
      StyleBox["A",
        FontWeight->"Bold"]]],
  " which contains only 16 digits of accuracy.  We should see some round off \
error in the computations.  \n\n",
  StyleBox["Attention.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox["Make sure you",
    FontColor->RGBColor[0, 0, 1]],
  " ",
  StyleBox["evaluate the next cell",
    FontColor->RGBColor[1, 0, 1]],
  " ",
  StyleBox["!",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]]
}], "Text"],

Cell[BoxData[{
    \(\(A = N[A];\)\), "\[IndentingNewLine]", 
    \(\(LUfactor[A];\)\)}], "Input"],

Cell[TextData[{
  "The numerical approximation  ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " obtained by the LU-factorization method is"
}], "Text"],

Cell[BoxData[{
    \(\(X\_1\  = \ SolveLU[B];\)\), "\[IndentingNewLine]", 
    \(\(R\_1\  = \ B - A . X\_1;\)\), "\[IndentingNewLine]", 
    \(\(\[CapitalDelta]X\  = \ \ SolveLU[R\_1];\)\), "\[IndentingNewLine]", 
    \(\(X\_2\  = \ X\_1\  + \ \[CapitalDelta]X;\)\), "\[IndentingNewLine]", 
    \(\(R\_2\  = \ B - A . X\_2;\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The numerical approximations obtained by \
LU-factorization\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<followed by one step of the iterative refinement method\>"];\
\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(X\_1\) = \>\"", 
        NumberForm[MatrixForm[X\_1], 17]];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(X\_2\) = \>\"", 
        NumberForm[MatrixForm[X\_2], 
          17], \*"\"\< \[TildeTilde] \!\(X\_true\) = \>\"", 
        MatrixForm[X\_true]];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<{\!\(X\_true\)-\!\(X\_i\) = \!\(R\_i\)\!\(\(}\_\(i = 1\)\
\%2\)\) = \>\"", NumberForm[MatrixForm[R\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_2], 17]\ ];\)\)}], "Input"],

Cell[TextData[StyleBox["We are done !",
  FontColor->RGBColor[0, 1, 1]]], "Text"],

Cell[TextData[{
  StyleBox["Aside.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  The approximation ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " was so close to the true solution that we have difficulty seeing the \
iterations converge.  For this reason, we will chose an arbitrary vector ",
  Cell[BoxData[
      StyleBox[\(X\_1\),
        FontWeight->"Bold"]]],
  " that is close and then perform the iteration.  This is for pedagogical \
purposes.  "
}], "Text"],

Cell[BoxData[{
    RowBox[{\(X\_1\), " ", "=", 
      TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
              {"1000"},
              {\(-90000\)},
              {"2000000"},
              {\(-20000000\)},
              {"100000000"},
              {\(-300000000\)},
              {"600000000"},
              {\(-600000000\)},
              {"300000000"},
              {\(-70000000\)}
              }], "\[NoBreak]", ")"}],
        Function[ BoxForm`e$, 
          MatrixForm[ BoxForm`e$]]]}], "\[IndentingNewLine]", 
    RowBox[{\(Print["\<For pedagogical purposes we choose the starting vector\
\>"];\), " "}], "\[IndentingNewLine]", \(Print[\*"\"\<\!\(X\_1\) = \>\"", 
        MatrixForm[X\_1]\ ];\)}], "Input"],

Cell["Next, perform the iterative refinement steps. ", "Text"],

Cell[BoxData[
    \(\(\(X\_2\  = \ IterateRefine[1];\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \(\(\(X\_3\  = \ IterateRefine[2];\)\(\ \)\)\)], "Input"],

Cell["\<\
Now print out the sequence of approximations to the solution.  \
\>", "Text"],

Cell[BoxData[{
    \(\(Print["\<The solutions to\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[MatrixForm[Atrue], MatrixForm[vars], "\< = \>", 
        MatrixForm[B]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Are\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<{\!\(X\_i\)\!\(\(}\_\(i = 1\)\%3\)\) = \>\"", 
        NumberForm[MatrixForm[X\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_3], 17]\ ];\)\)}], "Input"],

Cell["The sequence of residuals can also be considered.  ", "Text"],

Cell[BoxData[
    \(\(Print[\*"\"\<{X-\!\(X\_i\) = \!\(R\_i\)\!\(\(}\_\(i = 1\)\%3\)\) = \>\
\"", NumberForm[MatrixForm[R\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_3], 17]\ ];\)\)], "Input"],

Cell[TextData[{
  StyleBox["We are done!",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  "  Iterative refinement has converged after one or two steps. \n\n",
  StyleBox["Caveat.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 1]],
  "  If iteration is done one more time the values will not get closer to the \
solution. "
}], "Text"],

Cell[BoxData[
    \(\(\(X\_4\  = \ IterateRefine[3];\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \(\(Print[\*"\"\<{\!\(X\_i\)\!\(\(}\_\(i = 1\)\%4\)\) = \>\"", 
        NumberForm[MatrixForm[X\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_3], 17], "\< , \>", 
        NumberForm[MatrixForm[X\_4], 17\ ]\ ];\)\)], "Input"],

Cell[BoxData[
    \(\(Print[\*"\"\<{X-\!\(X\_i\) = \!\(R\_i\)\!\(\(}\_\(i = 1\)\%4\)\) = \>\
\"", NumberForm[MatrixForm[R\_1], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_2], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_3], 17], "\< , \>", 
        NumberForm[MatrixForm[R\_4], 17]\ ];\)\)], "Input"],

Cell[TextData[{
  StyleBox["Warning.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 1]],
  "  We must proceed with caution when using a Hilbert matrix because the \
linear system might be ill conditioned.  "
}], "Text"],

Cell[BoxData[{
    \(\(Print["\<The system we solved was  A X = B\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print[MatrixForm[Atrue], MatrixForm[Partition[vars, 1]], "\< = \>", 
        MatrixForm[B]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The 'true' solution is\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(X\_true = N[X\_true];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<X = \>", MatrixForm[Partition[vars, 1]], "\< = \>", 
        MatrixForm[X\_true]];\)\ \)}], "Input"],

Cell[TextData[{
  "\tThe ",
  ButtonBox["condition number",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/ConditionNumber.html"], None},
    ButtonStyle->"Hyperlink"],
  " of the above system can be determined by ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  ". "
}], "Text"],

Cell[BoxData[{
    \(\(Needs["\<LinearAlgebra`MatrixManipulation`\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<The condition number of the matrix A is\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<Cond[A] = \>", \ 
        MatrixConditionNumber[N[A]]];\)\ \)}], "Input"],

Cell[TextData[{
  StyleBox["Fact.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  Given the linear system  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["A",
            FontWeight->"Bold"], " ", 
          StyleBox["X",
            FontWeight->"Bold"]}], "=", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox[".  If   ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox["A",
          FontWeight->"Bold"], "  ", 
        StyleBox["and",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "  ", 
        StyleBox["B",
          FontWeight->"Bold"]}]]],
  StyleBox["  are input with machine precision then a bound for the error in \
the computed solution  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  "  ",
  StyleBox["is given by\n\n\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          RowBox[{"\[LeftDoubleBracketingBar]", 
            RowBox[{
              StyleBox["X",
                FontWeight->"Bold"], "-", 
              StyleBox[\(X\&^\),
                FontWeight->"Bold"]}], "\[RightDoubleBracketingBar]"}], "  ", 
          "\[LessEqual]", "  ", 
          RowBox[{
            RowBox[{"\[LeftDoubleBracketingBar]", 
              StyleBox[\(X\&^\),
                FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}], 
            RowBox[{"Cond", "[", 
              StyleBox["A",
                FontWeight->"Bold"], "]"}]}]}], "\[Element]"}]]],
  " ",
  StyleBox["\n\nwhere ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \( \[Element] \)]],
  " ",
  StyleBox["is machine epsilon for the computer.  The computed solution  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  StyleBox["  loses about  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{\(log\_10\), 
        RowBox[{"Cond", "[", 
          StyleBox["A",
            FontWeight->"Bold"], "]"}]}]]],
  StyleBox["  decimal digits of accuracy relative to precision of input. ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[BoxData[{
    \(\(Needs["\<LinearAlgebra`MatrixManipulation`\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(error = 
        VectorNorm[Flatten[X\_true], 2]*
          MatrixConditionNumber[
            N[A]]*$MachineEpsilon;\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The condition number of the matrix A is\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<Cond[A]  =  \>", \ 
        MatrixConditionNumber[N[A]]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<    \[LeftDoubleBracketingBar]X\[RightDoubleBracketingBar]  \
=  \>", VectorNorm[Flatten[X\_true], 2]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<      \[Epsilon]  =  \>", \ $MachineEpsilon\ ];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\< \[LeftDoubleBracketingBar]X - \!\(X\&^\)\
\[RightDoubleBracketingBar] \[LessEqual]  \[LeftDoubleBracketingBar]X\
\[RightDoubleBracketingBar]*Cond[A]*\[Epsilon]\>\""\ ];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\< \[LeftDoubleBracketingBar]X - \!\(X\&^\)\
\[RightDoubleBracketingBar] \[LessEqual] (\>\"", 
        VectorNorm[Flatten[X\_true], 2], "\<)(\>", 
        MatrixConditionNumber[
          N[A]], "\<)(\>", $MachineEpsilon, "\<)\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\< \[LeftDoubleBracketingBar]X - \!\(X\&^\)\
\[RightDoubleBracketingBar] \[LessEqual]  \>\"", 
        error\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<A 'computed' solution might be of the form\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<X = \>", MatrixForm[Partition[vars, 1]], "\< = \>", 
        MatrixForm[X\_true*\(\[PlusMinus]error\)]];\)\ \)}], "Input"],

Cell[TextData[{
  StyleBox["Caveat.",
    FontWeight->"Bold",
    FontColor->RGBColor[0.996109, 0.500008, 0.750011]],
  "  ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " uses extended precision sixteen digit numbers, the solution",
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      StyleBox[\(X\&^\),
        FontWeight->"Bold"]]],
  StyleBox["  retains a little of this accuracy.  ",
    FontFamily->"Times New Roman"],
  " "
}], "Text"]
}, Closed]],

Cell[TextData[StyleBox["Research Experience for Undergraduates",
  FontSize->14,
  FontWeight->"Bold",
  FontColor->RGBColor[0.500008, 0, 0.996109]]], "Text"],

Cell[TextData[{
  StyleBox[ButtonBox["Iterative Refinement",
    ButtonData:>{
      URL[ 
      "http://math.fullerton.edu/mathews/n2003/IterativeRefinementBib.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  "  Internet hyperlinks to web sites and a bibliography of articles.  "
}], "Text"],

Cell[TextData[{
  StyleBox[ButtonBox["Hilbert Matrix",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/HilbertMatrixBib.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  "  Internet hyperlinks to web sites and a bibliography of articles.  "
}], "Text"],

Cell[TextData[{
  StyleBox[ButtonBox["Ill-Conditioned Linear Systems",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/IllConditionBib.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  "  Internet hyperlinks to web sites and a bibliography of articles.  "
}], "Text"],

Cell[TextData[StyleBox[ButtonBox["Return to the Numerical Analysis Project",
  ButtonData:>{
    URL[ "http://math.fullerton.edu/mathews/numerical.html"], None},
  ButtonStyle->"Hyperlink"],
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1],
  FontVariations->{"Underline"->True}]], "Text"]
},
FrontEndVersion->"5.2 for Microsoft Windows",
ScreenRectangle->{{0, 1024}, {0, 685}},
CellGrouping->Manual,
WindowSize->{1017, 627},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{5, 6}
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 222, 6, 35, "Text"],
Cell[2001, 61, 1133, 38, 140, "Text"]
}, Closed]],
Cell[3149, 102, 1361, 45, 144, "Text"],
Cell[4513, 149, 2671, 94, 109, "Text"],
Cell[7187, 245, 727, 23, 33, "Text"],
Cell[7917, 270, 4869, 139, 71, "Text"],
Cell[12789, 411, 3939, 109, 101, "Text"],
Cell[16731, 522, 3317, 96, 53, "Text"],

Cell[CellGroupData[{
Cell[20073, 622, 101, 2, 33, "Text"],
Cell[20177, 626, 446, 13, 73, "Text"],
Cell[20626, 641, 2362, 52, 296, "Input"]
}, Closed]],
Cell[23003, 696, 962, 33, 68, "Text"],
Cell[23968, 731, 2774, 96, 128, "Text"],
Cell[26745, 829, 727, 23, 33, "Text"],
Cell[27475, 854, 713, 22, 33, "Text"],
Cell[28191, 878, 881, 25, 90, "Text"],
Cell[29075, 905, 557, 21, 33, "Text"],
Cell[29635, 928, 3046, 54, 273, "Input"],
Cell[32684, 984, 584, 18, 33, "Text"],
Cell[33271, 1004, 1537, 28, 212, "Input"],
Cell[34811, 1034, 1091, 38, 57, "Text",
  Evaluatable->False],

Cell[CellGroupData[{
Cell[35927, 1076, 101, 2, 33, "Text"],
Cell[36031, 1080, 366, 14, 33, "Text"],
Cell[36400, 1096, 720, 15, 160, "Input"],
Cell[37123, 1113, 435, 18, 71, "Text"],
Cell[37561, 1133, 49, 1, 30, "Input"],
Cell[37613, 1136, 452, 23, 33, "Text"],
Cell[38068, 1161, 1033, 18, 250, "Input"],
Cell[39104, 1181, 104, 5, 33, "Text"],
Cell[39211, 1188, 384, 10, 100, "Input"],
Cell[39598, 1200, 202, 11, 33, "Text"],
Cell[39803, 1213, 849, 14, 210, "Input"],
Cell[40655, 1229, 761, 25, 71, "Text"],
Cell[41419, 1256, 1460, 23, 330, "Input"],
Cell[42882, 1281, 543, 21, 33, "Text"],
Cell[43428, 1304, 786, 12, 210, "Input"],
Cell[44217, 1318, 363, 15, 33, "Text",
  Evaluatable->False],
Cell[44583, 1335, 360, 6, 70, "Input"],
Cell[44946, 1343, 566, 23, 52, "Text"],
Cell[45515, 1368, 404, 11, 100, "Input"],
Cell[45922, 1381, 206, 11, 33, "Text"],
Cell[46131, 1394, 849, 14, 210, "Input"]
}, Closed]],
Cell[46995, 1411, 1131, 36, 106, "Text"],
Cell[48129, 1449, 1008, 35, 33, "Text"],
Cell[49140, 1486, 5946, 190, 223, "Text"],
Cell[55089, 1678, 589, 21, 71, "Text"],
Cell[55681, 1701, 4537, 137, 145, "Text"],
Cell[60221, 1840, 416, 14, 33, "Text"],
Cell[60640, 1856, 4107, 133, 276, "Text"],
Cell[64750, 1991, 408, 13, 33, "Text"],
Cell[65161, 2006, 1544, 43, 183, "Text"],
Cell[66708, 2051, 2233, 40, 430, "Input"],
Cell[68944, 2093, 3384, 97, 109, "Text"],
Cell[72331, 2192, 502, 11, 52, "Text"],
Cell[72836, 2205, 1106, 35, 73, "Text",
  Evaluatable->False],

Cell[CellGroupData[{
Cell[73967, 2244, 101, 2, 33, "Text"],
Cell[74071, 2248, 327, 14, 33, "Text",
  Evaluatable->False],
Cell[74401, 2264, 1433, 36, 271, "Input"],
Cell[75837, 2302, 156, 4, 33, "Text"],
Cell[75996, 2308, 1493, 49, 128, "Text"],
Cell[77492, 2359, 419, 15, 71, "Text"],
Cell[77914, 2376, 49, 1, 30, "Input"],
Cell[77966, 2379, 69, 0, 33, "Text"],
Cell[78038, 2381, 2655, 53, 438, "Input"],
Cell[80696, 2436, 91, 2, 33, "Text"]
}, Closed]],
Cell[80802, 2441, 939, 32, 86, "Text",
  Evaluatable->False],

Cell[CellGroupData[{
Cell[81766, 2477, 101, 2, 33, "Text"],
Cell[81870, 2481, 327, 14, 33, "Text",
  Evaluatable->False],
Cell[82200, 2497, 1484, 38, 309, "Input"],
Cell[83687, 2537, 156, 4, 33, "Text"],
Cell[83846, 2543, 1874, 58, 134, "Text"],
Cell[85723, 2603, 419, 15, 71, "Text"],
Cell[86145, 2620, 49, 1, 30, "Input"],
Cell[86197, 2623, 69, 0, 33, "Text"],
Cell[86269, 2625, 2791, 57, 456, "Input"],
Cell[89063, 2684, 91, 2, 33, "Text"]
}, Closed]],
Cell[89169, 2689, 905, 25, 35, "Text"],
Cell[90077, 2716, 2437, 73, 33, "Text",
  Evaluatable->False],

Cell[CellGroupData[{
Cell[92539, 2793, 101, 2, 33, "Text"],
Cell[92643, 2797, 778, 14, 206, "Input"],
Cell[93424, 2813, 655, 21, 90, "Text"],
Cell[94082, 2836, 98, 2, 50, "Input"],
Cell[94183, 2840, 182, 6, 33, "Text"],
Cell[94368, 2848, 1089, 18, 211, "Input"],
Cell[95460, 2868, 81, 1, 33, "Text"],
Cell[95544, 2871, 518, 15, 52, "Text"],
Cell[96065, 2888, 526, 15, 116, "Input"],
Cell[96594, 2905, 91, 2, 33, "Text"],
Cell[96688, 2909, 87, 2, 33, "Text"],
Cell[96778, 2913, 436, 7, 91, "Input"],
Cell[97217, 2922, 67, 0, 33, "Text"],
Cell[97287, 2924, 203, 3, 31, "Input"],
Cell[97493, 2929, 349, 10, 71, "Text"],
Cell[97845, 2941, 75, 1, 30, "Input"],
Cell[97923, 2944, 249, 4, 31, "Input"],
Cell[98175, 2950, 249, 4, 31, "Input"],
Cell[98427, 2956, 228, 6, 33, "Text"],
Cell[98658, 2964, 488, 8, 110, "Input"],
Cell[99149, 2974, 299, 10, 33, "Text"],
Cell[99451, 2986, 287, 6, 70, "Input"],
Cell[99741, 2994, 2481, 78, 109, "Text"],
Cell[102225, 3074, 1620, 31, 233, "Input"],
Cell[103848, 3107, 475, 16, 33, "Text"]
}, Closed]],
Cell[104338, 3126, 3504, 99, 30, "Text",
  Evaluatable->False],

Cell[CellGroupData[{
Cell[107867, 3229, 101, 2, 33, "Text"],
Cell[107971, 3233, 1432, 25, 326, "Input"],
Cell[109406, 3260, 655, 21, 90, "Text"],
Cell[110064, 3283, 98, 2, 50, "Input"],
Cell[110165, 3287, 182, 6, 33, "Text"],
Cell[110350, 3295, 1089, 18, 211, "Input"],
Cell[111442, 3315, 81, 1, 33, "Text"],
Cell[111526, 3318, 518, 15, 52, "Text"],
Cell[112047, 3335, 637, 16, 154, "Input"],
Cell[112687, 3353, 62, 0, 33, "Text"],
Cell[112752, 3355, 75, 1, 30, "Input"],
Cell[112830, 3358, 75, 1, 30, "Input"],
Cell[112908, 3361, 87, 2, 33, "Text"],
Cell[112998, 3365, 490, 8, 91, "Input"],
Cell[113491, 3375, 67, 0, 33, "Text"],
Cell[113561, 3377, 257, 4, 52, "Input"],
Cell[113821, 3383, 357, 10, 71, "Text"],
Cell[114181, 3395, 75, 1, 30, "Input"],
Cell[114259, 3398, 305, 5, 52, "Input"],
Cell[114567, 3405, 303, 5, 52, "Input"],
Cell[114873, 3412, 228, 6, 33, "Text"],
Cell[115104, 3420, 488, 8, 110, "Input"],
Cell[115595, 3430, 299, 10, 33, "Text"],
Cell[115897, 3442, 287, 6, 70, "Input"],
Cell[116187, 3450, 2481, 78, 109, "Text"],
Cell[118671, 3530, 1620, 31, 233, "Input"],
Cell[120294, 3563, 475, 16, 33, "Text"]
}, Closed]],
Cell[120784, 3582, 3504, 99, 30, "Text",
  Evaluatable->False],

Cell[CellGroupData[{
Cell[124313, 3685, 101, 2, 33, "Text"],
Cell[124417, 3689, 1432, 25, 326, "Input"],
Cell[125852, 3716, 655, 21, 90, "Text"],
Cell[126510, 3739, 98, 2, 50, "Input"],
Cell[126611, 3743, 182, 6, 33, "Text"],
Cell[126796, 3751, 1089, 18, 211, "Input"],
Cell[127888, 3771, 81, 1, 33, "Text"],
Cell[127972, 3774, 518, 15, 52, "Text"],
Cell[128493, 3791, 673, 17, 172, "Input"],
Cell[129169, 3810, 62, 0, 33, "Text"],
Cell[129234, 3812, 75, 1, 30, "Input"],
Cell[129312, 3815, 75, 1, 30, "Input"],
Cell[129390, 3818, 87, 2, 33, "Text"],
Cell[129480, 3822, 490, 8, 91, "Input"],
Cell[129973, 3832, 67, 0, 33, "Text"],
Cell[130043, 3834, 257, 4, 52, "Input"],
Cell[130303, 3840, 357, 10, 71, "Text"],
Cell[130663, 3852, 75, 1, 30, "Input"],
Cell[130741, 3855, 305, 5, 52, "Input"],
Cell[131049, 3862, 311, 5, 52, "Input"],
Cell[131363, 3869, 228, 6, 33, "Text"],
Cell[131594, 3877, 488, 8, 110, "Input"],
Cell[132085, 3887, 299, 10, 33, "Text"],
Cell[132387, 3899, 287, 6, 70, "Input"],
Cell[132677, 3907, 2481, 78, 109, "Text"],
Cell[135161, 3987, 1620, 31, 233, "Input"],
Cell[136784, 4020, 475, 16, 33, "Text"]
}, Closed]],
Cell[137274, 4039, 3755, 105, 30, "Text",
  Evaluatable->False],

Cell[CellGroupData[{
Cell[141054, 4148, 101, 2, 33, "Text"],
Cell[141158, 4152, 1432, 25, 326, "Input"],
Cell[142593, 4179, 655, 21, 90, "Text"],
Cell[143251, 4202, 98, 2, 50, "Input"],
Cell[143352, 4206, 182, 6, 33, "Text"],
Cell[143537, 4214, 1089, 18, 211, "Input"],
Cell[144629, 4234, 81, 1, 33, "Text"],
Cell[144713, 4237, 518, 15, 52, "Text"],
Cell[145234, 4254, 819, 21, 190, "Input"],
Cell[146056, 4277, 62, 0, 33, "Text"],
Cell[146121, 4279, 75, 1, 30, "Input"],
Cell[146199, 4282, 75, 1, 30, "Input"],
Cell[146277, 4285, 87, 2, 33, "Text"],
Cell[146367, 4289, 490, 8, 91, "Input"],
Cell[146860, 4299, 67, 0, 33, "Text"],
Cell[146930, 4301, 257, 4, 52, "Input"],
Cell[147190, 4307, 350, 10, 71, "Text"],
Cell[147543, 4319, 75, 1, 30, "Input"],
Cell[147621, 4322, 305, 5, 52, "Input"],
Cell[147929, 4329, 311, 5, 52, "Input"],
Cell[148243, 4336, 228, 6, 33, "Text"],
Cell[148474, 4344, 488, 8, 110, "Input"],
Cell[148965, 4354, 299, 10, 33, "Text"],
Cell[149267, 4366, 287, 6, 70, "Input"],
Cell[149557, 4374, 2481, 78, 109, "Text"],
Cell[152041, 4454, 1620, 31, 233, "Input"],
Cell[153664, 4487, 475, 16, 33, "Text"]
}, Closed]],
Cell[154154, 4506, 3754, 105, 30, "Text",
  Evaluatable->False],

Cell[CellGroupData[{
Cell[157933, 4615, 101, 2, 33, "Text"],
Cell[158037, 4619, 1432, 25, 326, "Input"],
Cell[159472, 4646, 655, 21, 90, "Text"],
Cell[160130, 4669, 98, 2, 50, "Input"],
Cell[160231, 4673, 182, 6, 33, "Text"],
Cell[160416, 4681, 1089, 18, 211, "Input"],
Cell[161508, 4701, 81, 1, 33, "Text"],
Cell[161592, 4704, 518, 15, 52, "Text"],
Cell[162113, 4721, 743, 19, 208, "Input"],
Cell[162859, 4742, 62, 0, 33, "Text"],
Cell[162924, 4744, 75, 1, 30, "Input"],
Cell[163002, 4747, 75, 1, 30, "Input"],
Cell[163080, 4750, 87, 2, 33, "Text"],
Cell[163170, 4754, 490, 8, 91, "Input"],
Cell[163663, 4764, 67, 0, 33, "Text"],
Cell[163733, 4766, 257, 4, 52, "Input"],
Cell[163993, 4772, 357, 10, 71, "Text"],
Cell[164353, 4784, 75, 1, 30, "Input"],
Cell[164431, 4787, 305, 5, 52, "Input"],
Cell[164739, 4794, 311, 5, 52, "Input"],
Cell[165053, 4801, 228, 6, 33, "Text"],
Cell[165284, 4809, 488, 8, 110, "Input"],
Cell[165775, 4819, 299, 10, 33, "Text"],
Cell[166077, 4831, 287, 6, 70, "Input"],
Cell[166367, 4839, 2481, 78, 109, "Text"],
Cell[168851, 4919, 1620, 31, 233, "Input"],
Cell[170474, 4952, 475, 16, 33, "Text"]
}, Closed]],
Cell[170964, 4971, 3759, 105, 30, "Text",
  Evaluatable->False],

Cell[CellGroupData[{
Cell[174748, 5080, 101, 2, 33, "Text"],
Cell[174852, 5084, 1433, 25, 326, "Input"],
Cell[176288, 5111, 655, 21, 90, "Text"],
Cell[176946, 5134, 98, 2, 50, "Input"],
Cell[177047, 5138, 182, 6, 33, "Text"],
Cell[177232, 5146, 1089, 18, 211, "Input"],
Cell[178324, 5166, 81, 1, 33, "Text"],
Cell[178408, 5169, 518, 15, 52, "Text"],
Cell[178929, 5186, 727, 19, 226, "Input"],
Cell[179659, 5207, 62, 0, 33, "Text"],
Cell[179724, 5209, 75, 1, 30, "Input"],
Cell[179802, 5212, 75, 1, 30, "Input"],
Cell[179880, 5215, 87, 2, 33, "Text"],
Cell[179970, 5219, 490, 8, 91, "Input"],
Cell[180463, 5229, 67, 0, 33, "Text"],
Cell[180533, 5231, 257, 4, 52, "Input"],
Cell[180793, 5237, 357, 10, 71, "Text"],
Cell[181153, 5249, 75, 1, 30, "Input"],
Cell[181231, 5252, 305, 5, 52, "Input"],
Cell[181539, 5259, 311, 5, 52, "Input"],
Cell[181853, 5266, 228, 6, 33, "Text"],
Cell[182084, 5274, 488, 8, 110, "Input"],
Cell[182575, 5284, 299, 10, 33, "Text"],
Cell[182877, 5296, 287, 6, 70, "Input"],
Cell[183167, 5304, 2481, 78, 109, "Text"],
Cell[185651, 5384, 1620, 31, 233, "Input"],
Cell[187274, 5417, 475, 16, 33, "Text"]
}, Closed]],
Cell[187764, 5436, 158, 3, 32, "Text"],
Cell[187925, 5441, 323, 9, 33, "Text"],
Cell[188251, 5452, 304, 8, 33, "Text"],
Cell[188558, 5462, 319, 8, 33, "Text"],
Cell[188880, 5472, 293, 6, 33, "Text"]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

