(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    149385,       3885]*)
(*NotebookOutlinePosition[    150609,       3924]*)
(*  CellTagsIndexPosition[    150565,       3920]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Module for the Tangent Parabola",
  FontFamily->"New Century Schlbk",
  FontSize->14,
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]], "Text"],

Cell[TextData[{
  StyleBox["Numerical Methods using ",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["Mathematica",
    FontSize->14,
    FontWeight->"Bold",
    FontSlant->"Italic",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[" ",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[" ",
    FontSize->14],
  StyleBox["\n",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0.250004, 0.250004]],
  StyleBox["Complementary software supplements for  ",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0.996109, 0]],
  StyleBox[" \n",
    FontSize->14],
  StyleBox[ButtonBox["Numerical Methods textbooks",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/numerical.html"], None},
    ButtonStyle->"Hyperlink"],
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  StyleBox["  ",
    FontSize->14],
  StyleBox["\n",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0.250004, 0.250004]],
  StyleBox[ButtonBox["John H. Mathews and Kurtis Fink, 2004",
    ButtonData:>{
      URL[ "http://www.ecs.fullerton.edu/~mathews/numerical.html"], None},
    ButtonStyle->"Hyperlink"],
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  StyleBox["  ",
    FontSize->14,
    FontColor->RGBColor[0.500008, 0, 0.996109]]
}], "Text"]
}, Closed]],

Cell[TextData[{
  StyleBox["The Tangent Parabola",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[" \nby\nJohn H. Mathews\nRussell W. Howell\n",
    FontColor->RGBColor[0, 0, 1]],
  ButtonBox["The AMATYC Review, Vol. 23, No. 1, Fall 2001, pp. 25-32.",
    ButtonData:>{
      URL[ 
      "http://math.fullerton.edu/mathews/articles/2001TangentParabola.pdf"], 
      None},
    ButtonStyle->"Hyperlink"]
}], "Text",
  TextAlignment->Center,
  AspectRatioFixed->False,
  ImageRegion->{{0, 1}, {0, 1}}],

Cell[TextData[{
  StyleBox["Background",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  ",
    FontColor->RGBColor[0, 0, 1]],
  "\n\n\tThe limit of \[OpenCurlyDoubleQuote]the secant line\
\[CloseCurlyDoubleQuote] is \[OpenCurlyDoubleQuote]the tangent line.\
\[CloseCurlyDoubleQuote]  We recast this in the context of polynomial \
approximation.  The secant line is the ",
  ButtonBox["Newton polynomial",
    ButtonData:>{
      URL[ 
      "http://mathworld.wolfram.com/\
NewtonsDividedDifferenceInterpolationFormula.html"], None},
    ButtonStyle->"Hyperlink"],
  "  ",
  Cell[BoxData[
      \(\(P\_1\) \((x)\)\)]],
  ",  and the tangent line as the Taylor polynomial  ",
  Cell[BoxData[
      \(\(T\_1\) \((x)\)\)]],
  ",  where each has degree  ",
  Cell[BoxData[
      \(n = 1\)]],
  ".    "
}], "Text",
  CellMargins->{{Inherited, 71}, {Inherited, Inherited}},
  AspectRatioFixed->False,
  ImageRegion->{{0, 1}, {0, 1}}],

Cell[TextData[{
  "The Newton polynomial",
  "  ",
  Cell[BoxData[
      \(\(P\_1\) \((x)\)\)]],
  ",  ",
  "has the form:\n\n",
  StyleBox["(i)",
    FontColor->RGBColor[0, 0, 1]],
  "\t\t",
  Cell[BoxData[
      \(y\  = \ \(\(P\_1\) \((x)\)\  = \ 
          a\_0\  + \ \(a\_1\) \((x - x\_0)\)\)\)]],
  ".\n\nThe coefficients ",
  Cell[BoxData[
      \(a\_0\)]],
  " and ",
  Cell[BoxData[
      \(a\_1\)]],
  " are determined by forcing  ",
  Cell[BoxData[
      \(\(P\_1\) \((x)\)\)]],
  "  to pass through two points  ",
  Cell[BoxData[
      \(\((x\_0, f \((x\_0)\))\)\)]],
  " and ",
  Cell[BoxData[
      \(\((x\_0 + h, f \((x\_0 + h)\))\)\)]],
  ".  Here we have used the notation  ",
  Cell[BoxData[
      \(x\_1\  = \ x\_0 + h\)]],
  " for the second point.  \n\t\t\t\t\t\nUsing the equation  ",
  Cell[BoxData[
      \(a\_0\  + \ \(a\_1\) \((x - x\_0)\)\  = \ y\)]],
  "  and the two points produces a lower-triangular linear system of \
equations: \n\n\t\t",
  Cell[BoxData[{
      \(\(\(a\_0\  + \ \(a\_1\) \((x\_0 - x\_0)\)\  = \ 
        f \((x\_0)\)\)\(\[IndentingNewLine]\)
      \)\), "\[IndentingNewLine]", 
      \(a\_0\  + \ \(a\_1\) \((x\_0 + h - x\_0)\)\  = \ 
        f \((x\_0 + h)\)\)}]],
  "  \n\nwhich simplifies to be \n\n",
  StyleBox["(ii)",
    FontColor->RGBColor[0, 0, 1]],
  "\t\t",
  Cell[BoxData[{
      \(\(\(a\_0\ \  = \ f \((x\_0)\)\)\(\[IndentingNewLine]\)
      \)\), "\[IndentingNewLine]", 
      \(a\_0\  + \ \(a\_1\) h\  = \ f \((x\_0 + h)\)\)}]],
  "  \n\nwhich is easily solved using forward elimination:  ",
  Cell[BoxData[
      \(\(a\_1\) h\  = \ f \((x\_0 + h)\) - f \((x\_0)\)\)]],
  ",  and  ",
  Cell[BoxData[
      \(a\_1\  = \ \(f \((x\_0 + h)\) - f \((x\_0)\)\)\/h\)]],
  ".  Substitute  ",
  Cell[BoxData[
      \(a\_0\)]],
  " and ",
  Cell[BoxData[
      \(a\_1\)]],
  " into equation (i) and get\n\n",
  StyleBox["(iii)",
    FontColor->RGBColor[0, 0, 1]],
  "\t\t",
  Cell[BoxData[
      \(y\  = \ \(\(P\_1\) \((x)\)\  = \ 
          f \((x\_0)\)\  + \ \(\(f \((x\_0 + h)\) - 
                    f \((x\_0)\)\)\/h\) \((x - x\_0)\)\)\)]],
  "\n\n     As ",
  StyleBox["h",
    FontFamily->"Courier New"],
  " approaches ",
  StyleBox["0",
    FontFamily->"Courier New"],
  " in equation (iii), the limit of the difference quotient  ",
  Cell[BoxData[
      \(\(f \((x\_0 + h)\) - f \((x\_0)\)\)\/h\)]],
  "  is the derivative  ",
  Cell[BoxData[
      \(f' \((x\_0)\)\)]],
  "  and the limit of the Newton Polynomial  ",
  Cell[BoxData[
      \(\(P\_1\) \((x)\)\)]],
  "  is seen to be the Taylor polynomial  ",
  Cell[BoxData[
      \(\(T\_1\) \((x)\)\)]],
  ":\n\n\t",
  Cell[BoxData[
      \(y\  = \ \(\(T\_1\) \((x)\)\  = \ 
          f \((x\_0)\)\  + \ f' \((x\_0)\) \((x - x\_0)\)\)\)]],
  ".  \n\nThis background is the motivation to investigate the idea of \
polynomial approximations and their limits."
}], "Text",
  AspectRatioFixed->False,
  ImageRegion->{{0, 1}, {0, 1}}],

Cell[TextData[{
  "\tThe secant line which is used to approximate  ",
  Cell[BoxData[
      \(y = f \((x)\)\)]],
  "  it is based on two points ",
  Cell[BoxData[
      \(\((x\_0, f \((x\_0)\))\)\)]],
  " and ",
  Cell[BoxData[
      \(\((x\_0 + h, f \((x\_0 + h)\))\)\)]],
  ".  What if we used three points?  Then we could determine a polynomial of \
degree ",
  Cell[BoxData[
      \(n = 2\)]],
  ", which could also be used to approximate  ",
  Cell[BoxData[
      \(y = f \((x)\)\)]],
  ".  Thus, we have the concept of  \"the secant parabola\" with \
interpolation points ",
  Cell[BoxData[
      \(\((x\_0, f \((x\_0)\))\)\)]],
  ", ",
  Cell[BoxData[
      \(\((x\_0 - h, f \((x\_0 - h)\))\)\)]],
  ", and ",
  Cell[BoxData[
      \(\((x\_0 + h, f \((x\_0 + h)\))\)\)]],
  ".  "
}], "Text",
  AspectRatioFixed->False,
  ImageRegion->{{0, 1}, {0, 1}}],

Cell[TextData[{
  "\t\t",
  Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .4 
%%ImageSize: 400 160 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-1.14383e-017 0.31831 1.37423e-017 0.380952 [
[.31831 -0.0125 -3 -9 ]
[.31831 -0.0125 3 0 ]
[.5 -0.0125 -8.09375 -18.1875 ]
[.5 -0.0125 8.09375 0 ]
[1 -0.0125 -5 -12.5625 ]
[1 -0.0125 5 0 ]
[-0.0125 .38095 -6 -4.5 ]
[-0.0125 .38095 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .4 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.28648 0 m
.28648 .00625 L
s
.31831 0 m
.31831 .00625 L
s
[(1)] .31831 -0.0125 0 1 Mshowa
.35014 0 m
.35014 .00625 L
s
.5 0 m
.5 .00625 L
s
gsave
.5 -0.0125 -69.0938 -22.1875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 26.1875 translate 1 -1 scale
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding WindowsANSIEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
66.063 9.313 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(p) show
64.750 15.125 moveto
(\\200\\200) show
69.000 15.125 moveto
(\\200) show
71.063 15.125 moveto
(\\200) show
66.063 21.188 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
1 0 m
1 .00625 L
s
gsave
1 -0.0125 -66 -16.5625 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20.5625 translate 1 -1 scale
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding WindowsANSIEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 12.813 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(p) show
1.000 setlinewidth
grestore
0 0 m
1 0 L
s
0 .38095 m
.00625 .38095 L
s
[(1)] -0.0125 .38095 1 0 Mshowa
0 0 m
0 .4 L
s
0 0 m
1 0 L
1 .4 L
0 .4 L
closepath
clip
newpath
1 0 0 r
.5 Mabswid
0 0 m
.04057 .04842 L
.08481 .1003 L
.12636 .14729 L
.16632 .19012 L
.20885 .2324 L
.2498 .2692 L
.29331 .30343 L
.33524 .33105 L
.37557 .35222 L
.39599 .3608 L
.41848 .36853 L
.43982 .37416 L
.44937 .37614 L
.4598 .37792 L
.46545 .37871 L
.4707 .37934 L
.47614 .37988 L
.48106 .38028 L
.48591 .38058 L
.48813 .38069 L
.49048 .38078 L
.49299 .38086 L
.4941 .38089 L
.4953 .38091 L
.49658 .38093 L
.49778 .38094 L
.49852 .38095 L
.49921 .38095 L
.50051 .38095 L
.50171 .38095 L
.503 .38094 L
.50421 .38092 L
.50533 .3809 L
.50792 .38083 L
.51065 .38074 L
.51331 .38062 L
.51579 .38048 L
.52142 .38009 L
.53077 .37917 L
.54076 .37783 L
.55151 .37597 L
.56317 .37347 L
.58433 .36766 L
.6273 .35089 L
.66867 .32871 L
.70845 .30214 L
.75081 .26869 L
.79157 .232 L
.83491 .18884 L
Mistroke
.87666 .14394 L
.91682 .09842 L
.95955 .04828 L
1 0 L
Mfstroke
0 0 1 r
.02839 0 m
.04057 .01933 L
.08481 .08364 L
.12636 .13841 L
.16632 .18593 L
.20885 .23096 L
.2498 .26891 L
.29331 .30344 L
.33524 .33104 L
.37557 .35234 L
.39599 .36117 L
.41848 .36937 L
.44006 .37573 L
.4598 .38026 L
.46955 .38204 L
.48018 .38364 L
.48601 .38437 L
.49142 .38495 L
.49698 .38545 L
.5021 .38582 L
.50743 .38612 L
.51024 .38624 L
.5132 .38634 L
.51444 .38637 L
.51578 .3864 L
.51693 .38643 L
.51818 .38645 L
.51895 .38646 L
.51965 .38646 L
.52033 .38647 L
.52104 .38647 L
.52228 .38648 L
.52365 .38647 L
.52489 .38647 L
.52618 .38645 L
.52729 .38644 L
.5285 .38642 L
.53121 .38636 L
.53373 .38628 L
.5383 .38608 L
.54319 .3858 L
.54879 .38539 L
.55395 .38492 L
.5656 .38354 L
.57588 .38198 L
.58676 .37995 L
.60732 .37511 L
.62654 .36937 L
.66731 .35334 L
.71065 .33054 L
Mistroke
.7524 .30295 L
.79256 .27122 L
.83529 .23186 L
.87643 .18851 L
.92015 .13658 L
.96227 .08083 L
1 .02613 L
Mfstroke
1 0 1 r
.012 w
.28648 .29841 Mdot
.31831 .32056 Mdot
.35014 .33951 Mdot
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
    ImageSize->{400, 160},
    ImageMargins->{{0, 0}, {0, 0}},
    ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006@0000X2000`400?l00000o`00003oo`3ooonA
0?ooo`00o`3ooonA0?ooo`00b03oool400000<@0oooo00380?ooo`030000003oool0oooo0<D0oooo
00390?ooo`030000003oool0oooo0<@0oooo003:0?ooo`030000003oool0oooo0<<0oooo00380?oo
o`040000003oool0oooo00000<@0oooo00390?ooo`800000a@3oool00?l0ooooT@3oool00?l0oooo
T@3oool00<D0oooo100000000`3oool000000000000200000<80oooo002:0?ooo`D00000hP3oool0
0`000000oooo0?ooo`020?ooo`030000003oool0oooo01L0oooo002<0?ooo`030000003oool0oooo
0><0oooo00@000000?ooo`3oool000006P3oool008`0oooo00<000000?ooo`3oool0i03oool00`00
0000oooo0000000J0?ooo`00S03oool00`000000oooo0?ooo`0h0?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool0Y03oool00`000000oooo0000000J0?ooo`00S03oool00`000000oooo
0?ooo`0i0?ooo`040000003oool0oooo00000:H0oooo1@00000I0?ooo`00R`3oool2000003`0oooo
00<000000?ooo`000000a03oool00<T0oooo00<000000?ooo`000000a03oool00<P0oooo1@000033
0?ooo`00o`3ooonA0?ooo`00o`3ooonA0?ooo`00o`3ooonA0?ooo`00o`3ooonA0?ooo`007`3oool0
0`3o0000000000000007000000030000o`00000000000?l00000B@0000000`3o0000oooo0?ooo`0I
0?ooo`007`3oool00`000000o`000?ooo`080?ooo`030000o`3oool0oooo05@0oooo00<000000?oo
o`3oool0203oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0340oooo00<000000?oo
o`3oool0YP3oool00`3o000000000?ooo`0J0?ooo`007`3oool00`000000oooo0?l000080?ooo`03
0000o`3oool0oooo05@0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`070?ooo`03
0000003oool0oooo0340oooo00<000000?ooo`3oool0Y@3oool00`3o0000oooo0000000K0?ooo`00
7`3oool010000000oooo0?ooo`3o00080?ooo`030000o`3oool0oooo0?l0ooooA@3oool00`3o0000
oooo0?ooo`0K0?ooo`007`3oool010000000oooo0?ooo`3o00080?ooo`030000o`3oool0oooo0?l0
ooooA03oool00`3o0000oooo0?ooo`0L0?ooo`007`3oool01@000000oooo0?ooo`3oool0o`0000P0
oooo00<0003o0?ooo`3oool0o`3ooom20?ooo`030?l0003oool0oooo01d0oooo000O0?ooo`030000
003oool0oooo0080oooo00<0o`000?ooo`3oool01@3oool00`000?l0oooo0?ooo`3o0?oood40oooo
00<0o`000?ooo`3oool07P3oool001l0oooo00<000000?ooo`3oool00`3oool00`3o0000oooo0?oo
o`050?ooo`030000o`3oool0oooo0?l0oooo?`3oool00`3o0000oooo0?ooo`0O0?ooo`007`3oool0
0`000000oooo0?ooo`040?ooo`030?l0003oool0oooo00D0oooo00<0003o0?ooo`3oool0o`3ooolm
0?ooo`030?l0003oool0oooo0200oooo000O0?ooo`030000003oool0oooo00D0oooo00<0o`000?oo
o`3oool0103oool00`000?l0oooo0?ooo`3o0?ooocd0oooo00<0o`000?ooo`3oool0103oool00`00
0?l0oooo0?ooo`0I0?ooo`007`3oool00`000000oooo0?ooo`060?ooo`030?l0003oool0oooo00@0
oooo00<0003o0?ooo`3oool0o`3ooolk0?ooo`030?l0003oool0oooo00@0oooo00<0003o0?ooo`3o
ool06P3oool001l0oooo00<000000?ooo`3oool01`3oool00`3o0000oooo0?ooo`040?ooo`030000
o`3oool0oooo0?l0oooo>@3oool00`3o0000oooo0?ooo`050?ooo`030000o`3oool0oooo01X0oooo
000O0?ooo`030000003oool0oooo00L0oooo00<0o`000?ooo`3oool0103oool00`000?l0oooo0?oo
o`3o0?ooocP0oooo00<0o`000?ooo`3oool01@3oool00`000?l0oooo0?ooo`0K0?ooo`007`3oool0
0`000000oooo0?ooo`080?ooo`030?l0003oool0oooo00@0oooo00<0003o0?ooo`3oool0o`3ooolf
0?ooo`030?l0003oool0oooo00D0oooo00<0003o0?ooo`3oool0703oool001l0oooo00<000000?oo
o`3oool02@3oool00`3o0000oooo0?ooo`040?ooo`030000o`3oool0oooo0?l0oooo=@3oool00`3o
0000oooo0?ooo`050?ooo`030000o`3oool0oooo01`0oooo000O0?ooo`030000003oool0oooo00X0
oooo00<0o`000?ooo`3oool00`3oool00`000?l0oooo0?ooo`3o0?oooc@0oooo00<0o`000?ooo`3o
ool01@3oool00`000?l0oooo0?ooo`0M0?ooo`007`3oool00`000000oooo0?ooo`0;0?ooo`030?l0
003oool0oooo00<0oooo00<0003o0?ooo`3oool0o`3ooolb0?ooo`030?l0003oool0oooo00D0oooo
00<0003o0?ooo`3oool07P3oool001l0oooo00<000000?ooo`3oool0303oool00`3o0000oooo0?oo
o`030?ooo`030000o`3oool0oooo0?l0oooo<03oool00`3o0000oooo0?ooo`060?ooo`030000o`3o
ool0oooo01h0oooo000O0?ooo`030000003oool0oooo00d0oooo00<0o`000?ooo`3oool00P3oool0
0`000?l0oooo0?ooo`3o0?ooobl0oooo00<0o`000?ooo`3oool01P3oool00`000?l0oooo0?ooo`0O
0?ooo`007`3oool00`000000oooo0?ooo`0=0?ooo`030?l0003oool0oooo00<0oooo00<0003o0?oo
o`3oool0o`3oool]0?ooo`030?l0003oool0oooo00H0oooo00<0003o0?ooo`3oool0803oool001l0
oooo00<000000?ooo`3oool03P3oool00`3o0000oooo0?ooo`030?ooo`030000o`3oool0oooo0?l0
oooo;03oool00`3o0000oooo0?ooo`050?ooo`030000o`3oool0oooo0240oooo000O0?ooo`030000
003oool0oooo00l0oooo00<0o`000?ooo`3oool00`3oool00`000?l0oooo0?ooo`3o0?ooobX0oooo
00<0o`000?ooo`3oool01P3oool00`000?l0oooo0?ooo`0Q0?ooo`007`3oool00`000000oooo0?oo
o`0@0?ooo`030?l0003oool0oooo0080oooo00<0003o0?ooo`3oool0o`3ooolY0?ooo`030?l0003o
ool0oooo00H0oooo00<0003o0?ooo`3oool08P3oool001l0oooo00<000000?ooo`3oool04@3oool0
0`3o0000oooo0?ooo`020?ooo`030000o`3oool0oooo0?l0oooo9`3oool00`3o0000oooo0?ooo`06
0?ooo`030000o`3oool0oooo02<0oooo000O0?ooo`030000003oool0oooo0180oooo00<0o`000?oo
o`3oool00P3oool00`000?l0oooo0?ooo`3o0?ooobD0oooo00<0o`000?ooo`3oool01`3oool00`00
0?l0oooo0?ooo`0S0?ooo`007`3oool00`000000oooo0?ooo`0B0?ooo`030?l0003oool0oooo0080
oooo00<0003o0?ooo`3oool0o`3ooolT0?ooo`030?l0003oool0oooo00L0oooo00<0003o0?ooo`3o
ool0903oool001l0oooo00<000000?ooo`3oool04`3oool00`3o0000oooo0?ooo`020?ooo`030000
o`3oool0oooo0?l0oooo8`3oool00`3o0000oooo0?ooo`060?ooo`030000o`3oool0oooo02D0oooo
000O0?ooo`030000003oool0oooo01@0oooo00<0o`000?ooo`3oool00P3oool00`000?l0oooo0?oo
o`3o0?ooob40oooo00<0o`000?ooo`3oool01`3oool00`000?l0oooo0?ooo`0U0?ooo`007`3oool0
0`000000oooo0?ooo`0E0?ooo`050?l0003oool0oooo0?ooo`000?l0o`3ooolR0?ooo`030?l0003o
ool0oooo00L0oooo00<0003o0?ooo`3oool09P3oool001l0oooo00<000000?ooo`3oool05P3oool0
1@3o0000oooo0?ooo`3oool0003o0?l0oooo803oool00`3o0000oooo0?ooo`070?ooo`030000o`3o
ool0oooo02L0oooo000O0?ooo`030000003oool0oooo01L0oooo00D0o`000?ooo`3oool0oooo0000
o`3o0?oooah0oooo00<0o`000?ooo`3oool0203oool00`000?l0oooo0?ooo`0W0?ooo`007`3oool0
0`000000oooo0?ooo`0G0?ooo`030?l0003oool0oooo0080oooo00<0003o0?ooo`3oool0o`3ooolJ
0?ooo`030?l0003oool0oooo00P0oooo00<0003o0?ooo`3oool0:03oool001l0oooo00<000000?oo
o`3oool0603oool01@3o0000oooo0?ooo`3oool0003o0?l0oooo703oool00`3o0000oooo0?ooo`07
0?ooo`030000o`3oool0oooo02T0oooo000O0?ooo`030000003oool0oooo01T0oooo00D0o`000?oo
o`3oool0oooo0000o`3o0?oooaX0oooo00<0o`000?ooo`3oool01`3oool00`000?l0oooo0?ooo`0Z
0?ooo`007`3oool00`000000oooo0?ooo`0J0?ooo`050?l0003oool0oooo0?ooo`000?l0o`3ooolH
0?ooo`030?l0003oool0oooo00P0oooo00<0003o0?ooo`3oool0:P3oool001l0oooo00<000000?oo
o`3oool06`3oool01@3o0000oooo0?ooo`3oool0003o0?l0oooo5P3oool00`3o0000oooo0?ooo`08
0?ooo`030000o`3oool0oooo02/0oooo000O0?ooo`030000003oool0oooo01`0oooo00@0o`000?oo
o`3oool0003oo`3ooolE0?ooo`030?l0003oool0oooo00P0oooo00<0003o0?ooo`3oool0;03oool0
01l0oooo00<000000?ooo`3oool07@3oool0103o0000oooo0?ooo`000?oo0?oooa<0oooo00<0o`00
0?ooo`3oool0203oool00`000?l0oooo0?ooo`0]0?ooo`007`3oool00`000000oooo0?ooo`0M0?oo
o`050?l0003oool0oooo0?ooo`000?l0o`3ooolA0?ooo`030?l0003oool0oooo00T0oooo00<0003o
0?ooo`3oool0;@3oool001l0oooo00<000000?ooo`3oool07P3oool01@3o0000oooo0?ooo`3oool0
003o0?l0oooo3`3oool00`3o0000oooo0?ooo`090?ooo`030000o`3oool0oooo02h0oooo000O0?oo
o`030000003oool0oooo01l0oooo00D0o`000?ooo`3oool0oooo0000o`3o0?ooo`d0oooo00<0o`00
0?ooo`3oool02@3oool00`000?l0oooo0?ooo`0_0?ooo`007`3oool00`000000oooo0?ooo`0P0?oo
o`040?l0003oool0oooo0000ool0oooo303oool00`3o0000oooo0?ooo`090?ooo`030000o`3oool0
oooo0300oooo000O0?ooo`030000003oool0oooo0240oooo00@0o`000?ooo`3oool0003oo`3oool;
0?ooo`030?l0003oool0oooo00T0oooo00<0003o0?ooo`3oool0<03oool001l0oooo00<000000?oo
o`3oool08P3oool0103o0000oooo0?ooo`000?oo0?ooo`T0oooo00<0o`000?ooo`3oool02@3oool0
0`000?l0oooo0?ooo`0a0?ooo`007`3oool00`000000oooo0?ooo`0S0?ooo`040?l0003oool0oooo
0000ool0oooo1`3oool00`3o0000oooo0?ooo`090?ooo`030000o`3oool0oooo0380oooo000O0?oo
o`030000003oool0oooo02@0oooo00<0o`000?ooo`000?l0o`3oool60?ooo`030?l0003oool0oooo
00T0oooo00<0003o0?ooo`3oool0<`3oool001l0oooo00<000000?ooo`3oool0903oool0103o0000
oooo0?ooo`000?oo0?ooo`@0oooo00<0o`000?ooo`3oool02P3oool00`000?l0oooo0?ooo`0c0?oo
o`007`3oool00`000000oooo0?ooo`0U0?ooo`040?l0003oool0oooo0000ool0oooo0P3oool00`3o
0000oooo0?ooo`0:0?ooo`030000o`3oool0oooo03@0oooo000O0?ooo`030000003oool0oooo02H0
oooo00@0o`000?ooo`3oool0003oo`3oool00`3o0000oooo0?ooo`0:0?ooo`030000o`3oool0oooo
03D0oooo000O0?ooo`030000003oool0oooo02L0oooo00@0o`000?ooo`3oool0003oo@3oool00`3o
0000oooo0?ooo`0:0?ooo`030000o`3oool0oooo03H0oooo000O0?ooo`030000003oool0oooo02P0
oooo00@0o`000?ooo`3oool0003on`3oool00`3o0000oooo0?ooo`0:0?ooo`030000o`3oool0oooo
03L0oooo000O0?ooo`030000003oool0oooo02T0oooo00<0o`000?ooo`000?l0nP3oool00`3o0000
oooo0?ooo`0:0?ooo`030000o`3oool0oooo03P0oooo000O0?ooo`030000003oool0oooo02X0oooo
00<0o`000?ooo`000?l0n03oool00`3o0000oooo0?ooo`0;0?ooo`030000o`3oool0oooo03P0oooo
000O0?ooo`030000003oool0oooo02/0oooo00<0o`000?ooo`000?l0mP3oool00`3o0000oooo0?oo
o`0;0?ooo`030000o`3oool0oooo03T0oooo000O0?ooo`030000003oool0oooo02`0oooo00<0o`00
0?ooo`000?l0m03oool00`3o0000oooo0?ooo`0;0?ooo`030000o`3oool0oooo03X0oooo000O0?oo
o`030000003oool0oooo02d0oooo00<0o`000?ooo`000?l0lP3oool00`3o0000oooo0?ooo`0;0?oo
o`030000o`3oool0oooo03/0oooo000O0?ooo`030000003oool0oooo02h0oooo00<0o`000?ooo`00
0?l0l03oool00`3o0000oooo0?ooo`0;0?ooo`030000o`3oool0oooo03`0oooo000O0?ooo`030000
003oool0oooo02l0oooo00<0o`000?ooo`000?l0k`3oool00`3o0000oooo0?ooo`0:0?ooo`030000
o`3oool0oooo03d0oooo000O0?ooo`030000003oool0oooo02l0oooo00@0o`000?ooo`3oool0003o
k@3oool00`3o0000oooo0?ooo`0:0?ooo`030000o`3oool0oooo03h0oooo000O0?ooo`030000003o
ool0oooo0300oooo00<0o`000?ooo`000?l0k03oool00`3o0000oooo0?ooo`0:0?ooo`030000o`3o
ool0oooo03l0oooo000O0?ooo`030000003oool0oooo0340oooo00<0o`000?ooo`000?l0jP3oool0
0`3o0000oooo0?ooo`0;0?ooo`030000o`3oool0oooo03l0oooo000O0?ooo`030000003oool0oooo
0380oooo00<0o`000?ooo`000?l0j03oool00`3o0000oooo0?ooo`0;0?ooo`030000o`3oool0oooo
0400oooo000O0?ooo`030000003oool0oooo03<0oooo00<0o`000?ooo`000?l0iP3oool00`3o0000
oooo0?ooo`0;0?ooo`030000o`3oool0oooo0440oooo000O0?ooo`030000003oool0oooo03@0oooo
00<0o`000?ooo`000?l0i03oool00`3o0000oooo0?ooo`0;0?ooo`030000o`3oool0oooo0480oooo
000O0?ooo`030000003oool0oooo03D0oooo00<0o`000?ooo`000?l0hP3oool00`3o0000oooo0?oo
o`0;0?ooo`030000o`3oool0oooo04<0oooo000O0?ooo`030000003oool0oooo03H0oooo00<0o`00
0?ooo`000?l0h03oool00`3o0000oooo0?ooo`0;0?ooo`030000o`3oool0oooo04@0oooo000O0?oo
o`030000003oool0oooo03L0oooo00<0o`000?ooo`000?l0gP3oool00`3o0000oooo0?ooo`0;0?oo
o`030000o`3oool0oooo04D0oooo000O0?ooo`030000003oool0oooo03P0oooo00<0o`000000o`3o
ool0g03oool00`3o0000oooo0?ooo`0;0?ooo`030000o`3oool0oooo04H0oooo000O0?ooo`030000
003oool0oooo03T0oooo00<0o`000000o`3oool0fP3oool00`3o0000oooo0?ooo`0;0?ooo`030000
o`3oool0oooo04L0oooo000O0?ooo`030000003oool0oooo03X0oooo00<0o`000000o`3oool0f03o
ool00`3o0000oooo0?ooo`0;0?ooo`030000o`3oool0oooo04P0oooo000O0?ooo`030000003oool0
oooo03/0oooo00<0o`000000o`3oool0eP3oool00`3o0000oooo0?ooo`0;0?ooo`030000o`3oool0
oooo04T0oooo000O0?ooo`030000003oool0oooo03`0oooo00<0o`000000o`3oool0e03oool00`3o
0000oooo0?ooo`0;0?ooo`030000o`3oool0oooo04X0oooo000O0?ooo`030000003oool0oooo03d0
oooo00<0o`000000o`3oool0dP3oool00`3o0000oooo0?ooo`0<0?ooo`030000o`3oool0oooo04X0
oooo000O0?ooo`030000003oool0oooo03h0oooo00<0o`000000o`3oool0d03oool00`3o0000oooo
0?ooo`0<0?ooo`030000o`3oool0oooo04/0oooo000O0?ooo`030000003oool0oooo03l0oooo00<0
o`000000o`3oool0cP3oool00`3o0000oooo0?ooo`0<0?ooo`030000o`3oool0oooo04`0oooo000O
0?ooo`030000003oool0oooo0400oooo00<0003o0?ooo`3oool0c03oool00`3o0000oooo0?ooo`0<
0?ooo`030000o`3oool0oooo04d0oooo000O0?ooo`030000003oool0oooo0440oooo00<0003o0?oo
o`3oool0bP3oool00`3o0000oooo0?ooo`0<0?ooo`030000o`3oool0oooo04h0oooo000O0?ooo`03
0000003oool0oooo0480oooo00<0003o0?ooo`3oool0b03oool00`3o0000oooo0?ooo`0<0?ooo`03
0000o`3oool0oooo04l0oooo000O0?ooo`030000003oool0oooo04<0oooo00<0003o0?ooo`3oool0
aP3oool00`3o0000oooo0?ooo`0<0?ooo`030000o`3oool0oooo0500oooo000O0?ooo`030000003o
ool0oooo04@0oooo00<0003o0?ooo`3oool0a03oool00`3o0000oooo0?ooo`0<0?ooo`030000o`3o
ool0oooo0540oooo000O0?ooo`030000003oool0oooo04D0oooo00<0003o0?ooo`3oool0`P3oool0
0`3o0000oooo0?ooo`0<0?ooo`030000o`3oool0oooo0580oooo000O0?ooo`030000003oool0oooo
04H0oooo00<0003o0?ooo`3oool0`03oool00`3o0000oooo0?ooo`0<0?ooo`030000o`3oool0oooo
05<0oooo000O0?ooo`030000003oool0oooo04L0oooo00<0003o0?ooo`3oool0_P3oool00`3o0000
oooo0?ooo`0<0?ooo`030000o`3oool0oooo05@0oooo000O0?ooo`030000003oool0oooo04P0oooo
00<0003o0?ooo`3oool0_03oool00`3o0000oooo0?ooo`0<0?ooo`030000o`3oool0oooo05D0oooo
000O0?ooo`030000003oool0oooo04T0oooo00<0003o0?ooo`3oool0^P3oool00`3o0000oooo0?oo
o`0<0?ooo`030000o`3oool0oooo05H0oooo000O0?ooo`030000003oool0oooo04X0oooo00<0003o
0?ooo`3oool0^03oool00`3o0000oooo0?ooo`0<0?ooo`030000o`3oool0oooo05L0oooo000O0?oo
o`030000003oool0oooo04/0oooo0P000?nf0?ooo`80o`003P3oool00`000?l0oooo0?ooo`1H0?oo
o`007`3oool00`000000oooo0?ooo`1=0?ooo`030000o`3oool0oooo0;80oooo00<0o`000?ooo`3o
ool03@3oool00`000?l0oooo0?ooo`1I0?ooo`007`3oool00`000000oooo0?ooo`1>0?ooo`030000
o`3oool0oooo0;00oooo00<0o`000?ooo`3oool03@3oool00`000?l0oooo0?ooo`1J0?ooo`007`3o
ool00`000000oooo0?ooo`1?0?ooo`030000o`3oool0oooo0:h0oooo00<0o`000?ooo`3oool03@3o
ool00`000?l0oooo0?ooo`1K0?ooo`007`3oool00`000000oooo0?ooo`1@0?ooo`030000o`3oool0
oooo0:`0oooo00<0o`000?ooo`3oool03@3oool00`000?l0oooo0?ooo`1L0?ooo`007`3oool00`00
0000oooo0?ooo`1A0?ooo`030000o`3oool0oooo0:X0oooo00<0o`000?ooo`3oool03@3oool00`00
0?l0oooo0?ooo`1M0?ooo`007`3oool00`000000oooo0?ooo`1B0?ooo`030000o`3oool0oooo0:P0
oooo00<0o`000?ooo`3oool03@3oool00`000?l0oooo0?ooo`1N0?ooo`007`3oool00`000000oooo
0?ooo`1C0?ooo`030000o`3oool0oooo0:H0oooo00<0o`000?ooo`3oool03@3oool00`000?l0oooo
0?ooo`1O0?ooo`007`3oool00`000000oooo0?ooo`1D0?ooo`80003oY03oool20?l000h0oooo0P00
0?mR0?ooo`007`3oool00`000000oooo0?ooo`1F0?ooo`030000o`3oool0oooo0:00oooo00<0o`00
0?ooo`3oool03@3oool00`000?l0oooo0?ooo`1R0?ooo`007`3oool00`000000oooo0?ooo`1G0?oo
o`030000o`3oool0oooo09h0oooo00<0o`000?ooo`3oool03@3oool00`000?l0oooo0?ooo`1S0?oo
o`007`3oool00`000000oooo0?ooo`1H0?ooo`030000o`3oool0oooo09`0oooo00<0o`000?ooo`3o
ool0303oool20000ofH0oooo000O0?ooo`030000003oool0oooo05T0oooo0P000?nJ0?ooo`80o`00
3P3oool00`000?l0oooo0?ooo`1V0?ooo`007`3oool00`000000oooo0?ooo`1K0?ooo`030000o`3o
ool0oooo09H0oooo00<0o`000?ooo`3oool0303oool20000ofT0oooo000O0?ooo`030000003oool0
oooo05`0oooo00@0003o0?ooo`3o0?l0o`3oT`3oool00`3o0000oooo0?ooo`0<0?ooo`030000o`3o
ool0oooo06T0oooo000O0?ooo`030000003oool0oooo05d0oooo103o0?n@0?ooo`80o`003P3oool0
0`000?l0oooo0?ooo`1Z0?ooo`007`3oool00`000000oooo0?ooo`1M0?ooo`@0o`3oS`3oool00`3o
0000oooo0?ooo`0<0?ooo`80003oK@3oool001l0oooo00<000000?ooo`3oool0GP3oool20?l0o`03
0000o`3oool0oooo08`0oooo00<0o`000?ooo`3oool0303oool00`000?l0oooo0?ooo`1]0?ooo`00
7`3oool00`000000oooo0?ooo`1Q0?ooo`030000o`3oool0oooo08T0oooo0P3o000=0?ooo`80003o
L03oool001l0oooo00<000000?ooo`3oool0HP3oool20000ohP0oooo00<0o`000?ooo`3oool0303o
ool00`000?l0oooo0?ooo`1`0?ooo`007`3oool00`000000oooo0?ooo`1T0?ooo`030000o`3oool0
oooo08<0oooo0P3o000>0?ooo`030000o`3oool0oooo0740oooo000O0?ooo`030000003oool0oooo
06D0oooo0P000?n20?ooo`030?l0003oool0oooo00`0oooo0P000?md0?ooo`007`3oool00`000000
oooo0?ooo`1W0?ooo`040000o`3oool0o`3o0?l0og`0oooo0P3o000>0?ooo`030000o`3oool0oooo
07@0oooo000O0?ooo`030000003oool0oooo06P0oooo103o0?mi0?ooo`80o`003P3oool20000ogL0
oooo000O0?ooo`030000003oool0oooo06P0oooo103o0?mh0?ooo`030?l0003oool0oooo00d0oooo
00<0003o0?ooo`3oool0M`3oool001l0oooo00<000000?ooo`3oool0J@3oool20?l0o`030?ooo`00
0?l0oooo07@0oooo0P3o000?0?ooo`030000o`3oool0oooo07P0oooo000O0?ooo`030000003oool0
oooo06d0oooo0P000?mb0?ooo`030?l0003oool0oooo00d0oooo0P000?mk0?ooo`007`3oool00`00
0000oooo0?ooo`1_0?ooo`030000o`3oool0oooo06d0oooo0P3o000?0?ooo`030000o`3oool0oooo
07/0oooo000O0?ooo`030000003oool0oooo0700oooo0P000?l20?ooo`80o`3oI`3oool20?l000l0
oooo0P000?mn0?ooo`007`3oool00`000000oooo0?ooo`1b0?ooo`030000o`3o0?l0o`3o0080o`3o
I03oool20?l000l0oooo0P000?n00?ooo`007`3oool00`000000oooo0?ooo`1c0?ooo`@0o`3oH`3o
ool00`3o0000oooo0?ooo`0=0?ooo`80003oPP3oool001l0oooo00<000000?ooo`3oool0M03oool2
0?l0o`80003oH03oool20?l000h0oooo0P000?n40?ooo`007`3oool00`000000oooo0?ooo`1h0?oo
o`80003oG03oool20?l000h0oooo0P000?n60?ooo`007`3oool00`000000oooo0?ooo`1j0?ooo`80
003oF03oool20?l000h0oooo0P000?n80?ooo`007`3oool00`000000oooo0?ooo`1l0?ooo`<0003o
D`3oool20?l000h0oooo0P000?n:0?ooo`007`3oool00`000000oooo0?ooo`1o0?ooo`80003oCP3o
ool30?l000h0oooo0P000?n<0?ooo`007`3oool00`000000oooo0?ooo`210?ooo`80003oB@3oool3
0?l000h0oooo0`000?n>0?ooo`007`3oool00`000000oooo0?ooo`230?ooo`<0003o@`3oool30?l0
00l0oooo0P000?nA0?ooo`007`3oool00`000000oooo0?ooo`260?ooo`80003o?P3oool30?l000l0
oooo0`000?nC0?ooo`007`3oool00`000000oooo0?ooo`280?ooo`<0003o>03oool30?l000l0oooo
0`000?nF0?ooo`007`3oool00`000000oooo0?ooo`2;0?ooo`<0003o<@3oool40?l000l0oooo0`00
0?nI0?ooo`007`3oool00`000000oooo0?ooo`2>0?ooo`@0003o:P3oool30?l000l0oooo10000?nL
0?ooo`005P3oool5000000@0oooo00<000000?ooo`3oool0TP3oool30000o`<0o`00803oool40?l0
00l0oooo0`000?nP0?ooo`00603oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo09D0
oooo10000?l60?l00180oooo1`3o000?0?ooo`@0003oX`3oool001P0oooo00<000000?ooo`3oool0
103oool3000009T0oooo1P000?lB0?l00100oooo1P000?nW0?ooo`00603oool00`000000oooo0?oo
o`040?ooo`030000003oool0oooo09l0oooo1`000?lD0?ooo`L0003o[@3oool001P0oooo00<00000
0?ooo`3oool0103oool00`000000oooo0?ooo`2V0?oooa@0003o]03oool001L0oooo0P0000060?oo
o`030000003oool0oooo0?l0ooooK`3oool001l0oooo00<000000?ooo`3oool0o`3ooom_0?ooo`00
7`3oool00`000000oooo0?ooo`3o0?ooofl0oooo000O0?ooo`030000003oool0oooo0?l0ooooK`3o
ool00001\
\>"],
    ImageRangeCache->{{{0, 399}, {159, 0}} -> {0, 0, 0, 0}}],
  "  \n\t\t",
  StyleBox["Figure 1.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  " The secant parabola approximating  ",
  Cell[BoxData[
      \(y = sin \((x)\)\)]],
  ",  at  ",
  Cell[BoxData[
      \(x\_0 = 1\)]],
  "  using  ",
  Cell[BoxData[
      \(h\  = 0.1\)]]
}], "Text",
  AspectRatioFixed->False,
  ImageRegion->{{0, 1}, {0, 1}}],

Cell[TextData[{
  "When the interpolation points are moved closer to the middle point  ",
  Cell[BoxData[
      \(x\_0\)]],
  " the \"the secant parabola\" approaches a limiting position. "
}], "Text",
  AspectRatioFixed->False,
  ImageRegion->{{0, 1}, {0, 1}}],

Cell[TextData[{
  "\t\t",
  Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .4 
%%ImageSize: 400 160 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-1.14383e-017 0.31831 1.37423e-017 0.380952 [
[.31831 -0.0125 -3 -9 ]
[.31831 -0.0125 3 0 ]
[.5 -0.0125 -8.09375 -18.1875 ]
[.5 -0.0125 8.09375 0 ]
[1 -0.0125 -5 -12.5625 ]
[1 -0.0125 5 0 ]
[-0.0125 .38095 -6 -4.5 ]
[-0.0125 .38095 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .4 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.31513 0 m
.31513 .00625 L
s
.31831 0 m
.31831 .00625 L
s
[(1)] .31831 -0.0125 0 1 Mshowa
.32149 0 m
.32149 .00625 L
s
.5 0 m
.5 .00625 L
s
gsave
.5 -0.0125 -69.0938 -22.1875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 26.1875 translate 1 -1 scale
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding WindowsANSIEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
66.063 9.313 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(p) show
64.750 15.125 moveto
(\\200\\200) show
69.000 15.125 moveto
(\\200) show
71.063 15.125 moveto
(\\200) show
66.063 21.188 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
1 0 m
1 .00625 L
s
gsave
1 -0.0125 -66 -16.5625 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20.5625 translate 1 -1 scale
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding WindowsANSIEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 12.813 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(p) show
1.000 setlinewidth
grestore
0 0 m
1 0 L
s
0 .38095 m
.00625 .38095 L
s
[(1)] -0.0125 .38095 1 0 Mshowa
0 0 m
0 .4 L
s
0 0 m
1 0 L
1 .4 L
0 .4 L
closepath
clip
newpath
1 0 0 r
.5 Mabswid
0 0 m
.04057 .04842 L
.08481 .1003 L
.12636 .14729 L
.16632 .19012 L
.20885 .2324 L
.2498 .2692 L
.29331 .30343 L
.33524 .33105 L
.37557 .35222 L
.39599 .3608 L
.41848 .36853 L
.43982 .37416 L
.44937 .37614 L
.4598 .37792 L
.46545 .37871 L
.4707 .37934 L
.47614 .37988 L
.48106 .38028 L
.48591 .38058 L
.48813 .38069 L
.49048 .38078 L
.49299 .38086 L
.4941 .38089 L
.4953 .38091 L
.49658 .38093 L
.49778 .38094 L
.49852 .38095 L
.49921 .38095 L
.50051 .38095 L
.50171 .38095 L
.503 .38094 L
.50421 .38092 L
.50533 .3809 L
.50792 .38083 L
.51065 .38074 L
.51331 .38062 L
.51579 .38048 L
.52142 .38009 L
.53077 .37917 L
.54076 .37783 L
.55151 .37597 L
.56317 .37347 L
.58433 .36766 L
.6273 .35089 L
.66867 .32871 L
.70845 .30214 L
.75081 .26869 L
.79157 .232 L
.83491 .18884 L
Mistroke
.87666 .14394 L
.91682 .09842 L
.95955 .04828 L
1 0 L
Mfstroke
0 0 1 r
.02865 0 m
.04057 .01894 L
.08481 .08332 L
.12636 .13816 L
.16632 .18574 L
.20885 .23083 L
.2498 .26883 L
.29331 .30341 L
.33524 .33105 L
.37557 .3524 L
.39599 .36125 L
.41848 .36946 L
.44006 .37584 L
.4598 .38038 L
.46955 .38217 L
.48018 .38378 L
.48601 .38451 L
.49142 .38509 L
.49698 .38559 L
.5021 .38597 L
.50743 .38627 L
.51024 .38639 L
.5132 .3865 L
.51444 .38653 L
.51578 .38656 L
.51693 .38659 L
.51818 .38661 L
.51895 .38662 L
.51965 .38662 L
.52033 .38663 L
.52104 .38664 L
.52228 .38664 L
.52365 .38664 L
.52489 .38663 L
.52618 .38662 L
.52729 .38661 L
.5285 .38659 L
.53121 .38652 L
.53373 .38645 L
.5383 .38625 L
.54319 .38597 L
.54879 .38556 L
.55395 .38509 L
.5656 .38373 L
.57588 .38216 L
.58676 .38015 L
.60732 .37531 L
.62654 .36958 L
.66731 .35356 L
.71065 .33075 L
Mistroke
.7524 .30317 L
.79256 .27144 L
.83529 .23206 L
.87643 .1887 L
.92015 .13675 L
.96227 .08097 L
1 .02625 L
Mfstroke
1 0 1 r
.012 w
.31513 .31849 Mdot
.31831 .32056 Mdot
.32149 .3226 Mdot
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
    ImageSize->{400, 160},
    ImageMargins->{{0, 0}, {0, 0}},
    ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006@0000X2000`400?l00000o`00003oo`3ooonA
0?ooo`00o`3ooonA0?ooo`00b03oool400000<@0oooo00380?ooo`030000003oool0oooo0<D0oooo
00390?ooo`030000003oool0oooo0<@0oooo003:0?ooo`030000003oool0oooo0<<0oooo00380?oo
o`040000003oool0oooo00000<@0oooo00390?ooo`800000a@3oool00?l0ooooT@3oool00?l0oooo
T@3oool00<D0oooo100000000`3oool000000000000200000<80oooo002:0?ooo`D00000hP3oool0
0`000000oooo0?ooo`020?ooo`030000003oool0oooo01L0oooo002<0?ooo`030000003oool0oooo
0><0oooo00@000000?ooo`3oool000006P3oool008`0oooo00<000000?ooo`3oool0i03oool00`00
0000oooo0000000J0?ooo`00S03oool00`000000oooo0?ooo`0h0?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool0Y03oool00`000000oooo0000000J0?ooo`00S03oool00`000000oooo
0?ooo`0i0?ooo`040000003oool0oooo00000:H0oooo1@00000I0?ooo`00R`3oool2000003`0oooo
00<000000?ooo`000000a03oool00<T0oooo00<000000?ooo`000000a03oool00<P0oooo1@000033
0?ooo`00o`3ooonA0?ooo`00o`3ooonA0?ooo`00o`3ooonA0?ooo`00o`3ooonA0?ooo`007`3oool0
0`3o0000000000000007000000030000o`00000000000?l00000B@0000000`3o0000oooo0?ooo`0I
0?ooo`007`3oool00`000000o`000?ooo`080?ooo`030000o`3oool0oooo05h0oooo0`00000l0?oo
o`030000003oool0oooo0:H0oooo00<0o`000000003oool06P3oool001l0oooo00<000000?ooo`3o
0000203oool00`000?l0oooo0?ooo`1N0?ooo`<00000?03oool00`000000oooo0?ooo`2U0?ooo`03
0?l0003oool0000001/0oooo000O0?ooo`040000003oool0oooo0?l000P0oooo00<0003o0?ooo`3o
ool0o`3ooom50?ooo`030?l0003oool0oooo01/0oooo000O0?ooo`040000003oool0oooo0?l000T0
oooo00<0003o0?ooo`3oool0o`3ooom30?ooo`030?l0003oool0oooo01`0oooo000O0?ooo`050000
003oool0oooo0?ooo`3o0000203oool00`000?l0oooo0?ooo`3o0?oood80oooo00<0o`000?ooo`3o
ool07@3oool001l0oooo00<000000?ooo`3oool00P3oool00`3o0000oooo0?ooo`060?ooo`030000
o`3oool0oooo0?l0oooo@03oool00`3o0000oooo0?ooo`0N0?ooo`007`3oool00`000000oooo0?oo
o`030?ooo`030?l0003oool0oooo00H0oooo00<0003o0?ooo`3oool0o`3oooln0?ooo`030?l0003o
ool0oooo01l0oooo000O0?ooo`030000003oool0oooo00@0oooo00<0o`000?ooo`3oool01@3oool0
0`000?l0oooo0?ooo`3o0?ooocd0oooo00<0o`000?ooo`3oool0803oool001l0oooo00<000000?oo
o`3oool01@3oool00`3o0000oooo0?ooo`050?ooo`030000o`3oool0oooo0?l0oooo?03oool00`3o
0000oooo0?ooo`040?ooo`030000o`3oool0oooo01T0oooo000O0?ooo`030000003oool0oooo00H0
oooo00<0o`000?ooo`3oool01@3oool00`000?l0oooo0?ooo`3o0?ooocX0oooo00<0o`000?ooo`3o
ool0103oool00`000?l0oooo0?ooo`0J0?ooo`007`3oool00`000000oooo0?ooo`070?ooo`030?l0
003oool0oooo00@0oooo00<0003o0?ooo`3oool0o`3oooli0?ooo`030?l0003oool0oooo00D0oooo
00<0003o0?ooo`3oool06P3oool001l0oooo00<000000?ooo`3oool01`3oool00`3o0000oooo0?oo
o`050?ooo`030000o`3oool0oooo0?l0oooo=`3oool00`3o0000oooo0?ooo`050?ooo`030000o`3o
ool0oooo01/0oooo000O0?ooo`030000003oool0oooo00P0oooo00<0o`000?ooo`3oool01@3oool0
0`000?l0oooo0?ooo`3o0?ooocD0oooo00<0o`000?ooo`3oool01@3oool00`000?l0oooo0?ooo`0L
0?ooo`007`3oool00`000000oooo0?ooo`090?ooo`030?l0003oool0oooo00@0oooo00<0003o0?oo
o`3oool0o`3ooole0?ooo`030?l0003oool0oooo00D0oooo00<0003o0?ooo`3oool0703oool001l0
oooo00<000000?ooo`3oool02P3oool00`3o0000oooo0?ooo`040?ooo`030000o`3oool0oooo0?l0
oooo<`3oool00`3o0000oooo0?ooo`050?ooo`030000o`3oool0oooo01d0oooo000O0?ooo`030000
003oool0oooo00/0oooo00<0o`000?ooo`3oool0103oool00`000?l0oooo0?ooo`3o0?oooc40oooo
00<0o`000?ooo`3oool01@3oool00`000?l0oooo0?ooo`0N0?ooo`007`3oool00`000000oooo0?oo
o`0<0?ooo`030?l0003oool0oooo00<0oooo00<0003o0?ooo`3oool0o`3oool`0?ooo`030?l0003o
ool0oooo00H0oooo00<0003o0?ooo`3oool07P3oool001l0oooo00<000000?ooo`3oool03@3oool0
0`3o0000oooo0?ooo`030?ooo`030000o`3oool0oooo0?l0oooo;P3oool00`3o0000oooo0?ooo`06
0?ooo`030000o`3oool0oooo01l0oooo000O0?ooo`030000003oool0oooo00d0oooo00<0o`000?oo
o`3oool0103oool00`000?l0oooo0?ooo`3o0?ooob`0oooo00<0o`000?ooo`3oool01P3oool00`00
0?l0oooo0?ooo`0P0?ooo`007`3oool00`000000oooo0?ooo`0>0?ooo`030?l0003oool0oooo00@0
oooo00<0003o0?ooo`3oool0o`3oool[0?ooo`030?l0003oool0oooo00D0oooo00<0003o0?ooo`3o
ool08@3oool001l0oooo00<000000?ooo`3oool03`3oool00`3o0000oooo0?ooo`030?ooo`030000
o`3oool0oooo0?l0oooo:P3oool00`3o0000oooo0?ooo`060?ooo`030000o`3oool0oooo0240oooo
000O0?ooo`030000003oool0oooo0100oooo00<0o`000?ooo`3oool00`3oool00`000?l0oooo0?oo
o`3o0?ooobP0oooo00<0o`000?ooo`3oool01P3oool00`000?l0oooo0?ooo`0R0?ooo`007`3oool0
0`000000oooo0?ooo`0A0?ooo`030?l0003oool0oooo00<0oooo00<0003o0?ooo`3oool0o`3ooolV
0?ooo`030?l0003oool0oooo00H0oooo00<0003o0?ooo`3oool08`3oool001l0oooo00<000000?oo
o`3oool04P3oool00`3o0000oooo0?ooo`020?ooo`030000o`3oool0oooo0?l0oooo9@3oool00`3o
0000oooo0?ooo`070?ooo`030000o`3oool0oooo02<0oooo000O0?ooo`030000003oool0oooo0180
oooo00<0o`000?ooo`3oool00`3oool00`000?l0oooo0?ooo`3o0?ooob<0oooo00<0o`000?ooo`3o
ool01`3oool00`000?l0oooo0?ooo`0T0?ooo`007`3oool00`000000oooo0?ooo`0C0?ooo`030?l0
003oool0oooo00<0oooo00<0003o0?ooo`3oool0o`3ooolR0?ooo`030?l0003oool0oooo00H0oooo
00<0003o0?ooo`3oool09@3oool001l0oooo00<000000?ooo`3oool0503oool00`3o0000oooo0?oo
o`020?ooo`030000o`3oool0oooo0?l0oooo8@3oool00`3o0000oooo0?ooo`070?ooo`030000o`3o
ool0oooo02D0oooo000O0?ooo`030000003oool0oooo01D0oooo00<0o`000?ooo`3oool00P3oool0
0`000?l0oooo0?ooo`3o0?oooal0oooo00<0o`000?ooo`3oool01`3oool00`000?l0oooo0?ooo`0V
0?ooo`007`3oool00`000000oooo0?ooo`0F0?ooo`030?l0003oool0oooo0080oooo00<0003o0?oo
o`3oool0o`3ooolM0?ooo`030?l0003oool0oooo00L0oooo00<0003o0?ooo`3oool09`3oool001l0
oooo00<000000?ooo`3oool05`3oool01@3o0000oooo0?ooo`3oool0003o0?l0oooo7P3oool00`3o
0000oooo0?ooo`080?ooo`030000o`3oool0oooo02L0oooo000O0?ooo`030000003oool0oooo01L0
oooo00<0o`000?ooo`3oool00P3oool00`000?l0oooo0?ooo`3o0?oooaX0oooo00<0o`000?ooo`3o
ool0203oool00`000?l0oooo0?ooo`0X0?ooo`007`3oool00`000000oooo0?ooo`0H0?ooo`030?l0
003oool0oooo0080oooo00<0003o0?ooo`3oool0o`3ooolI0?ooo`030?l0003oool0oooo00L0oooo
00<0003o0?ooo`3oool0:@3oool001l0oooo00<000000?ooo`3oool06@3oool00`3o0000oooo0?oo
o`020?ooo`030000o`3oool0oooo0?l0oooo5`3oool00`3o0000oooo0?ooo`070?ooo`030000o`3o
ool0oooo02X0oooo000O0?ooo`030000003oool0oooo01X0oooo00D0o`000?ooo`3oool0oooo0000
o`3o0?oooaP0oooo00<0o`000?ooo`3oool0203oool00`000?l0oooo0?ooo`0Z0?ooo`007`3oool0
0`000000oooo0?ooo`0K0?ooo`050?l0003oool0oooo0?ooo`000?l0o`3ooolF0?ooo`030?l0003o
ool0oooo00P0oooo00<0003o0?ooo`3oool0:`3oool001l0oooo00<000000?ooo`3oool0703oool0
1@3o0000oooo0?ooo`3oool0003o0?l0oooo503oool00`3o0000oooo0?ooo`080?ooo`030000o`3o
ool0oooo02`0oooo000O0?ooo`030000003oool0oooo01d0oooo00D0o`000?ooo`3oool0oooo0000
o`3o0?oooa80oooo00<0o`000?ooo`3oool0203oool00`000?l0oooo0?ooo`0]0?ooo`007`3oool0
0`000000oooo0?ooo`0M0?ooo`050?l0003oool0oooo0?ooo`000?l0o`3ooolA0?ooo`030?l0003o
ool0oooo00T0oooo00<0003o0?ooo`3oool0;@3oool001l0oooo00<000000?ooo`3oool07P3oool0
1@3o0000oooo0?ooo`3oool0003o0?l0oooo3`3oool00`3o0000oooo0?ooo`090?ooo`030000o`3o
ool0oooo02h0oooo000O0?ooo`030000003oool0oooo01l0oooo00D0o`000?ooo`3oool0oooo0000
o`3o0?ooo`d0oooo00<0o`000?ooo`3oool02@3oool00`000?l0oooo0?ooo`0_0?ooo`007`3oool0
0`000000oooo0?ooo`0P0?ooo`050?l0003oool0oooo0?ooo`000?l0o`3oool;0?ooo`030?l0003o
ool0oooo00T0oooo00<0003o0?ooo`3oool0<03oool001l0oooo00<000000?ooo`3oool08@3oool0
103o0000oooo0?ooo`000?oo0?ooo`/0oooo00<0o`000?ooo`3oool02@3oool00`000?l0oooo0?oo
o`0`0?ooo`007`3oool00`000000oooo0?ooo`0R0?ooo`040?l0003oool0oooo0000ool0oooo2@3o
ool00`3o0000oooo0?ooo`090?ooo`030000o`3oool0oooo0340oooo000O0?ooo`030000003oool0
oooo02<0oooo00@0o`000?ooo`3oool0003oo`3oool70?ooo`030?l0003oool0oooo00T0oooo00<0
003o0?ooo`3oool0<P3oool001l0oooo00<000000?ooo`3oool0903oool0103o0000oooo0?ooo`00
0?oo0?ooo`D0oooo00<0o`000?ooo`3oool02@3oool00`000?l0oooo0?ooo`0c0?ooo`007`3oool0
0`000000oooo0?ooo`0T0?ooo`040?l0003oool0oooo0000ool0oooo103oool00`3o0000oooo0?oo
o`0:0?ooo`030000o`3oool0oooo03<0oooo000O0?ooo`030000003oool0oooo02D0oooo00@0o`00
0?ooo`3oool0003oo`3oool20?ooo`030?l0003oool0oooo00X0oooo00<0003o0?ooo`3oool0=03o
ool001l0oooo00<000000?ooo`3oool09P3oool0103o0000oooo0?ooo`000?oo0?ooo`030?l0003o
ool0oooo00X0oooo00<0003o0?ooo`3oool0=@3oool001l0oooo00<000000?ooo`3oool09`3oool0
103o0000oooo0?ooo`000?om0?ooo`030?l0003oool0oooo00X0oooo00<0003o0?ooo`3oool0=P3o
ool001l0oooo00<000000?ooo`3oool0:03oool0103o0000oooo0?ooo`000?ok0?ooo`030?l0003o
ool0oooo00X0oooo00<0003o0?ooo`3oool0=`3oool001l0oooo00<000000?ooo`3oool0:@3oool0
0`3o0000oooo0000o`3j0?ooo`030?l0003oool0oooo00X0oooo00<0003o0?ooo`3oool0>03oool0
01l0oooo00<000000?ooo`3oool0:P3oool00`3o0000oooo0000o`3h0?ooo`030?l0003oool0oooo
00/0oooo00<0003o0?ooo`3oool0>03oool001l0oooo00<000000?ooo`3oool0:`3oool00`3o0000
oooo0000o`3f0?ooo`030?l0003oool0oooo00/0oooo00<0003o0?ooo`3oool0>@3oool001l0oooo
00<000000?ooo`3oool0;03oool00`3o0000oooo0000o`3d0?ooo`030?l0003oool0oooo00/0oooo
00<0003o0?ooo`3oool0>P3oool001l0oooo00<000000?ooo`3oool0;@3oool00`3o0000oooo0000
o`3b0?ooo`030?l0003oool0oooo00/0oooo00<0003o0?ooo`3oool0>`3oool001l0oooo00<00000
0?ooo`3oool0;P3oool00`3o0000oooo0000o`3`0?ooo`030?l0003oool0oooo00/0oooo00<0003o
0?ooo`3oool0?03oool001l0oooo00<000000?ooo`3oool0;`3oool00`3o0000oooo0000o`3_0?oo
o`030?l0003oool0oooo00X0oooo00<0003o0?ooo`3oool0?@3oool001l0oooo00<000000?ooo`3o
ool0;`3oool0103o0000oooo0?ooo`000?o]0?ooo`030?l0003oool0oooo00X0oooo00<0003o0?oo
o`3oool0?P3oool001l0oooo00<000000?ooo`3oool0<03oool00`3o0000oooo0000o`3/0?ooo`03
0?l0003oool0oooo00X0oooo00<0003o0?ooo`3oool0?`3oool001l0oooo00<000000?ooo`3oool0
<@3oool00`3o0000oooo0000o`3Z0?ooo`030?l0003oool0oooo00/0oooo00<0003o0?ooo`3oool0
?`3oool001l0oooo00<000000?ooo`3oool0<P3oool00`3o0000oooo0000o`3X0?ooo`030?l0003o
ool0oooo00/0oooo00<0003o0?ooo`3oool0@03oool001l0oooo00<000000?ooo`3oool0<`3oool0
0`3o0000oooo0000o`3V0?ooo`030?l0003oool0oooo00/0oooo00<0003o0?ooo`3oool0@@3oool0
01l0oooo00<000000?ooo`3oool0=03oool00`3o0000oooo0000o`3T0?ooo`030?l0003oool0oooo
00/0oooo00<0003o0?ooo`3oool0@P3oool001l0oooo00<000000?ooo`3oool0=@3oool00`3o0000
oooo0000o`3R0?ooo`030?l0003oool0oooo00/0oooo00<0003o0?ooo`3oool0@`3oool001l0oooo
00<000000?ooo`3oool0=P3oool00`3o0000oooo0000o`3P0?ooo`030?l0003oool0oooo00/0oooo
00<0003o0?ooo`3oool0A03oool001l0oooo00<000000?ooo`3oool0=`3oool00`3o0000oooo0000
o`3N0?ooo`030?l0003oool0oooo00/0oooo00<0003o0?ooo`3oool0A@3oool001l0oooo00<00000
0?ooo`3oool0>03oool00`3o0000003o0?ooo`3L0?ooo`030?l0003oool0oooo00/0oooo00<0003o
0?ooo`3oool0AP3oool001l0oooo00<000000?ooo`3oool0>@3oool00`3o0000003o0?ooo`3J0?oo
o`030?l0003oool0oooo00/0oooo00<0003o0?ooo`3oool0A`3oool001l0oooo00<000000?ooo`3o
ool0>P3oool00`3o0000003o0?ooo`3H0?ooo`030?l0003oool0oooo00/0oooo00<0003o0?ooo`3o
ool0B03oool001l0oooo00<000000?ooo`3oool0>`3oool00`3o0000003o0?ooo`3F0?ooo`030?l0
003oool0oooo00/0oooo00<0003o0?ooo`3oool0B@3oool001l0oooo00<000000?ooo`3oool0?03o
ool00`3o0000003o0?ooo`3D0?ooo`030?l0003oool0oooo00/0oooo00<0003o0?ooo`3oool0BP3o
ool001l0oooo00<000000?ooo`3oool0?@3oool00`3o0000003o0?ooo`3B0?ooo`030?l0003oool0
oooo00`0oooo00<0003o0?ooo`3oool0BP3oool001l0oooo00<000000?ooo`3oool0?P3oool00`3o
0000003o0?ooo`3@0?ooo`030?l0003oool0oooo00`0oooo00<0003o0?ooo`3oool0B`3oool001l0
oooo00<000000?ooo`3oool0?`3oool00`3o0000003o0?ooo`3>0?ooo`030?l0003oool0oooo00`0
oooo00<0003o0?ooo`3oool0C03oool001l0oooo00<000000?ooo`3oool0@03oool00`000?l0oooo
0?ooo`3<0?ooo`030?l0003oool0oooo00`0oooo00<0003o0?ooo`3oool0C@3oool001l0oooo00<0
00000?ooo`3oool0@@3oool00`000?l0oooo0?ooo`3:0?ooo`030?l0003oool0oooo00`0oooo00<0
003o0?ooo`3oool0CP3oool001l0oooo00<000000?ooo`3oool0@P3oool00`000?l0oooo0?ooo`38
0?ooo`030?l0003oool0oooo00`0oooo00<0003o0?ooo`3oool0C`3oool001l0oooo00<000000?oo
o`3oool0@`3oool00`000?l0oooo0?ooo`360?ooo`030?l0003oool0oooo00`0oooo00<0003o0?oo
o`3oool0D03oool001l0oooo00<000000?ooo`3oool0A03oool00`000?l0oooo0?ooo`340?ooo`03
0?l0003oool0oooo00`0oooo00<0003o0?ooo`3oool0D@3oool001l0oooo00<000000?ooo`3oool0
A@3oool00`000?l0oooo0?ooo`320?ooo`030?l0003oool0oooo00`0oooo00<0003o0?ooo`3oool0
DP3oool001l0oooo00<000000?ooo`3oool0AP3oool00`000?l0oooo0?ooo`300?ooo`030?l0003o
ool0oooo00`0oooo00<0003o0?ooo`3oool0D`3oool001l0oooo00<000000?ooo`3oool0A`3oool0
0`000?l0oooo0?ooo`2n0?ooo`030?l0003oool0oooo00`0oooo00<0003o0?ooo`3oool0E03oool0
01l0oooo00<000000?ooo`3oool0B03oool00`000?l0oooo0?ooo`2l0?ooo`030?l0003oool0oooo
00`0oooo00<0003o0?ooo`3oool0E@3oool001l0oooo00<000000?ooo`3oool0B@3oool00`000?l0
oooo0?ooo`2j0?ooo`030?l0003oool0oooo00`0oooo00<0003o0?ooo`3oool0EP3oool001l0oooo
00<000000?ooo`3oool0BP3oool00`000?l0oooo0?ooo`2h0?ooo`030?l0003oool0oooo00`0oooo
00<0003o0?ooo`3oool0E`3oool001l0oooo00<000000?ooo`3oool0B`3oool20000okH0oooo0P3o
000>0?ooo`030000o`3oool0oooo05P0oooo000O0?ooo`030000003oool0oooo04d0oooo00<0003o
0?ooo`3oool0/P3oool00`3o0000oooo0?ooo`0=0?ooo`030000o`3oool0oooo05T0oooo000O0?oo
o`030000003oool0oooo04h0oooo00<0003o0?ooo`3oool0/03oool00`3o0000oooo0?ooo`0=0?oo
o`030000o`3oool0oooo05X0oooo000O0?ooo`030000003oool0oooo04l0oooo00<0003o0?ooo`3o
ool0[P3oool00`3o0000oooo0?ooo`0=0?ooo`030000o`3oool0oooo05/0oooo000O0?ooo`030000
003oool0oooo0500oooo00<0003o0?ooo`3oool0[03oool00`3o0000oooo0?ooo`0=0?ooo`030000
o`3oool0oooo05`0oooo000O0?ooo`030000003oool0oooo0540oooo00<0003o0?ooo`3oool0ZP3o
ool00`3o0000oooo0?ooo`0=0?ooo`030000o`3oool0oooo05d0oooo000O0?ooo`030000003oool0
oooo0580oooo00<0003o0?ooo`3oool0Z03oool00`3o0000oooo0?ooo`0=0?ooo`030000o`3oool0
oooo05h0oooo000O0?ooo`030000003oool0oooo05<0oooo00<0003o0?ooo`3oool0YP3oool00`3o
0000oooo0?ooo`0=0?ooo`030000o`3oool0oooo05l0oooo000O0?ooo`030000003oool0oooo05@0
oooo0P000?nT0?ooo`80o`003P3oool20000of80oooo000O0?ooo`030000003oool0oooo05H0oooo
00<0003o0?ooo`3oool0X03oool00`3o0000oooo0?ooo`0=0?ooo`030000o`3oool0oooo0680oooo
000O0?ooo`030000003oool0oooo05L0oooo00<0003o0?ooo`3oool0WP3oool00`3o0000oooo0?oo
o`0=0?ooo`030000o`3oool0oooo06<0oooo000O0?ooo`030000003oool0oooo05P0oooo00<0003o
0?ooo`3oool0W03oool00`3o0000oooo0?ooo`0<0?ooo`80003oIP3oool001l0oooo00<000000?oo
o`3oool0F@3oool20000oiX0oooo0P3o000>0?ooo`030000o`3oool0oooo06H0oooo000O0?ooo`03
0000003oool0oooo05/0oooo00<0003o0?ooo`3oool0UP3oool00`3o0000oooo0?ooo`0<0?ooo`80
003oJ@3oool001l0oooo00<000000?ooo`3oool0G03oool00`000?l0oooo0?ooo`2D0?ooo`030?l0
003oool0oooo00`0oooo00<0003o0?ooo`3oool0J@3oool001l0oooo00<000000?ooo`3oool0G@3o
ool00`000?l0oooo0?ooo`2A0?ooo`80o`003P3oool00`000?l0oooo0?ooo`1Z0?ooo`007`3oool0
0`000000oooo0?ooo`1N0?ooo`80003oT03oool00`3o0000oooo0?ooo`0<0?ooo`80003oK@3oool0
01l0oooo00<000000?ooo`3oool0H03oool00`000?l0oooo0?ooo`2<0?ooo`030?l0003oool0oooo
00`0oooo00<0003o0?ooo`3oool0K@3oool001l0oooo00<000000?ooo`3oool0H@3oool00`000?l0
oooo0?ooo`290?ooo`80o`003@3oool20000og00oooo000O0?ooo`030000003oool0oooo0680oooo
0P000?n80?ooo`030?l0003oool0oooo00`0oooo00<0003o0?ooo`3oool0L03oool001l0oooo00<0
00000?ooo`3oool0I03oool00`000?l0oooo0?ooo`230?ooo`80o`003P3oool00`000?l0oooo0?oo
o`1a0?ooo`007`3oool00`000000oooo0?ooo`1U0?ooo`80003o00<0oooo0?l0o`3o0?l0O`3oool0
0`3o0000oooo0?ooo`0<0?ooo`80003oM03oool001l0oooo00<000000?ooo`3oool0I`3oool40?l0
og`0oooo0P3o000>0?ooo`030000o`3oool0oooo07@0oooo000O0?ooo`030000003oool0oooo06L0
oooo1@3o0?mi0?ooo`80o`003P3oool20000ogL0oooo000O0?ooo`030000003oool0oooo06P0oooo
1@3o0?mg0?ooo`030?l0003oool0oooo00d0oooo00<0003o0?ooo`3oool0M`3oool001l0oooo00<0
00000?ooo`3oool0J@3oool40?l0ogD0oooo0P3o000?0?ooo`030000o`3oool0oooo07P0oooo000O
0?ooo`030000003oool0oooo06X0oooo0P3o0?l00`3oool0003o0000o`1b0?ooo`030?l0003oool0
oooo00d0oooo0P000?mk0?ooo`007`3oool00`000000oooo0?ooo`1_0?ooo`030000o`3oool0oooo
06d0oooo0P3o000?0?ooo`030000o`3oool0oooo07/0oooo000O0?ooo`030000003oool0oooo0700
oooo0P000?m[0?ooo`80o`003`3oool20000ogh0oooo000O0?ooo`030000003oool0oooo0780oooo
0P000?mW0?ooo`80o`003`3oool20000oh00oooo000O0?ooo`030000003oool0oooo07@0oooo0P00
0?mT0?ooo`030?l0003oool0oooo00d0oooo0P000?n20?ooo`007`3oool00`000000oooo0?ooo`1f
0?ooo`80003oH03oool20?l000h0oooo0P000?n40?ooo`007`3oool00`000000oooo0?ooo`1h0?oo
o`80003oG03oool20?l000h0oooo0P000?n60?ooo`007`3oool00`000000oooo0?ooo`1j0?ooo`80
003oF03oool20?l000h0oooo0P000?n80?ooo`007`3oool00`000000oooo0?ooo`1l0?ooo`<0003o
D`3oool20?l000h0oooo0P000?n:0?ooo`007`3oool00`000000oooo0?ooo`1o0?ooo`80003oCP3o
ool30?l000h0oooo0P000?n<0?ooo`007`3oool00`000000oooo0?ooo`210?ooo`80003oB@3oool3
0?l000h0oooo0`000?n>0?ooo`007`3oool00`000000oooo0?ooo`230?ooo`<0003o@`3oool30?l0
00l0oooo0P000?nA0?ooo`007`3oool00`000000oooo0?ooo`260?ooo`80003o?P3oool30?l000l0
oooo0`000?nC0?ooo`007`3oool00`000000oooo0?ooo`280?ooo`<0003o>03oool30?l000l0oooo
0`000?nF0?ooo`007`3oool00`000000oooo0?ooo`2;0?ooo`<0003o<@3oool40?l000l0oooo0`00
0?nI0?ooo`007`3oool00`000000oooo0?ooo`2>0?ooo`@0003o:P3oool30?l000l0oooo10000?nL
0?ooo`005P3oool5000000@0oooo00<000000?ooo`3oool0TP3oool30000o`<0o`00803oool40?l0
00l0oooo0`000?nP0?ooo`00603oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo09D0
oooo10000?l60?l00180oooo1`3o000?0?ooo`@0003oX`3oool001P0oooo00<000000?ooo`3oool0
103oool3000009T0oooo1P000?lB0?l00100oooo1P000?nW0?ooo`00603oool00`000000oooo0?oo
o`040?ooo`030000003oool0oooo09l0oooo1`000?lD0?ooo`L0003o[@3oool001P0oooo00<00000
0?ooo`3oool0103oool00`000000oooo0?ooo`2V0?oooa@0003o]03oool001L0oooo0P0000060?oo
o`030000003oool0oooo0?l0ooooK`3oool001l0oooo00<000000?ooo`3oool0o`3ooom_0?ooo`00
7`3oool00`000000oooo0?ooo`3o0?ooofl0oooo000O0?ooo`030000003oool0oooo0?l0ooooK`3o
ool00001\
\>"],
    ImageRangeCache->{{{0, 399}, {159, 0}} -> {0, 0, 0, 0}}],
  "  \n\n\t\t",
  StyleBox["Figure 2.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  " The secant parabola approximating  ",
  Cell[BoxData[
      \(y = sin \((x)\)\)]],
  ",  at  ",
  Cell[BoxData[
      \(x\_0 = 1\)]],
  "  using  ",
  Cell[BoxData[
      \(h\  = 0.01\)]]
}], "Text",
  AspectRatioFixed->False,
  ImageRegion->{{0, 1}, {0, 1}}],

Cell[TextData[{
  "The limiting position of the secant parabola is called the \"tangent \
parabola.\"  The following figure shows this case when ",
  StyleBox["h",
    FontFamily->"Courier New"],
  " goes to 0 and all three nodes coincide. "
}], "Text"],

Cell[TextData[{
  "\t\t",
  Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .4 
%%ImageSize: 400 160 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-1.14383e-017 0.31831 1.37423e-017 0.380952 [
[.31831 -0.0125 -3 -9 ]
[.31831 -0.0125 3 0 ]
[.5 -0.0125 -8.09375 -18.1875 ]
[.5 -0.0125 8.09375 0 ]
[1 -0.0125 -5 -12.5625 ]
[1 -0.0125 5 0 ]
[-0.0125 .38095 -6 -4.5 ]
[-0.0125 .38095 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .4 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.31831 0 m
.31831 .00625 L
s
[(1)] .31831 -0.0125 0 1 Mshowa
.5 0 m
.5 .00625 L
s
gsave
.5 -0.0125 -69.0938 -22.1875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 26.1875 translate 1 -1 scale
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding WindowsANSIEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
66.063 9.313 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(p) show
64.750 15.125 moveto
(\\200\\200) show
69.000 15.125 moveto
(\\200) show
71.063 15.125 moveto
(\\200) show
66.063 21.188 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
1 0 m
1 .00625 L
s
gsave
1 -0.0125 -66 -16.5625 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20.5625 translate 1 -1 scale
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding WindowsANSIEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 12.813 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(p) show
1.000 setlinewidth
grestore
0 0 m
1 0 L
s
0 .38095 m
.00625 .38095 L
s
[(1)] -0.0125 .38095 1 0 Mshowa
0 0 m
0 .4 L
s
0 0 m
1 0 L
1 .4 L
0 .4 L
closepath
clip
newpath
1 0 0 r
.5 Mabswid
0 0 m
.04057 .04842 L
.08481 .1003 L
.12636 .14729 L
.16632 .19012 L
.20885 .2324 L
.2498 .2692 L
.29331 .30343 L
.33524 .33105 L
.37557 .35222 L
.39599 .3608 L
.41848 .36853 L
.43982 .37416 L
.44937 .37614 L
.4598 .37792 L
.46545 .37871 L
.4707 .37934 L
.47614 .37988 L
.48106 .38028 L
.48591 .38058 L
.48813 .38069 L
.49048 .38078 L
.49299 .38086 L
.4941 .38089 L
.4953 .38091 L
.49658 .38093 L
.49778 .38094 L
.49852 .38095 L
.49921 .38095 L
.50051 .38095 L
.50171 .38095 L
.503 .38094 L
.50421 .38092 L
.50533 .3809 L
.50792 .38083 L
.51065 .38074 L
.51331 .38062 L
.51579 .38048 L
.52142 .38009 L
.53077 .37917 L
.54076 .37783 L
.55151 .37597 L
.56317 .37347 L
.58433 .36766 L
.6273 .35089 L
.66867 .32871 L
.70845 .30214 L
.75081 .26869 L
.79157 .232 L
.83491 .18884 L
Mistroke
.87666 .14394 L
.91682 .09842 L
.95955 .04828 L
1 0 L
Mfstroke
0 0 1 r
.02866 0 m
.04057 .01893 L
.08481 .08332 L
.12636 .13815 L
.16632 .18573 L
.20885 .23083 L
.2498 .26883 L
.29331 .30341 L
.33524 .33105 L
.37557 .3524 L
.39599 .36125 L
.41848 .36946 L
.44006 .37584 L
.4598 .38038 L
.46955 .38217 L
.48018 .38378 L
.48601 .38451 L
.49142 .38509 L
.49698 .3856 L
.5021 .38597 L
.50743 .38627 L
.51024 .3864 L
.5132 .3865 L
.51444 .38653 L
.51578 .38657 L
.51693 .38659 L
.51818 .38661 L
.51895 .38662 L
.51965 .38663 L
.52033 .38663 L
.52104 .38664 L
.52228 .38664 L
.52365 .38664 L
.52489 .38663 L
.52618 .38662 L
.52729 .38661 L
.5285 .38659 L
.53121 .38653 L
.53373 .38645 L
.5383 .38626 L
.54319 .38598 L
.54879 .38556 L
.55395 .3851 L
.5656 .38373 L
.57588 .38217 L
.58676 .38015 L
.60732 .37531 L
.62654 .36958 L
.66731 .35356 L
.71065 .33076 L
Mistroke
.7524 .30317 L
.79256 .27144 L
.83529 .23206 L
.87643 .1887 L
.92015 .13675 L
.96227 .08097 L
1 .02625 L
Mfstroke
1 0 1 r
.012 w
.31831 .32056 Mdot
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
    ImageSize->{400, 160},
    ImageMargins->{{0, 0}, {0, 0}},
    ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006@0000X2000`400?l00000o`00003oo`3ooonA
0?ooo`00o`3ooonA0?ooo`00b03oool400000<@0oooo00380?ooo`030000003oool0oooo0<D0oooo
00390?ooo`030000003oool0oooo0<@0oooo003:0?ooo`030000003oool0oooo0<<0oooo00380?oo
o`040000003oool0oooo00000<@0oooo00390?ooo`800000a@3oool00?l0ooooT@3oool00?l0oooo
T@3oool00<D0oooo100000000`3oool000000000000200000<80oooo002:0?ooo`D00000hP3oool0
0`000000oooo0?ooo`020?ooo`030000003oool0oooo01L0oooo002<0?ooo`030000003oool0oooo
0><0oooo00@000000?ooo`3oool000006P3oool008`0oooo00<000000?ooo`3oool0i03oool00`00
0000oooo0000000J0?ooo`00S03oool00`000000oooo0?ooo`0h0?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool0Y03oool00`000000oooo0000000J0?ooo`00S03oool00`000000oooo
0?ooo`0i0?ooo`040000003oool0oooo00000:H0oooo1@00000I0?ooo`00R`3oool2000003`0oooo
00<000000?ooo`000000a03oool00<T0oooo00<000000?ooo`000000a03oool00<P0oooo1@000033
0?ooo`00o`3ooonA0?ooo`00o`3ooonA0?ooo`00o`3ooonA0?ooo`00o`3ooonA0?ooo`007`3oool0
0`3o0000000000000007000000030000o`00000000000?l00000B@0000000`3o0000oooo0?ooo`0I
0?ooo`007`3oool00`000000o`000?ooo`080?ooo`030000o`3oool0oooo05l0oooo00<000000?oo
o`3oool0>`3oool00`000000oooo0?ooo`2V0?ooo`030?l000000000oooo01X0oooo000O0?ooo`03
0000003oool0o`0000P0oooo00<0003o0?ooo`3oool0G`3oool00`000000oooo0?ooo`0k0?ooo`03
0000003oool0oooo0:D0oooo00<0o`000?ooo`0000006`3oool001l0oooo00@000000?ooo`3oool0
o`00203oool00`000?l0oooo0?ooo`3o0?ooodD0oooo00<0o`000?ooo`3oool06`3oool001l0oooo
00@000000?ooo`3oool0o`002@3oool00`000?l0oooo0?ooo`3o0?oood<0oooo00<0o`000?ooo`3o
ool0703oool001l0oooo00D000000?ooo`3oool0oooo0?l000080?ooo`030000o`3oool0oooo0?l0
oooo@P3oool00`3o0000oooo0?ooo`0M0?ooo`007`3oool00`000000oooo0?ooo`020?ooo`030?l0
003oool0oooo00H0oooo00<0003o0?ooo`3oool0o`3ooom00?ooo`030?l0003oool0oooo01h0oooo
000O0?ooo`030000003oool0oooo00<0oooo00<0o`000?ooo`3oool01P3oool00`000?l0oooo0?oo
o`3o0?oooch0oooo00<0o`000?ooo`3oool07`3oool001l0oooo00<000000?ooo`3oool0103oool0
0`3o0000oooo0?ooo`050?ooo`030000o`3oool0oooo0?l0oooo?@3oool00`3o0000oooo0?ooo`0P
0?ooo`007`3oool00`000000oooo0?ooo`050?ooo`030?l0003oool0oooo00D0oooo00<0003o0?oo
o`3oool0o`3oooll0?ooo`030?l0003oool0oooo00@0oooo00<0003o0?ooo`3oool06@3oool001l0
oooo00<000000?ooo`3oool01P3oool00`3o0000oooo0?ooo`050?ooo`030000o`3oool0oooo0?l0
oooo>P3oool00`3o0000oooo0?ooo`040?ooo`030000o`3oool0oooo01X0oooo000O0?ooo`030000
003oool0oooo00L0oooo00<0o`000?ooo`3oool0103oool00`000?l0oooo0?ooo`3o0?ooocT0oooo
00<0o`000?ooo`3oool01@3oool00`000?l0oooo0?ooo`0J0?ooo`007`3oool00`000000oooo0?oo
o`070?ooo`030?l0003oool0oooo00D0oooo00<0003o0?ooo`3oool0o`3ooolg0?ooo`030?l0003o
ool0oooo00D0oooo00<0003o0?ooo`3oool06`3oool001l0oooo00<000000?ooo`3oool0203oool0
0`3o0000oooo0?ooo`050?ooo`030000o`3oool0oooo0?l0oooo=@3oool00`3o0000oooo0?ooo`05
0?ooo`030000o`3oool0oooo01`0oooo000O0?ooo`030000003oool0oooo00T0oooo00<0o`000?oo
o`3oool0103oool00`000?l0oooo0?ooo`3o0?ooocD0oooo00<0o`000?ooo`3oool01@3oool00`00
0?l0oooo0?ooo`0L0?ooo`007`3oool00`000000oooo0?ooo`0:0?ooo`030?l0003oool0oooo00@0
oooo00<0003o0?ooo`3oool0o`3ooolc0?ooo`030?l0003oool0oooo00D0oooo00<0003o0?ooo`3o
ool07@3oool001l0oooo00<000000?ooo`3oool02`3oool00`3o0000oooo0?ooo`040?ooo`030000
o`3oool0oooo0?l0oooo<@3oool00`3o0000oooo0?ooo`050?ooo`030000o`3oool0oooo01h0oooo
000O0?ooo`030000003oool0oooo00`0oooo00<0o`000?ooo`3oool00`3oool00`000?l0oooo0?oo
o`3o0?oooc00oooo00<0o`000?ooo`3oool01P3oool00`000?l0oooo0?ooo`0N0?ooo`007`3oool0
0`000000oooo0?ooo`0=0?ooo`030?l0003oool0oooo00<0oooo00<0003o0?ooo`3oool0o`3oool^
0?ooo`030?l0003oool0oooo00H0oooo00<0003o0?ooo`3oool07`3oool001l0oooo00<000000?oo
o`3oool03@3oool00`3o0000oooo0?ooo`040?ooo`030000o`3oool0oooo0?l0oooo;03oool00`3o
0000oooo0?ooo`060?ooo`030000o`3oool0oooo0200oooo000O0?ooo`030000003oool0oooo00h0
oooo00<0o`000?ooo`3oool0103oool00`000?l0oooo0?ooo`3o0?ooob/0oooo00<0o`000?ooo`3o
ool01@3oool00`000?l0oooo0?ooo`0Q0?ooo`007`3oool00`000000oooo0?ooo`0?0?ooo`030?l0
003oool0oooo00<0oooo00<0003o0?ooo`3oool0o`3ooolZ0?ooo`030?l0003oool0oooo00H0oooo
00<0003o0?ooo`3oool08@3oool001l0oooo00<000000?ooo`3oool0403oool00`3o0000oooo0?oo
o`030?ooo`030000o`3oool0oooo0?l0oooo:03oool00`3o0000oooo0?ooo`060?ooo`030000o`3o
ool0oooo0280oooo000O0?ooo`030000003oool0oooo0140oooo00<0o`000?ooo`3oool00`3oool0
0`000?l0oooo0?ooo`3o0?ooobH0oooo00<0o`000?ooo`3oool01P3oool00`000?l0oooo0?ooo`0S
0?ooo`007`3oool00`000000oooo0?ooo`0B0?ooo`030?l0003oool0oooo0080oooo00<0003o0?oo
o`3oool0o`3ooolU0?ooo`030?l0003oool0oooo00L0oooo00<0003o0?ooo`3oool08`3oool001l0
oooo00<000000?ooo`3oool04P3oool00`3o0000oooo0?ooo`030?ooo`030000o`3oool0oooo0?l0
oooo8`3oool00`3o0000oooo0?ooo`070?ooo`030000o`3oool0oooo02@0oooo000O0?ooo`030000
003oool0oooo01<0oooo00<0o`000?ooo`3oool00`3oool00`000?l0oooo0?ooo`3o0?ooob80oooo
00<0o`000?ooo`3oool01P3oool00`000?l0oooo0?ooo`0U0?ooo`007`3oool00`000000oooo0?oo
o`0D0?ooo`030?l0003oool0oooo0080oooo00<0003o0?ooo`3oool0o`3ooolQ0?ooo`030?l0003o
ool0oooo00L0oooo00<0003o0?ooo`3oool09@3oool001l0oooo00<000000?ooo`3oool05@3oool0
0`3o0000oooo0?ooo`020?ooo`030000o`3oool0oooo0?l0oooo7`3oool00`3o0000oooo0?ooo`07
0?ooo`030000o`3oool0oooo02H0oooo000O0?ooo`030000003oool0oooo01H0oooo00<0o`000?oo
o`3oool00P3oool00`000?l0oooo0?ooo`3o0?oooad0oooo00<0o`000?ooo`3oool01`3oool00`00
0?l0oooo0?ooo`0W0?ooo`007`3oool00`000000oooo0?ooo`0G0?ooo`050?l0003oool0oooo0?oo
o`000?l0o`3ooolN0?ooo`030?l0003oool0oooo00P0oooo00<0003o0?ooo`3oool09`3oool001l0
oooo00<000000?ooo`3oool05`3oool00`3o0000oooo0?ooo`020?ooo`030000o`3oool0oooo0?l0
oooo6P3oool00`3o0000oooo0?ooo`080?ooo`030000o`3oool0oooo02P0oooo000O0?ooo`030000
003oool0oooo01P0oooo00<0o`000?ooo`3oool00P3oool00`000?l0oooo0?ooo`3o0?oooaT0oooo
00<0o`000?ooo`3oool01`3oool00`000?l0oooo0?ooo`0Y0?ooo`007`3oool00`000000oooo0?oo
o`0I0?ooo`030?l0003oool0oooo0080oooo00<0003o0?ooo`3oool0o`3ooolG0?ooo`030?l0003o
ool0oooo00L0oooo00<0003o0?ooo`3oool0:P3oool001l0oooo00<000000?ooo`3oool06P3oool0
1@3o0000oooo0?ooo`3oool0003o0?l0oooo603oool00`3o0000oooo0?ooo`080?ooo`030000o`3o
ool0oooo02X0oooo000O0?ooo`030000003oool0oooo01/0oooo00D0o`000?ooo`3oool0oooo0000
o`3o0?oooaH0oooo00<0o`000?ooo`3oool0203oool00`000?l0oooo0?ooo`0[0?ooo`007`3oool0
0`000000oooo0?ooo`0L0?ooo`050?l0003oool0oooo0?ooo`000?l0o`3ooolD0?ooo`030?l0003o
ool0oooo00P0oooo00<0003o0?ooo`3oool0;03oool001l0oooo00<000000?ooo`3oool07@3oool0
1@3o0000oooo0?ooo`3oool0003o0?l0oooo4P3oool00`3o0000oooo0?ooo`080?ooo`030000o`3o
ool0oooo02d0oooo000O0?ooo`030000003oool0oooo01d0oooo00D0o`000?ooo`3oool0oooo0000
o`3o0?oooa40oooo00<0o`000?ooo`3oool02@3oool00`000?l0oooo0?ooo`0]0?ooo`007`3oool0
0`000000oooo0?ooo`0N0?ooo`050?l0003oool0oooo0?ooo`000?l0o`3oool?0?ooo`030?l0003o
ool0oooo00T0oooo00<0003o0?ooo`3oool0;P3oool001l0oooo00<000000?ooo`3oool07`3oool0
1@3o0000oooo0?ooo`3oool0003o0?l0oooo3@3oool00`3o0000oooo0?ooo`090?ooo`030000o`3o
ool0oooo02l0oooo000O0?ooo`030000003oool0oooo0200oooo00D0o`000?ooo`3oool0oooo0000
o`3o0?ooo`/0oooo00<0o`000?ooo`3oool02@3oool00`000?l0oooo0?ooo`0`0?ooo`007`3oool0
0`000000oooo0?ooo`0Q0?ooo`040?l0003oool0oooo0000ool0oooo2`3oool00`3o0000oooo0?oo
o`090?ooo`030000o`3oool0oooo0300oooo000O0?ooo`030000003oool0oooo0280oooo00@0o`00
0?ooo`3oool0003oo`3oool90?ooo`030?l0003oool0oooo00T0oooo00<0003o0?ooo`3oool0<@3o
ool001l0oooo00<000000?ooo`3oool08`3oool0103o0000oooo0?ooo`000?oo0?ooo`L0oooo00<0
o`000?ooo`3oool02@3oool00`000?l0oooo0?ooo`0b0?ooo`007`3oool00`000000oooo0?ooo`0T
0?ooo`040?l0003oool0oooo0000ool0oooo1@3oool00`3o0000oooo0?ooo`090?ooo`030000o`3o
ool0oooo03<0oooo000O0?ooo`030000003oool0oooo02@0oooo00@0o`000?ooo`3oool0003oo`3o
ool40?ooo`030?l0003oool0oooo00X0oooo00<0003o0?ooo`3oool0<`3oool001l0oooo00<00000
0?ooo`3oool09@3oool0103o0000oooo0?ooo`000?oo0?ooo`80oooo00<0o`000?ooo`3oool02P3o
ool00`000?l0oooo0?ooo`0d0?ooo`007`3oool00`000000oooo0?ooo`0V0?ooo`040?l0003oool0
oooo0000ool0oooo00<0o`000?ooo`3oool02P3oool00`000?l0oooo0?ooo`0e0?ooo`007`3oool0
0`000000oooo0?ooo`0W0?ooo`040?l0003oool0oooo0000ood0oooo00<0o`000?ooo`3oool02P3o
ool00`000?l0oooo0?ooo`0f0?ooo`007`3oool00`000000oooo0?ooo`0X0?ooo`040?l0003oool0
oooo0000oo/0oooo00<0o`000?ooo`3oool02P3oool00`000?l0oooo0?ooo`0g0?ooo`007`3oool0
0`000000oooo0?ooo`0Y0?ooo`030?l0003oool0003o0?X0oooo00<0o`000?ooo`3oool02P3oool0
0`000?l0oooo0?ooo`0h0?ooo`007`3oool00`000000oooo0?ooo`0Z0?ooo`030?l0003oool0003o
0?P0oooo00<0o`000?ooo`3oool02`3oool00`000?l0oooo0?ooo`0h0?ooo`007`3oool00`000000
oooo0?ooo`0[0?ooo`030?l0003oool0003o0?H0oooo00<0o`000?ooo`3oool02`3oool00`000?l0
oooo0?ooo`0i0?ooo`007`3oool00`000000oooo0?ooo`0/0?ooo`030?l0003oool0003o0?@0oooo
00<0o`000?ooo`3oool02`3oool00`000?l0oooo0?ooo`0j0?ooo`007`3oool00`000000oooo0?oo
o`0]0?ooo`030?l0003oool0003o0?80oooo00<0o`000?ooo`3oool02`3oool00`000?l0oooo0?oo
o`0k0?ooo`007`3oool00`000000oooo0?ooo`0^0?ooo`030?l0003oool0003o0?00oooo00<0o`00
0?ooo`3oool02`3oool00`000?l0oooo0?ooo`0l0?ooo`007`3oool00`000000oooo0?ooo`0_0?oo
o`030?l0003oool0003o0>l0oooo00<0o`000?ooo`3oool02P3oool00`000?l0oooo0?ooo`0m0?oo
o`007`3oool00`000000oooo0?ooo`0_0?ooo`040?l0003oool0oooo0000ond0oooo00<0o`000?oo
o`3oool02P3oool00`000?l0oooo0?ooo`0n0?ooo`007`3oool00`000000oooo0?ooo`0`0?ooo`03
0?l0003oool0003o0>`0oooo00<0o`000?ooo`3oool02P3oool00`000?l0oooo0?ooo`0o0?ooo`00
7`3oool00`000000oooo0?ooo`0a0?ooo`030?l0003oool0003o0>X0oooo00<0o`000?ooo`3oool0
2`3oool00`000?l0oooo0?ooo`0o0?ooo`007`3oool00`000000oooo0?ooo`0b0?ooo`030?l0003o
ool0003o0>P0oooo00<0o`000?ooo`3oool02`3oool00`000?l0oooo0?ooo`100?ooo`007`3oool0
0`000000oooo0?ooo`0c0?ooo`030?l0003oool0003o0>H0oooo00<0o`000?ooo`3oool02`3oool0
0`000?l0oooo0?ooo`110?ooo`007`3oool00`000000oooo0?ooo`0d0?ooo`030?l0003oool0003o
0>@0oooo00<0o`000?ooo`3oool02`3oool00`000?l0oooo0?ooo`120?ooo`007`3oool00`000000
oooo0?ooo`0e0?ooo`030?l0003oool0003o0>80oooo00<0o`000?ooo`3oool02`3oool00`000?l0
oooo0?ooo`130?ooo`007`3oool00`000000oooo0?ooo`0f0?ooo`030?l0003oool0003o0>00oooo
00<0o`000?ooo`3oool02`3oool00`000?l0oooo0?ooo`140?ooo`007`3oool00`000000oooo0?oo
o`0g0?ooo`030?l0003oool0003o0=h0oooo00<0o`000?ooo`3oool02`3oool00`000?l0oooo0?oo
o`150?ooo`007`3oool00`000000oooo0?ooo`0h0?ooo`030?l000000?l0oooo0=`0oooo00<0o`00
0?ooo`3oool02`3oool00`000?l0oooo0?ooo`160?ooo`007`3oool00`000000oooo0?ooo`0i0?oo
o`030?l000000?l0oooo0=X0oooo00<0o`000?ooo`3oool02`3oool00`000?l0oooo0?ooo`170?oo
o`007`3oool00`000000oooo0?ooo`0j0?ooo`030?l000000?l0oooo0=P0oooo00<0o`000?ooo`3o
ool02`3oool00`000?l0oooo0?ooo`180?ooo`007`3oool00`000000oooo0?ooo`0k0?ooo`030?l0
00000?l0oooo0=H0oooo00<0o`000?ooo`3oool02`3oool00`000?l0oooo0?ooo`190?ooo`007`3o
ool00`000000oooo0?ooo`0l0?ooo`030?l000000?l0oooo0=@0oooo00<0o`000?ooo`3oool02`3o
ool00`000?l0oooo0?ooo`1:0?ooo`007`3oool00`000000oooo0?ooo`0m0?ooo`030?l000000?l0
oooo0=80oooo00<0o`000?ooo`3oool0303oool00`000?l0oooo0?ooo`1:0?ooo`007`3oool00`00
0000oooo0?ooo`0n0?ooo`030?l000000?l0oooo0=00oooo00<0o`000?ooo`3oool0303oool00`00
0?l0oooo0?ooo`1;0?ooo`007`3oool00`000000oooo0?ooo`0o0?ooo`030?l000000?l0oooo0<h0
oooo00<0o`000?ooo`3oool0303oool00`000?l0oooo0?ooo`1<0?ooo`007`3oool00`000000oooo
0?ooo`100?ooo`030000o`3oool0oooo0<`0oooo00<0o`000?ooo`3oool0303oool00`000?l0oooo
0?ooo`1=0?ooo`007`3oool00`000000oooo0?ooo`110?ooo`030000o`3oool0oooo0<X0oooo00<0
o`000?ooo`3oool0303oool00`000?l0oooo0?ooo`1>0?ooo`007`3oool00`000000oooo0?ooo`12
0?ooo`030000o`3oool0oooo0<P0oooo00<0o`000?ooo`3oool0303oool00`000?l0oooo0?ooo`1?
0?ooo`007`3oool00`000000oooo0?ooo`130?ooo`030000o`3oool0oooo0<H0oooo00<0o`000?oo
o`3oool0303oool00`000?l0oooo0?ooo`1@0?ooo`007`3oool00`000000oooo0?ooo`140?ooo`03
0000o`3oool0oooo0<@0oooo00<0o`000?ooo`3oool0303oool00`000?l0oooo0?ooo`1A0?ooo`00
7`3oool00`000000oooo0?ooo`150?ooo`030000o`3oool0oooo0<80oooo00<0o`000?ooo`3oool0
303oool00`000?l0oooo0?ooo`1B0?ooo`007`3oool00`000000oooo0?ooo`160?ooo`030000o`3o
ool0oooo0<00oooo00<0o`000?ooo`3oool0303oool00`000?l0oooo0?ooo`1C0?ooo`007`3oool0
0`000000oooo0?ooo`170?ooo`030000o`3oool0oooo0;h0oooo00<0o`000?ooo`3oool0303oool0
0`000?l0oooo0?ooo`1D0?ooo`007`3oool00`000000oooo0?ooo`180?ooo`030000o`3oool0oooo
0;`0oooo00<0o`000?ooo`3oool0303oool00`000?l0oooo0?ooo`1E0?ooo`007`3oool00`000000
oooo0?ooo`190?ooo`030000o`3oool0oooo0;X0oooo00<0o`000?ooo`3oool0303oool00`000?l0
oooo0?ooo`1F0?ooo`007`3oool00`000000oooo0?ooo`1:0?ooo`030000o`3oool0oooo0;P0oooo
00<0o`000?ooo`3oool0303oool00`000?l0oooo0?ooo`1G0?ooo`007`3oool00`000000oooo0?oo
o`1;0?ooo`80003o]P3oool20?l000h0oooo00<0003o0?ooo`3oool0F03oool001l0oooo00<00000
0?ooo`3oool0C@3oool00`000?l0oooo0?ooo`2b0?ooo`030?l0003oool0oooo00d0oooo00<0003o
0?ooo`3oool0F@3oool001l0oooo00<000000?ooo`3oool0CP3oool00`000?l0oooo0?ooo`2`0?oo
o`030?l0003oool0oooo00d0oooo00<0003o0?ooo`3oool0FP3oool001l0oooo00<000000?ooo`3o
ool0C`3oool00`000?l0oooo0?ooo`2^0?ooo`030?l0003oool0oooo00d0oooo00<0003o0?ooo`3o
ool0F`3oool001l0oooo00<000000?ooo`3oool0D03oool00`000?l0oooo0?ooo`2/0?ooo`030?l0
003oool0oooo00d0oooo00<0003o0?ooo`3oool0G03oool001l0oooo00<000000?ooo`3oool0D@3o
ool00`000?l0oooo0?ooo`2Z0?ooo`030?l0003oool0oooo00d0oooo00<0003o0?ooo`3oool0G@3o
ool001l0oooo00<000000?ooo`3oool0DP3oool00`000?l0oooo0?ooo`2X0?ooo`030?l0003oool0
oooo00d0oooo00<0003o0?ooo`3oool0GP3oool001l0oooo00<000000?ooo`3oool0D`3oool00`00
0?l0oooo0?ooo`2V0?ooo`030?l0003oool0oooo00d0oooo00<0003o0?ooo`3oool0G`3oool001l0
oooo00<000000?ooo`3oool0E03oool20000oj@0oooo0P3o000>0?ooo`80003oHP3oool001l0oooo
00<000000?ooo`3oool0EP3oool00`000?l0oooo0?ooo`2P0?ooo`030?l0003oool0oooo00d0oooo
00<0003o0?ooo`3oool0HP3oool001l0oooo00<000000?ooo`3oool0E`3oool00`000?l0oooo0?oo
o`2N0?ooo`030?l0003oool0oooo00d0oooo00<0003o0?ooo`3oool0H`3oool001l0oooo00<00000
0?ooo`3oool0F03oool00`000?l0oooo0?ooo`2L0?ooo`030?l0003oool0oooo00`0oooo0P000?mV
0?ooo`007`3oool00`000000oooo0?ooo`1I0?ooo`80003oVP3oool20?l000h0oooo00<0003o0?oo
o`3oool0IP3oool001l0oooo00<000000?ooo`3oool0F`3oool00`000?l0oooo0?ooo`2F0?ooo`03
0?l0003oool0oooo00`0oooo0P000?mY0?ooo`007`3oool00`000000oooo0?ooo`1L0?ooo`030000
o`3oool0oooo09@0oooo00<0o`000?ooo`3oool0303oool00`000?l0oooo0?ooo`1Y0?ooo`007`3o
ool00`000000oooo0?ooo`1M0?ooo`030000o`3oool0oooo0940oooo0P3o000>0?ooo`030000o`3o
ool0oooo06X0oooo000O0?ooo`030000003oool0oooo05h0oooo0P000?n@0?ooo`030?l0003oool0
oooo00`0oooo0P000?m]0?ooo`007`3oool00`000000oooo0?ooo`1P0?ooo`030000o`3oool0oooo
08`0oooo00<0o`000?ooo`3oool0303oool00`000?l0oooo0?ooo`1]0?ooo`007`3oool00`000000
oooo0?ooo`1Q0?ooo`030000o`3oool0oooo08T0oooo0P3o000=0?ooo`80003oL03oool001l0oooo
00<000000?ooo`3oool0HP3oool20000ohP0oooo00<0o`000?ooo`3oool0303oool00`000?l0oooo
0?ooo`1`0?ooo`007`3oool00`000000oooo0?ooo`1T0?ooo`030000o`3oool0oooo08<0oooo0P3o
000>0?ooo`030000o`3oool0oooo0740oooo000O0?ooo`030000003oool0oooo06D0oooo0P000?n2
0?ooo`030?l0003oool0oooo00`0oooo0P000?md0?ooo`007`3oool00`000000oooo0?ooo`1W0?oo
o`040000o`3oool0o`3o0?l0og`0oooo0P3o000>0?ooo`030000o`3oool0oooo07@0oooo000O0?oo
o`030000003oool0oooo06P0oooo103o0?mi0?ooo`80o`003P3oool20000ogL0oooo000O0?ooo`03
0000003oool0oooo06P0oooo103o0?mh0?ooo`030?l0003oool0oooo00d0oooo00<0003o0?ooo`3o
ool0M`3oool001l0oooo00<000000?ooo`3oool0J@3oool20?l0o`030?ooo`000?l0oooo07@0oooo
0P3o000?0?ooo`030000o`3oool0oooo07P0oooo000O0?ooo`030000003oool0oooo06d0oooo0P00
0?mb0?ooo`030?l0003oool0oooo00d0oooo0P000?mk0?ooo`007`3oool00`000000oooo0?ooo`1_
0?ooo`030000o`3oool0oooo06d0oooo0P3o000?0?ooo`030000o`3oool0oooo07/0oooo000O0?oo
o`030000003oool0oooo0700oooo0P000?m[0?ooo`80o`003`3oool20000ogh0oooo000O0?ooo`03
0000003oool0oooo0780oooo0P000?mW0?ooo`80o`003`3oool20000oh00oooo000O0?ooo`030000
003oool0oooo07@0oooo0P000?mT0?ooo`030?l0003oool0oooo00d0oooo0P000?n20?ooo`007`3o
ool00`000000oooo0?ooo`1f0?ooo`80003oH03oool20?l000h0oooo0P000?n40?ooo`007`3oool0
0`000000oooo0?ooo`1h0?ooo`80003oG03oool20?l000h0oooo0P000?n60?ooo`007`3oool00`00
0000oooo0?ooo`1j0?ooo`80003oF03oool20?l000h0oooo0P000?n80?ooo`007`3oool00`000000
oooo0?ooo`1l0?ooo`<0003oD`3oool20?l000h0oooo0P000?n:0?ooo`007`3oool00`000000oooo
0?ooo`1o0?ooo`80003oCP3oool30?l000h0oooo0P000?n<0?ooo`007`3oool00`000000oooo0?oo
o`210?ooo`80003oB@3oool30?l000h0oooo0`000?n>0?ooo`007`3oool00`000000oooo0?ooo`23
0?ooo`<0003o@`3oool30?l000l0oooo0P000?nA0?ooo`007`3oool00`000000oooo0?ooo`260?oo
o`80003o?P3oool30?l000l0oooo0`000?nC0?ooo`007`3oool00`000000oooo0?ooo`280?ooo`<0
003o>03oool30?l000l0oooo0`000?nF0?ooo`007`3oool00`000000oooo0?ooo`2;0?ooo`<0003o
<@3oool40?l000l0oooo0`000?nI0?ooo`007`3oool00`000000oooo0?ooo`2>0?ooo`@0003o:P3o
ool30?l000l0oooo10000?nL0?ooo`005P3oool5000000@0oooo00<000000?ooo`3oool0TP3oool3
0000o`<0o`00803oool40?l000l0oooo0`000?nP0?ooo`00603oool00`000000oooo0?ooo`040?oo
o`030000003oool0oooo09D0oooo10000?l60?l00180oooo1`3o000?0?ooo`@0003oX`3oool001P0
oooo00<000000?ooo`3oool0103oool3000009T0oooo1P000?lB0?l00100oooo1P000?nW0?ooo`00
603oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo09l0oooo1`000?lD0?ooo`L0003o
[@3oool001P0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`2V0?oooa@0003o]03o
ool001L0oooo0P0000060?ooo`030000003oool0oooo0?l0ooooK`3oool001l0oooo00<000000?oo
o`3oool0o`3ooom_0?ooo`007`3oool00`000000oooo0?ooo`3o0?ooofl0oooo000O0?ooo`030000
003oool0oooo0?l0ooooK`3oool00001\
\>"],
    ImageRangeCache->{{{0, 399}, {159, 0}} -> {0, 0, 0, 0}}],
  "  \n\t\t",
  StyleBox["Figure 3.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  " The tangent parabola approximating  ",
  Cell[BoxData[
      \(y = sin \((x)\)\)]],
  ",  at  ",
  Cell[BoxData[
      \(x\_0 = 1\)]],
  "  where  ",
  Cell[BoxData[
      \(h\  \[Rule] 0\)]],
  ".  "
}], "Text"],

Cell["\<\

Can you guess what the tangent parabola will turn out to be?  We will reveal \
this pleasant surprise at the end of the article.
\
\>", "Text"],

Cell[TextData[{
  StyleBox["The Secant Parabola",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]],
  "\t\n\n\tA precise discussion of \"the secant parabola\" is now presented.  \
Recall that a polynomial of degree  ",
  Cell[BoxData[
      \(n = 2\)]],
  "  expanded about  ",
  Cell[BoxData[
      \(x = x\_0\)]],
  "  can be written in the form \n\n(1)\t\t",
  Cell[BoxData[
      \(p \((x)\) = 
        a\_0 + a\_1\ \((x - x\_0)\) + a\_2\ \((x - x\_0)\)\^2\)]],
  ",  \n\nwhere the coefficients ",
  Cell[BoxData[
      RowBox[{\(a\_0\), ",", \(a\_1\), ",", " ", 
        RowBox[{
          StyleBox["and",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], "  ", \(a\_2\)}]}]]],
  " are to be determined.  Since  ",
  Cell[BoxData[
      \(p \((x)\)\)]],
  "  is to be the interpolating polynomial for  ",
  Cell[BoxData[
      \(y = f \((x)\)\)]],
  " , it must pass through the three points  ",
  Cell[BoxData[
      \(\((x\_0, f \((x\_0)\))\)\)]],
  ", ",
  Cell[BoxData[
      \(\((x\_0 - h, f \((x\_0 - h)\))\)\)]],
  ", and ",
  Cell[BoxData[
      \(\((x\_0 + h, f \((x\_0 + h)\))\)\)]],
  ".  Using the first point ",
  Cell[BoxData[
      \(\((x\_0, f \((x\_0)\))\)\)]],
  " we obtain the relation  \n\n\t\t",
  Cell[BoxData[
      \(p \((x\_0)\) = \(a\_0 + a\_1\ \((x\_0 - x\_0)\) + 
            a\_2\ \((x\_0 - x\_0)\)\^2 = f \((x\_0)\)\)\)]],
  ",  \n\nwhich implies that \n\t\n\t\t",
  Cell[BoxData[
      \(a\_0 = f \((x\_0)\)\)]],
  ".   \n\nProceeding, we solve for the two coefficients ",
  Cell[BoxData[
      RowBox[{\(a\_1\), " ", 
        StyleBox["and",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], " ", \(a\_2\)}]]],
  " by first making the substitution ",
  Cell[BoxData[
      \(a\_0 = f \((x\_0)\)\)]],
  " in equation (1) and writing\n\n(2)\t\t",
  Cell[BoxData[
      \(p \((x)\) = 
        f \((x\_0)\) + a\_1\ \((x - x\_0)\) + a\_2\ \((x - x\_0)\)\^2\)]],
  ".    "
}], "Text",
  AspectRatioFixed->False,
  ImageRegion->{{0, 1}, {0, 1}}],

Cell[TextData[{
  "\nThen make substitutions for the two points ",
  Cell[BoxData[
      \(\((x\_0 - h, f \((x\_0 - h)\))\)\)]],
  ", and ",
  Cell[BoxData[
      \(\((x\_0 + h, f \((x\_0 + h)\))\)\)]],
  ", respectively,  in equation (2) and obtain two relations\n\n\t\t",
  Cell[BoxData[
      \(p \((x\_0 - h)\) = \(f \((x\_0)\) + a\_1\ \((x\_0 - h - x\_0)\) + 
            a\_2\ \((x\_0 - h - x\_0)\)\^2 = f \((x\_0 - h)\)\)\)]],
  "  \n\tand  \n\t\t",
  Cell[BoxData[
      \(p \((x\_0 + h)\) = \(f \((x\_0)\) + a\_1\ \((x\_0 + h - x\_0)\) + 
            a\_2\ \((x\_0 + h - x\_0)\)\^2 = f \((x\_0 + h)\)\)\)]],
  ".  \n\nSimplification  produces the following two equations which will be \
used to solve for ",
  Cell[BoxData[
      RowBox[{\(a\_1\), "  ", 
        StyleBox["and",
          FontFamily->"Times New Roman"], "  ", \(a\_2\)}]]],
  ". \n\n\t\t",
  Cell[BoxData[
      \(f \((x\_0)\) - h\ a\_1 + h\^2\ a\_2 = f \((x\_0 - h)\)\)]],
  ",  \n(3)  \n\t\t",
  Cell[BoxData[
      \(f \((x\_0)\) + h\ a\_1 + h\^2\ a\_2 = f \((x\_0 + h)\)\)]],
  ".  \n"
}], "Text",
  AspectRatioFixed->False,
  ImageRegion->{{0, 1}, {0, 1}}],

Cell[TextData[{
  "Subtract the first equation in (3) from the second and then divide by  2h  \
and get  \n\n\t\t",
  Cell[BoxData[
      \(a\_1 = \(f \((x\_0 + h)\)\  - \ f \((x\_0 - h)\)\)\/\(2\ h\)\)]],
  ".\n\nAdd the equations in (3), subtract ",
  Cell[BoxData[
      \(2\ f \((x\_0)\)\)]],
  " and then divide by ",
  Cell[BoxData[
      \(2  h\^2\)]],
  " and get \n\n\t\t",
  Cell[BoxData[
      \(a\_2 = \(f \((x\_0 - h)\)\  - \ 2\ f \((x\_0)\)\  + \ f \((x\_0 + \
h)\)\)\/\(2\ h\^2\)\)]],
  ".\n\t\n",
  StyleBox["The Secant Parabola Formula",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "\n\n\tThe secant parabola for ",
  Cell[BoxData[
      \(y = f \((x)\)\)]],
  " which passes through ",
  Cell[BoxData[
      \(\((x\_0, f \((x\_0)\))\)\)]],
  ", ",
  Cell[BoxData[
      \(\((x\_0 - h, f \((x\_0 - h)\))\)\)]],
  ", and ",
  Cell[BoxData[
      \(\((x\_0 + h, f \((x\_0 + h)\))\)\)]],
  " involves the variable x and parameters ",
  Cell[BoxData[
      RowBox[{\(x\_0\), " ", 
        StyleBox["and",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], " ", "h"}]]],
  " and has the form \n\n(4)\t\t",
  Cell[BoxData[
      \(p \((x, x\_0, h)\) = f \((x\_0)\)\)]],
  Cell[BoxData[
      \(\(\(\ \)\(\(+\ \(\(f \((x\_0 + h)\)\  - \ 
                f \((x\_0 - h)\)\)\/\(2\ h\)\)\) \((x - x\_0)\)\)\)\)]],
  Cell[BoxData[
      \(\(\(\ \)\(\(+\ \(\(f \((x\_0 + h)\)\  - \ 2\ f \((x\_0)\)\  + \ 
                f \((x\_0 - 
                      h)\)\)\/\(2\ h\^2\)\)\) \((x - x\_0)\)\^2\)\)\)]],
  ".  "
}], "Text",
  AspectRatioFixed->False,
  ImageRegion->{{0, 1}, {0, 1}}],

Cell[TextData[{
  StyleBox["An Alternative Construction",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  StyleBox[" & Proof",
    FontFamily->"New Century Schlbk",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  "  ",
  StyleBox[ButtonBox["Tangent Parabola",
    ButtonData:>{
      URL[ 
      "http://mathews.ecs.fullerton.edu/n2003/TangentParabolaProof.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox[ButtonBox["Tangent Parabola",
    ButtonData:>{
      URL[ 
      "http://math.fullerton.edu/mathews/n2003/TangentParabolaProof.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  "  "
}], "Text"],

Cell[TextData[{
  StyleBox["A Numerical Experiment",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "\n\n\tFormulas for the above graphs of the secant parabola  ",
  Cell[BoxData[
      \(p \((x, x\_0, h)\)\)]],
  " for  ",
  Cell[BoxData[
      \(y = \(f \((x)\) = sin \((x)\)\)\)]],
  " are constructed using formula (4).  The computations are centered at the \
point ",
  Cell[BoxData[
      \(x\_0 = 1\)]],
  " using the step sizes  ",
  Cell[BoxData[
      RowBox[{"h", "=", 
        RowBox[{"0.1", " ", 
          StyleBox["and",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], " ", "0.01"}]}]]],
  ". "
}], "Text",
  TextAlignment->Left,
  AspectRatioFixed->False,
  ImageRegion->{{0, 1}, {0, 1}}],

Cell[TextData[{
  StyleBox["Example 1.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Use ",
  Cell[BoxData[
      RowBox[{\(x\_0\), "=", 
        RowBox[{
          RowBox[{"1", " ", 
            StyleBox["and",
              FontFamily->"Times New Roman",
              FontSize->12,
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontColor->GrayLevel[0],
              FontVariations->{"Underline"->False,
              "StrikeThrough"->False}], " ", "h"}], "=", "0.1"}]}]]],
  " in formula (4) and compute the coefficients of ",
  Cell[BoxData[
      RowBox[{\((x - 1)\), " ", 
        StyleBox["and",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], " ", \(\((x - 1)\)\^2\)}]]],
  " for the secant parabola  ",
  Cell[BoxData[
      \(p \((x, 1, 0.1)\)\)]],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 1.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[TextData[{
  "Substitute   ",
  Cell[BoxData[
      RowBox[{\(x\_0\), "=", 
        RowBox[{
          RowBox[{"1", " ", 
            StyleBox["and",
              FontFamily->"Times New Roman",
              FontSize->12,
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontColor->GrayLevel[0],
              FontVariations->{"Underline"->False,
              "StrikeThrough"->False}], " ", "h"}], "=", "0.1"}]}]]],
  "  into the formulas given above and obtain \n\n\t\t",
  Cell[BoxData[{
      \(a\_1 = \(f \((x\_0 + h)\)\  - \ f \((x\_0 - h)\)\)\/\(2\ h\)\ \), 
    "\[IndentingNewLine]", 
      \(\ \ \ \ \(\(=\)\(\(f[1.1]\  - \ f[0.9]\)\/\(2 \((0.1)\)\)\)\)\), 
    "\[IndentingNewLine]", 
      \(\ \ \ \ \(\(=\)\(\(\(0.89120736\)\(\ \)\(-\)\(\ \)\(0.78332691\)\(\ \
\)\)\/0.2\)\)\), "\[IndentingNewLine]", 
      \(\ \ \ \ \(\(=\)\(\ \)\(0.10788045\/0.2\)\)\), "\[IndentingNewLine]", 
      \(a\_1 = \ 0.539402\)}]],
  "    \n\n\tand \n\n\t\t",
  Cell[BoxData[{
      \(a\_2 = \(f \((x\_0 - h)\)\  - \ 2\ f \((x\_0)\)\  + \ f \((x\_0 + \
h)\)\)\/\(2\ h\^2\)\), "\[IndentingNewLine]", 
      \(\ \ \ \ \(\(=\)\(\(f[1.1]\  - \ 2  f[1.0]\  + \ 
              f[0.9]\)\/\(2 \((0.1)\)\^2\)\)\)\), "\[IndentingNewLine]", 
      \(\ \ \ \ \(\(=\)\(\ \)\(\(\(0.89120736\)\(\ \)\(-\)\(1.68294197\)\(\ \
\)\(+\)\(\ \)\(0.78332691\)\(\ \)\)\/0.02\)\)\), "\[IndentingNewLine]", 
      \(\ \ \ \ \(\(=\)\(\ \)\(\(-0.0084077\)\/0.02\)\)\), 
    "\[IndentingNewLine]", 
      \(\ a\_2 = \ \(-0.420385\)\)}]],
  "    \n\t\nwhich are used with the value  ",
  Cell[BoxData[
      \(a\_0 = \(f[1.0] = 0.841471\)\)]],
  "  to obtain the secant parabola:  \n\n\t\t",
  Cell[BoxData[
      \(p \((x, 1, 0.1)\) = 0.841471\)]],
  Cell[BoxData[
      \(\(\(\ \)\(\(+\ 0.539402\)\ \((x - 1)\)\)\)\)]],
  Cell[BoxData[
      \(\(\(\ \)\(\(-0.420385\) \((x - 1)\)\^2\)\)\)]],
  "  "
}], "Text"],

Cell[TextData[{
  "The graphs of  ",
  Cell[BoxData[
      \(y = \(f \((x)\) = sin \((x)\)\)\)]],
  "  and  ",
  Cell[BoxData[
      \(y = p \((x, 1, 0.1)\)\)]],
  " are given in Figure 1.  "
}], "Text"],

Cell[BoxData[{
    \(\(x\_0\  = \ 1.0;\)\ \), "\[IndentingNewLine]", 
    \(\(h = 0.1;\)\ \), "\[IndentingNewLine]", 
    \(\(f[x_] = Sin[x];\)\), "\[IndentingNewLine]", 
    \(\(P[x_] = \ 
        f[x\_0] + \(\(f[x\_0 + h] - \ f[x\_0 - h]\)\/\(2  h\)\) \((x - 
                x\_0)\) + \(\(f[x\_0 - h]\  - 2  f[x\_0] + f[h + x\_0]\)\/\(2 
                   h\^2\)\) \((x - x\_0)\)\^2;\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<  \!\(x\_0\) = \>\"", 
        x\_0\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<   h = \>", h\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(a\_0\) = f[\!\(x\_0\)] = \>\"", 
        f[x\_0]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(a\_1\) = \!\(\(f[x\_0 + h] - f[x\_0 - h]\)\/\(2  h\)\
\) = \>\"", \(f[x\_0 + h] - \ f[x\_0 - h]\)\/\(2  h\)];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(a\_2\) = \!\(\(f[x\_0 - h] - 2  f[x\_0] + f[h + \
x\_0]\)\/\(2  h\^2\)\) = \>\"", \(f[x\_0 - h]\  - 2  f[x\_0] + f[h + \
x\_0]\)\/\(2  h\^2\)];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The secant parabola\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<P[x] = f[\!\(x\_0\)]+\!\(\(f[x\_0 + h] - f[x\_0 - h]\)\/\
\(2  h\)\)(x-\!\(x\_0\))+\!\(\(f[x\_0 - h] - 2  f[x\_0] + f[h + x\_0]\)\/\(2  \
h\^2\)\)\!\(\((x - x\_0)\)\^2\)\>\""\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<P[x] = \>", 
        f[x\_0], "\< + (\>", \(f[x\_0 + h] - \ f[x\_0 - h]\)\/\(2  h\), \
"\<)(x-(\>", 
        x\_0, "\<)) + (\>", \(f[x\_0 - h]\  - 2  f[x\_0] + f[h + x\_0]\)\/\(2 \
 h\^2\), "\<)(x-(\>", 
        x\_0, \*"\"\<)\!\(\()\^2\)\)\>\""\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<P[x] = \>", P[x]\ ];\)\ \)}], "Input"],

Cell[BoxData[{
    \(\(f[x_] = Sin[x];\)\ \ \), "\n", 
    \(\(P[x_, x0_, h_] = 
        f[x0] + \(\(\((f[h + x0] - f[x0 - h])\)\(\ \)\)\/\(2\ h\)\) \((x - 
                x0)\) + \(\(\((f[x0 - h] - 2\ f[x0] + 
                    f[h + x0])\)\(\ \)\)\/\(2\ h\^2\)\) \((x - x0)\)\^2;\)\ \
\), "\n", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\n", 
    \(\(dots = 
        Graphics[{{Magenta, PointSize[0.012], 
              Point[{1 - 0.1, f[1 - 0.1]}]}, {Magenta, PointSize[0.012], 
              Point[{1, f[1]}]}, {Magenta, PointSize[0.012], 
              Point[{1 + 0.1, f[1 + 0.1]}]}}];\)\ \), "\n", 
    \(\(gr = 
        Plot[{f[x], P[x, 1, 0.1]}, {x, 0, \[Pi]}, 
          PlotStyle \[Rule] {Red, Blue}, 
          DisplayFunction \[Rule] Identity];\)\ \), "\n", 
    \(\(Show[gr, dots, PlotRange \[Rule] {{0, \[Pi]}, {0, 1.05}}, 
        Ticks \[Rule] {{0, {0.9, "\<\>"}, 1, {1.1, "\<\>"}, \[Pi]\/2, \[Pi]}, 
            Range[0, 1, 1]}, AspectRatio \[Rule] 1/2.5, 
        DisplayFunction \[Rule] $DisplayFunction];\)\), \
"\[IndentingNewLine]", 
    \(\(Print["\<In  'red'  f[x] = \>", 
        f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(x\_0\) = \>\"", 
        x\_0\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<h = \>", h\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The secant parabola\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<In 'blue'  P[x] = \>", P[x]\ ];\)\ \)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 2.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  In a similar fashion, use ",
  Cell[BoxData[
      RowBox[{\(x\_0\), "=", 
        RowBox[{
          RowBox[{"1", " ", 
            StyleBox["and",
              FontFamily->"Times New Roman",
              FontSize->12,
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontColor->GrayLevel[0],
              FontVariations->{"Underline"->False,
              "StrikeThrough"->False}], " ", "h"}], "=", "0.01"}]}]]],
  " in formula (4) and compute the coefficients of ",
  Cell[BoxData[
      RowBox[{\((x - 1)\), " ", 
        StyleBox["and",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], " ", \(\((x - 1)\)\^2\)}]]],
  " for the secant parabola  ",
  Cell[BoxData[
      \(p \((x, 1, 0.01)\)\)]],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 2.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[TextData[{
  "Substitute   ",
  Cell[BoxData[
      RowBox[{\(x\_0\), "=", 
        RowBox[{
          RowBox[{"1", " ", 
            StyleBox["and",
              FontFamily->"Times New Roman",
              FontSize->12,
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontColor->GrayLevel[0],
              FontVariations->{"Underline"->False,
              "StrikeThrough"->False}], " ", "h"}], "=", "0.01"}]}]]],
  "  into the formulas given above and obtain \n\n\t",
  Cell[BoxData[{
      \(a\_1 = \(f[1.01]\  - \ f[0.99]\)\/\(2 \((0.01)\)\)\), 
    "\[IndentingNewLine]", 
      \(\ \ \ \ \(\(=\)\(\(\(0.84683184\)\(\ \ \)\(-\)\(\ \ \
\)\(0.83602598\)\(\ \)\)\/0.02\)\)\), "\[IndentingNewLine]", 
      \(\ \ \ \ \(\(=\)\(\ \)\(\(\(0.010805866\)\(\ \)\)\/0.02\)\)\), 
    "\[IndentingNewLine]", 
      \(a\_1 = 0.54029330\)}]],
  "  \n\nand  \n\n\t",
  Cell[BoxData[{
      \(a\_2 = \(f[1.01]\  - \ 2  f[1.0]\  + \ f[0.99]\)\/\(2 \((0.01)\)\^2\)\
\), "\[IndentingNewLine]", 
      \(\ \ \ \ \(\(=\)\(\ \)\(\(0.8468318446\  - \ 
              1.6829419696\  + \ \ 0.8360259786\)\/0.0002\)\)\), 
    "\[IndentingNewLine]", 
      \(\ \ \ \ \(\(=\)\(\ \)\(\(-0.0000841464\)\/0.0002\)\)\), 
    "\[IndentingNewLine]", 
      \(a\_2 = \(-\ 0.420732\)\)}]],
  "  \n\t\nwhich are used with the value  ",
  Cell[BoxData[
      \(a\_0 = \(f[1.0] = 0.841471\)\)]],
  "  to obtain the secant parabola:  \n\n\t",
  Cell[BoxData[
      \(p \((x, 1, 0.01)\) = 0.841471\)]],
  Cell[BoxData[
      \(\(\(\ \)\(\(+\ 0.540293\)\ \((x - 1)\)\)\)\)]],
  Cell[BoxData[
      \(\(\(\ \)\(\(-0.420732\) \((x - 1)\)\^2\)\)\)]],
  "  "
}], "Text"],

Cell[TextData[{
  "The graphs of  ",
  Cell[BoxData[
      \(y = \(f \((x)\) = sin \((x)\)\)\)]],
  "  and  ",
  Cell[BoxData[
      \(y = p \((x, 1, 0.01)\)\)]],
  " are given in Figure 2. "
}], "Text"],

Cell[BoxData[{
    \(\(x\_0\  = \ 1.0;\)\ \), "\[IndentingNewLine]", 
    \(\(h = 0.01;\)\ \), "\[IndentingNewLine]", 
    \(\(f[x_] = Sin[x];\)\), "\[IndentingNewLine]", 
    \(\(P[x_] = \ 
        f[x\_0] + \(\(f[x\_0 + h] - \ f[x\_0 - h]\)\/\(2  h\)\) \((x - 
                x\_0)\) + \(\(f[x\_0 - h]\  - 2  f[x\_0] + f[h + x\_0]\)\/\(2 
                   h\^2\)\) \((x - x\_0)\)\^2;\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<  \!\(x\_0\) = \>\"", 
        x\_0\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<   h = \>", h\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(a\_0\) = f[\!\(x\_0\)] = \>\"", 
        f[x\_0]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(a\_1\) = \!\(\(f[x\_0 + h] - f[x\_0 - h]\)\/\(2  h\)\
\) = \>\"", \(f[x\_0 + h] - \ f[x\_0 - h]\)\/\(2  h\)];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(a\_2\) = \!\(\(f[x\_0 - h] - 2  f[x\_0] + f[h + \
x\_0]\)\/\(2  h\^2\)\) = \>\"", \(f[x\_0 - h]\  - 2  f[x\_0] + f[h + \
x\_0]\)\/\(2  h\^2\)];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The secant parabola\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<P[x] = f[\!\(x\_0\)]+\!\(\(f[x\_0 + h] - f[x\_0 - h]\)\/\
\(2  h\)\)(x-\!\(x\_0\))+\!\(\(f[x\_0 - h] - 2  f[x\_0] + f[h + x\_0]\)\/\(2  \
h\^2\)\)\!\(\((x - x\_0)\)\^2\)\>\""\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<P[x] = \>", 
        f[x\_0], "\< + (\>", \(f[x\_0 + h] - \ f[x\_0 - h]\)\/\(2  h\), \
"\<)(x-(\>", 
        x\_0, "\<)) + (\>", \(f[x\_0 - h]\  - 2  f[x\_0] + f[h + x\_0]\)\/\(2 \
 h\^2\), "\<)(x-(\>", 
        x\_0, \*"\"\<)\!\(\()\^2\)\)\>\""\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<P[x] = \>", P[x]\ ];\)\ \)}], "Input"],

Cell[BoxData[{
    \(\(f[x_] = Sin[x];\)\ \ \), "\n", 
    \(\(P[x_, x0_, h_] = 
        f[x0] + \(\(\((f[h + x0] - f[x0 - h])\)\(\ \)\)\/\(2\ h\)\) \((x - 
                x0)\) + \(\(\((f[x0 - h] - 2\ f[x0] + 
                    f[h + x0])\)\(\ \)\)\/\(2\ h\^2\)\) \((x - x0)\)\^2;\)\ \
\), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\n", 
    \(\(dots = 
        Graphics[{{Magenta, PointSize[0.012], 
              Point[{1 - 0.01, f[1 - 0.01]}]}, {Magenta, PointSize[0.012], 
              Point[{1, f[1]}]}, {Magenta, PointSize[0.012], 
              Point[{1 + 0.01, f[1 + 0.01]}]}}];\)\ \), "\n", 
    \(\(gr = 
        Plot[{f[x], P[x, 1, 0.1]}, {x, 0, \[Pi]}, 
          PlotStyle \[Rule] {Red, Blue}, 
          DisplayFunction \[Rule] Identity];\)\ \), "\n", 
    \(\(Show[gr, dots, PlotRange \[Rule] {{0, \[Pi]}, {0, 1.05}}, 
        Ticks \[Rule] {{0, {0.99, "\<\>"}, 
              1, {1.01, "\<\>"}, \[Pi]\/2, \[Pi]}, Range[0, 1, 1]}, 
        AspectRatio \[Rule] 1/2.5, 
        DisplayFunction \[Rule] $DisplayFunction];\)\), \
"\[IndentingNewLine]", 
    \(\(Print["\<In  'red'  f[x] = \>", 
        f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(x\_0\) = \>\"", 
        x\_0\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<h = \>", h\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The secant parabola\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<In 'blue'  P[x] = \>", P[x]\ ];\)\ \)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Finding the Limit Numerically",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "\n\n\tThe limit of the secant polynomials is found by evaluating formula \
(4) using decreasing step sizes  ",
  Cell[BoxData[
      RowBox[{\(h = 1.0\), 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "0.3`", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "0.1`", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "0.03`", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "0.01`", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], 
        RowBox[{"0.003`", "  ", 
          StyleBox["and",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], 
          StyleBox[
            RowBox[{
              StyleBox[" ",
                FontFamily->"Times New Roman",
                FontSize->12,
                FontWeight->"Plain",
                FontSlant->"Plain",
                FontColor->GrayLevel[0],
                FontVariations->{"Underline"->False,
                "StrikeThrough"->False}], " "}]], "0.001"}]}]]],
  ". \nThe numerical results are summarized in Table 1.  \n\n\t\t",
  Cell[BoxData[
      RowBox[{GridBox[{
            {
              RowBox[{
                RowBox[{
                  StyleBox["step",
                    FontFamily->"Times New Roman",
                    FontSize->12,
                    FontWeight->"Plain",
                    FontSlant->"Plain",
                    FontColor->GrayLevel[0],
                    FontVariations->{"Underline"->False,
                    "StrikeThrough"->False}], 
                  StyleBox[" ",
                    FontFamily->"Times New Roman",
                    FontSize->12,
                    FontWeight->"Plain",
                    FontSlant->"Plain",
                    FontColor->GrayLevel[0],
                    FontVariations->{"Underline"->False,
                    "StrikeThrough"->False}], 
                  StyleBox["size",
                    FontFamily->"Times New Roman",
                    FontSize->12,
                    FontWeight->"Plain",
                    FontSlant->"Plain",
                    FontColor->GrayLevel[0],
                    FontVariations->{"Underline"->False,
                    "StrikeThrough"->False}], "  ", "h"}], 
                "\[IndentingNewLine]", 
                "\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]"}], 
              RowBox[{"                  ", 
                RowBox[{
                  RowBox[{
                    RowBox[{"p", \((x, x\_0, h)\), "   ", 
                      StyleBox["where",
                        FontFamily->"Times New Roman",
                        FontSize->12,
                        FontWeight->"Plain",
                        FontSlant->"Plain",
                        FontColor->GrayLevel[0],
                        FontVariations->{"Underline"->False,
                        "StrikeThrough"->False}], "   ", \(x\_0\)}], "=", 
                    "1"}], "\[IndentingNewLine]", 
                  "\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\[LongDash]\
\[LongDash]"}]}]},
            {
              "1.000", \(0.841471\[InvisibleSpace] + 0.454649\ \((x - 1)\) - 
                0.386822 \((x - 1)\)\^2\)},
            {
              "0.300", \(0.841471\[InvisibleSpace] + 0.532234\ \((x - 1)\) - 
                0.417589\ \((x - 1)\)\^2\)},
            {
              "0.100", \(0.841471\[InvisibleSpace] + 0.539402\ \((x - 1)\) - 
                0.420385\ \((x - 1)\)\^2\)},
            {
              "0.030", \(0.841471 + 0.540221\ \((x - 1)\) - 
                0.420704\ \((x - 1)\)\^2\)},
            {
              "0.010", \(0.841471 + 0.540293\ \((x - 1)\) - 
                0.420732\ \((x - 1)\)\^2\)},
            {
              "0.003", \(0.841471\[InvisibleSpace] + 0.540301\ \((x - 1)\) - 
                0.420735\ \((x - 1)\)\^2\)},
            {
              "0.001", \(0.841471 + 0.540302 \((x - 1)\) - 
                0.420735\ \((x - 1)\)\^2\)}
            },
          ColumnLines->True], "  "}]]],
  " \n\t\t\n\t\t",
  StyleBox["Table 1.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  " The secant parabola approximating  ",
  Cell[BoxData[
      \(y = sin \((x)\)\)]],
  ",  at  ",
  Cell[BoxData[
      \(x\_0 = 1\)]],
  "  where ",
  Cell[BoxData[
      \(h\  \[Rule] 0\)]],
  ".  "
}], "Text",
  TextAlignment->Left,
  AspectRatioFixed->False,
  ImageRegion->{{0, 1}, {0, 1}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Details",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(f[x_] = Sin[x];\)\ \ \), "\n", 
    \(\(P[x_, x0_, h_] = 
        f[x0] + \(\(\((f[h + x0] - f[x0 - h])\)\(\ \)\)\/\(2\ h\)\) \((x - 
                x0)\) + \(\(\((f[x0 - h] - 2\ f[x0] + 
                    f[h + x0])\)\(\ \)\)\/\(2\ h\^2\)\) \((x - x0)\)\^2;\)\ \
\), "\[IndentingNewLine]", 
    \(\(T[x_] = Normal[Series[f[x], {x, 1, 2}]];\)\), "\[IndentingNewLine]", 
    \(\(X = 1.0;\)\), "\[IndentingNewLine]", 
    \(\(H = {1.0, 0.3, 0.1, 0.03, 0.01, 0.003, 0.001, 0.0003, 0.0001, 
          0.00003, 0.00001};\)\), "\[IndentingNewLine]", 
    \(\(vals = {};\)\ \), "\[IndentingNewLine]", 
    \(\(For[i = 1, 
        i \[LessEqual] 
          Length[H], \(i++\), \(vals = 
            Append[\ 
              vals, {H\_\(\(\[LeftDoubleBracket]\)\(i\)\(\[RightDoubleBracket]\
\)\), P[x, 1.0, 
                  H\_\(\(\[LeftDoubleBracket]\)\(i\)\(\[RightDoubleBracket]\)\
\)]}];\)\ \ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(x\_0\) = \>\"", X\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<h = \>", H\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The secant parabolas are\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[
        NumberForm[
          TableForm[vals, 
            TableHeadings \[Rule] {None, {"\<step size h\>", \*"\"\<p(x,\!\(x\
\_0\),h)  where  \!\(x\_0\)=1\>\""}}], {15, 
            11}]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<They are converging to the tangent parabola\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<                \>", 
        NumberForm[N[T[x]], {15, 11}]];\)\)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Finding the Limit Symbolically",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "\n\n\tThe entries in the table show that the coefficients of  ",
  Cell[BoxData[
      \(p \((x, x\_0, h)\)\)]],
  "  are tending to a limit as  ",
  Cell[BoxData[
      \(h\  \[Rule] 0\)]],
  ".  Thus the \"tangent parabola\" is  \n\n(5)  \t\t",
  Cell[BoxData[
      \(P \((x, x\_0)\) = f \((x\_0)\)\)]],
  Cell[BoxData[
      \(\(\(\ \)\(\(+\ \(\(\ \)\(lim\)\)\+\(\(\ \ \)\(h\  \[Rule] \ 0\)\)\) \
\(\(f \((x\_0 + h)\)\  - \ f \((x\_0 - h)\)\)\/\(2\ h\)\) \((x - 
            x\_0)\)\)\)\)]],
  Cell[BoxData[
      \(\(\(\ \)\(\(+\ \(\(\ \)\(lim\)\)\+\(\(\ \ \)\(h\  \[Rule] \ 0\)\)\) \
\(\(f \((x\_0 + h)\)\  - \ 2\ f \((x\_0)\)\  + \ 
              f \((x\_0 - h)\)\)\/\(2\ h\^2\)\) \((x - x\_0)\)\^2\)\)\)]],
  ".  \n\nThe first limit in (5) is well known, it is  \n\n\t\t",
  Cell[BoxData[
      \(\(\(\(\ \)\(lim\)\)\+\(\(\ \ \)\(h\  \[Rule] \ 
                0\)\)\) \(f \((x\_0 + h)\)\  - \ f \((x\_0 - h)\)\)\/\(2\ h\) \
= f' \((x\_0)\)\)]],
  ". \n\nThe second limit in (5) is studied in numerical analysis, and is \
known to be ",
  Cell[BoxData[
      \(f'' \((x\_0)\)\)]],
  ", which can be verified by applying L'hopital's rule using the variable h \
as follows\n\n\t\t",
  Cell[BoxData[
      \(\(\(\(\ \)\(lim\)\)\+\(\(\ \ \)\(h\  \[Rule] \ 
              0\)\)\) \(f \((x\_0 + h)\)\  - \ 2\ f \((x\_0)\)\  + \ f \
\((x\_0 - h)\)\)\/\(2\ h\^2\)\)]],
  Cell[BoxData[
      \(\(\(\ \)\(\(=\)\(\ \)\(\(\(\(\ \)\(lim\)\)\+\(\(\ \ \)\(h\  \[Rule] \ 
                0\)\)\) \(f' \((x\_0 + h)\)\  - \ f' \((x\_0 - h)\)\)\/\(4\ h\
\)\)\)\)\)]],
  " ",
  Cell[BoxData[
      \(\(\(=\)\(\(1\/\(2!\)\) \(\(\(\ \)\(lim\)\)\+\(\(\ \ \)\(h\  \[Rule] \ 
                0\)\)\) \(f' \((x\_0 + h)\)\  - \ f' \((x\_0 - h)\)\)\/\(2  h\
\)\)\)\)]],
  Cell[BoxData[
      \(\(\(=\)\(\(1\/\(2!\)\) f'' \((x\_0)\)\)\)\)]],
  ".  "
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Exploration 1.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[TextData[{
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " can find the limit of the difference quotients and obtain the derivatives \
symbolically."
}], "Text"],

Cell[BoxData[{
    \(x =. ; Remove[x];\), "\[IndentingNewLine]", 
    \(\(Clear[f, h, x];\)\), "\[IndentingNewLine]", 
    \(\(lim1 = 
        Limit[\(f[x\_0 + h] - f[x\_0 - h]\)\/\(2  h\), h \[Rule] 0, 
          Analytic \[Rule] True];\)\ \), "\[IndentingNewLine]", 
    \(\(lim2 = 
        Limit[\(f[x\_0 + h] - 2  f[x\_0] + f[x\_0 - h]\)\/\(2\ h\^2\), 
          h \[Rule] 0, Analytic \[Rule] True];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Limit for the first derivative\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<lim\>"\+\(h \[Rule] 0\), "\< \>", \*"\"\<\!\(\(f[x\_0 + h] - \
f[x\_0 - h]\)\/\(2  h\)\) = \>\"", lim1];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\n\>", "\<Limit for the second derivative\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<lim\>"\+\(h \[Rule] 0\), "\< \>", \*"\"\<\!\(\(f[x\_0 + h] - \
2  f[x\_0] + f[x\_0 - h]\)\/\(2  h\^2\)\) = \>\"", lim2];\)\ \)}], "Input"]
}, Closed]],

Cell[TextData[{
  "Therefore, we have shown the limit of the \"secant parabolas\" to be \n\n\
(6)\t\t",
  Cell[BoxData[
      \(P \((x, x\_0)\) = f \((x\_0)\)\)]],
  Cell[BoxData[
      \(\(\(\ \)\(\(+\ f'\) \((x\_0)\) \((x - x\_0)\)\)\)\)]],
  Cell[BoxData[
      \(\(\(\ \)\(\(+\ \(1\/\(2!\)\)\) 
        f'' \((x\_0)\) \((x - x\_0)\)\^2\)\)\)]],
  ".  \n\nTherefore, the \"tangent parabola\" in (5) is revealed to be the \
Taylor polynomial of degree ",
  Cell[BoxData[
      \(n = 2\)]],
  ".  "
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Exploration 2.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell["\<\
The previous limits can be used to find the limit of the secant polynomials. \
\
\>", "Text"],

Cell[BoxData[{
    \(\(Print["\<lim\>"\+\(h \[Rule] 0\), \*"\"\< P[x,\!\(x\_0\)] = \>\""];\)\
\), "\[IndentingNewLine]", 
    \(\(Print["\<lim\>"\+\(h \[Rule] 0\), "\< \>", \
\*"\"\<f[\!\(x\_0\)]+\!\(\(f[x\_0 + h] - f[x\_0 - h]\)\/\(2  h\)\)(x-\!\(x\_0\
\))+\!\(\(f[x\_0 + h] - 2  f[x\_0] + f[x\_0 - h]\)\/\(2  h\^2\)\)\!\(\((x - x\
\_0)\)\^2\)\>\""];\)\), "\[IndentingNewLine]", 
    \(\(lim = 
        Limit[f[x\_0] + \(\(f[x\_0 + h] - f[x\_0 - h]\)\/\(2\ h\)\) \((x - 
                  x\_0)\) + \(\(f[x\_0 + h] - 2  f[x\_0] + 
                    f[x\_0 - h]\)\/\(2\ h\^2\)\) \((x - x\_0)\)\^2, 
          h \[Rule] 0, Analytic \[Rule] True];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<  = \>", lim];\)\)}], "Input"],

Cell[TextData[{
  "This is the answer we seek,\n\n\t\t",
  Cell[BoxData[
      \(P \((x, x\_0)\) = f \((x\_0)\)\)]],
  Cell[BoxData[
      \(\(\(\ \)\(\(+\ f'\) \((x\_0)\) \((x - x\_0)\)\)\)\)]],
  Cell[BoxData[
      \(\(\(\ \)\(\(+\ \(1\/\(2!\)\)\) 
        f'' \((x\_0)\) \((x - x\_0)\)\^2\)\)\)]],
  ",  \n\t\t\nbut ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " had its preferred way of writing the answer.  If you need to verify that \
it is correct, then ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " can do it."
}], "Text"],

Cell[BoxData[
    \(ExpandAll[\ 
      f[x\_0] + 
          1\/2\ \((x - 
                x\_0)\)\ \((2\ \(f'\)[x\_0] + \((x - x\_0)\)\ \(f''\)[
                    x\_0])\)\  \[Equal] \[IndentingNewLine]\ \ \ \ \ \ \ \ \ \
\ \ \ \ \ \ \ \ \ \ \ f[
            x\_0] + \(f'\)[x\_0] \((x - x\_0)\) + \(1\/\(2!\)\) \(f''\)[
              x\_0] \((x - x\_0)\)\^2\ \ ]\)], "Input"],

Cell["\<\
Of course, we could take each limit individually, then there would be no \
confusion. \
\>", "Text"],

Cell[BoxData[{
    \(x =. ; Remove[x];\), "\[IndentingNewLine]", 
    \(\(Clear[f, h, x];\)\), "\[IndentingNewLine]", 
    \(\(lim1 = 
        Limit[\(f[x\_0 + h] - f[x\_0 - h]\)\/\(2\ h\), h \[Rule] 0, 
          Analytic \[Rule] True];\)\ \), "\[IndentingNewLine]", 
    \(\(lim2 = 
        Limit[\(f[x\_0 + h] - 2  f[x\_0] + f[x\_0 - h]\)\/\(2\ h\^2\), 
          h \[Rule] 0, Analytic \[Rule] True];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Limit for the first derivative\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<lim\>"\+\(h \[Rule] 0\), "\< \>", \*"\"\<\!\(\(f[x\_0 + h] - \
f[x\_0 - h]\)\/\(2  h\)\) = \>\"", lim1];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Limit for the second derivative\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<lim\>"\+\(h \[Rule] 0\), "\< \>", \*"\"\<\!\(\(f[x\_0 + h] - \
2  f[x\_0] + f[x\_0 - h]\)\/\(2  h\^2\)\) = \>\"", 
        lim2];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<lim\>"\+\(h \[Rule] 0\), \*"\"\< P[x,\!\(x\_0\)] = \>\""];\)\
\), "\[IndentingNewLine]", 
    \(\(Print["\<lim\>"\+\(h \[Rule] 0\), "\< \>", \
\*"\"\<f[\!\(x\_0\)]+\!\(\(f[x\_0 + h] - f[x\_0 - h]\)\/\(2  h\)\)(x-\!\(x\_0\
\))+\!\(\(f[x\_0 + h] - 2  f[x\_0] + f[x\_0 - h]\)\/\(2  h\^2\)\)\!\(\((x - x\
\_0)\)\^2\)\>\""];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<  = \>", f[x\_0], "\< + \>", 
        lim1, "\<(\>", \((x - x\_0)\), "\<) + \>", 
        lim2, \((x - x\_0)\)\^2];\)\), "\[IndentingNewLine]", 
    \(Print["\<  = \>", 
      f[x\_0] + \ lim1 \((x - x\_0)\) + lim2 \((x - x\_0)\)\^2]\)}], "Input"]
}, Closed]],

Cell[TextData[{
  "For our example with  ",
  Cell[BoxData[
      \(f \((x)\) = sin \((x)\)\)]],
  ",  and  ",
  Cell[BoxData[
      \(x\_0 = 1\)]],
  ",  we have\n\n\t\t",
  Cell[BoxData[
      \(P \((x, 1)\)\  = \ sin \((1)\)\)]],
  Cell[BoxData[
      \(\(\(\ \)\(\(+\ cos\) \((1)\) \((x - 1)\)\)\)\)]],
  Cell[BoxData[
      \(\(\(\ \)\(\(-\ \(1\/\(2!\)\)\) sin \((1)\) \((x - 1)\)\^2\)\)\)]],
  "  \n\t\n\t\t",
  Cell[BoxData[
      \(P \((x, 1)\)\  = \ 0.8414709848\)]],
  Cell[BoxData[
      \(\(\(\ \)\(\(+\ 0.5403023059\) \((x - 1)\)\)\)\)]],
  Cell[BoxData[
      \(\(\(\ \)\(\(-\ 0.4207354924\)\ \((x - 1)\)\^2\)\)\)]],
  "  "
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Exploration 3.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(f[x_] = Sin[x];\)\ \), "\[IndentingNewLine]", 
    \(\(x\_0 = 1;\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<  \!\(x\_0\) = \>\"", 
        x\_0\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\), "\[IndentingNewLine]", 
    \(\(lim1 = 
        Limit[\(f[x\_0 + h] - f[x\_0 - h]\)\/\(2\ h\), h \[Rule] 0, 
          Analytic \[Rule] True];\)\ \), "\[IndentingNewLine]", 
    \(\(lim2 = 
        Limit[\(f[x\_0 + h] - 2  f[x\_0] + f[x\_0 - h]\)\/\(2\ h\^2\), 
          h \[Rule] 0, Analytic \[Rule] True];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Limit for the first derivative\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<lim\>"\+\(h \[Rule] 0\), "\< \>", \*"\"\<\!\(\(f[x\_0 + h] - \
f[x\_0 - h]\)\/\(2  h\)\) = \>\"", lim1];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Limit for the second derivative\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<lim\>"\+\(h \[Rule] 0\), "\< \>", \*"\"\<\!\(\(f[x\_0 + h] - \
2  f[x\_0] + f[x\_0 - h]\)\/\(2  h\^2\)\) = \>\"", 
        lim2];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<lim\>"\+\(h \[Rule] 0\), \*"\"\< P[x,\!\(x\_0\)] = \>\""];\)\
\), "\[IndentingNewLine]", 
    \(\(Print["\<lim\>"\+\(h \[Rule] 0\), "\< \>", \
\*"\"\<f[\!\(x\_0\)]+\!\(\(f[x\_0 + h] - f[x\_0 - h]\)\/\(2  h\)\)(x-\!\(x\_0\
\))+\!\(\(f[x\_0 + h] - 2  f[x\_0] + f[x\_0 - h]\)\/\(2  h\^2\)\)\!\(\((x - x\
\_0)\)\^2\)\>\""];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<  = \>", f[x\_0], "\< + (\>", 
        lim1, "\<)(\>", \((x - x\_0)\), "\<) + (\>", 
        lim2\ , "\<)\>", \((x - x\_0)\)\^2];\)\), "\[IndentingNewLine]", 
    \(Print["\<  = \>", 
      N[f[x\_0] + \ lim1 \((x - x\_0)\) + 
          lim2 \((x - x\_0)\)\^2]]\)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["The Lagrange Connection",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "\n\n\tIn numerical analysis, the ",
  ButtonBox["Lagrange interpolation polynomial",
    ButtonData:>{
      URL[ 
      "http://mathworld.wolfram.com/LagrangeInterpolatingPolynomial.html"], 
      None},
    ButtonStyle->"Hyperlink"],
  " is constructed, and it can be shown to be equivalent to the formula in \
(4), however the hand computations are messy.  If a computer algebra system, \
such as ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " is used, then it is easy to verify that the two forms are equivalent.  \
First, enter the formula for the Lagrange polynomial"
}], "Text"],

Cell[BoxData[{
    \(x =. ; Remove[x]; Clear[f, x];\), "\[IndentingNewLine]", 
    \(\(L[
          x_] = \(\(\((x - x\_0)\)\ \((x - x\_0 - h)\)\)\/\(2\ h\^2\)\) 
            f[x\_0 - 
                h] - \(\(\((x - x\_0 + h)\)\ \((x - x\_0 - h)\)\)\/h\^2\) 
            f[x\_0] + \(\(\((x - x\_0 + h)\) \((x - 
                      x\_0)\)\(\ \ \)\)\/\(2\ h\^2\)\) 
            f[h + x\_0];\)\ \)}], "Input"],

Cell["Then enter formula (4)", "Text"],

Cell[BoxData[{
    \(\(Clear[P, x];\)\), "\[IndentingNewLine]", 
    \(\(P[x_] = \ 
        f[x\_0] + \(\(f[x\_0 + h] - \ f[x\_0 - h]\)\/\(2  h\)\) \((x - 
                x\_0)\) + \(\(f[x\_0 - h]\  - 2  f[x\_0] + f[h + x\_0]\)\/\(2 
                   h\^2\)\) \((x - x\_0)\)\^2;\)\ \)}], "Input"],

Cell["\<\
The above two formulas can be expanded and shown to be equal. \
\>", "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Details",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[TextData[{
  "The following ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " command will expand  ",
  StyleBox["L[x]",
    FontFamily->"Courier New"],
  ". "
}], "Text"],

Cell[BoxData[
    \(\(\(ExpandAll[L[x]]\)\(\ \)\)\)], "Input"],

Cell[TextData[{
  "If the command  ",
  Cell[BoxData[
      \(ExpandAll[\ P[x]\ ]\)], "Input"],
  " is issued, the result will be identical.  "
}], "Text"],

Cell[BoxData[
    \(\(\(ExpandAll[L[x]]\)\(\ \)\)\)], "Input"],

Cell[TextData[{
  "The following ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " command can be used to determine if the two symbolic quantities are \
equivalent and will return either a Boolean expression of \"true\" or \
\"false.\"  Let's see what happens."
}], "Text"],

Cell[BoxData[
    \(\(\(ExpandAll[\ L[x] \[Equal] P[x]\ \ ]\)\(\ \)\)\)], "Input"]
}, Closed]],

Cell["\<\
Therefore, formula (4) is equivalent to Lagrange interpolation, hence the \
Lagrange form of the remainder applies too.\
\>", "Text"],

Cell[TextData[{
  StyleBox["The Remainder Term",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "\n\n\tIn numerical analysis, the remainder term for a Lagrange \
interpolation polynomial of degree  ",
  Cell[BoxData[
      \(n = 2\)]],
  ",  is known to be \n\n\t\t",
  Cell[BoxData[
      RowBox[{\(R \((x, x\_0, h)\)\), " ", "=", " ", 
        RowBox[{\(\(\((x - x\_0 + h)\) \((x - x\_0)\)\ \((x - x\_0 - 
                    h)\)\)\/\(3!\)\), 
          SuperscriptBox["f", 
            TagBox[\((3)\),
              Derivative],
            MultilineFunction->None], \((c)\)}]}]]],
  ",\n\nwhere ",
  Cell[BoxData[
      \(c\)]],
  " depends on ",
  Cell[BoxData[
      \(x\)]],
  " and lies somewhere between  ",
  Cell[BoxData[
      RowBox[{\(x\_0\), "-", 
        RowBox[{"h", 
          StyleBox["   ",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], 
          StyleBox["and",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], 
          StyleBox[
            RowBox[{
              StyleBox[" ",
                FontFamily->"Times New Roman",
                FontSize->12,
                FontWeight->"Plain",
                FontSlant->"Plain",
                FontColor->GrayLevel[0],
                FontVariations->{"Underline"->False,
                "StrikeThrough"->False}], " "}]], \(x\_0\)}], "+", "h"}]]],
  ".  "
}], "Text"],

Cell[TextData[{
  StyleBox["Proof  ",
    FontFamily->"New Century Schlbk",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  StyleBox[ButtonBox["Lagrange Polynomials",
    ButtonData:>{
      URL[ 
      "http://www.ecs.fullerton.edu/~mathews/n2003/LagrangePolyProof.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox[ButtonBox["Lagrange Polynomials",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/LagrangePolyProof.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  "  "
}], "Text"],

Cell[TextData[{
  "\tWhen we take the limit of   ",
  Cell[BoxData[
      \(R \((x, x\_0, h)\)\)]],
  "  as  ",
  Cell[BoxData[
      \(h \[Rule] 0\)]],
  "  it is plain to see that we get \n\n\t\t",
  Cell[BoxData[
      RowBox[{\(R \((x, x\_0)\)\), " ", "=", " ", 
        RowBox[{\(\(\((x - x\_0)\)\(\ \)\)\^3\/\(3!\)\), 
          SuperscriptBox["f", 
            TagBox[\((3)\),
              Derivative],
            MultilineFunction->None], \((c)\)}]}]]],
  ",\n\nwhich is the remainder term for the ",
  ButtonBox["Taylor polynomial",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/TaylorSeries.html"], None},
    ButtonStyle->"Hyperlink"],
  " of degree  ",
  Cell[BoxData[
      \(n = 2\)]],
  ".  This cinches the fact that the limit of the secant polynomial is the \
tangent polynomial."
}], "Text"],

Cell[TextData[{
  StyleBox["Proof  ",
    FontFamily->"New Century Schlbk",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  StyleBox[ButtonBox["Maclaurin and Taylor Polynomials",
    ButtonData:>{
      URL[ 
      "http://www.ecs.fullerton.edu/~mathews/n2003/TaylorPolyProof.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox[ButtonBox["Maclaurin and Taylor Polynomials",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/TaylorPolyProof.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  "  "
}], "Text"],

Cell[TextData[{
  StyleBox["Conclusion",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "\n\n\tThe purpose of this article has been to show that the Taylor \
polynomial is the limiting case of a sequence of interpolating polynomials.  \
The development has been to first show graphical convergence, which is quite \
rapid.  This can be illustrated in the classroom by using graphical \
calculators or with computer software such as ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " or Maple.  Then a selected set of interpolating polynomials is tabulated, \
which is a new twist to the idea of limit, it involves the concept of \
convergence of a sequence of functions.   Finally, the power of calculus is \
illustrated by discovering that the limiting coefficients are ",
  Cell[BoxData[
      \(\(\(\ \)\(f' \((x\_0)\)\)\)\)]],
  " and ",
  Cell[BoxData[
      \(\(1\/\(2!\)\) f'' \((x\_0)\)\)]],
  ".  Then one recognizes that the \"tangent polynomial\" is a Taylor \
polynomial approximation.  Moreover, we have motivated the \"what if\" \
exploration by showing what happens to \"the secant parabola\" with \
interpolation points ",
  Cell[BoxData[
      \(\((x\_0, f \((x\_0)\))\)\)]],
  ", ",
  Cell[BoxData[
      \(\((x\_0 - h, f \((x\_0 - h)\))\)\)]],
  ", and ",
  Cell[BoxData[
      \(\((x\_0 + h, f \((x\_0 + h)\))\)\)]],
  " when the points \"collide\" at the single point ",
  Cell[BoxData[
      \(\((x\_0, f \((x\_0)\))\)\)]],
  ".  Thus the mystery behind the Taylor polynomial being based on a single \
point is revealed.  It is hoped that teachers reading this article will gain \
insight to how to use technology in teaching mathematics.  Higher degree \
polynomials have been investigated by the authors in the article ",
  StyleBox[" \"Investigation of Tangent Polynomials with a Computer Algebra \
System \", and some of the ideas are given below. ",
    FontFamily->"New Century Schlbk"]
}], "Text"],

Cell[TextData[{
  StyleBox["The Tangent Cubic Polynomial",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["\n",
    FontFamily->"Times New Roman",
    FontWeight->"Bold"],
  StyleBox["\n\tA natural question to ask now is: \"What about polynomial \
approximation of higher degrees?\"  Exploration of the Newton polynomials \
involves complicated symbolic manipulations and is prone to error when \
carried out with hand computations.  These derivations can become instructive \
and enjoyable when they are performed with computer algebra software.  Let",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\(\(\ \)\(\(P\_3\) \((x)\)\)\)\)]],
  StyleBox[" be the ",
    FontFamily->"Times New Roman"],
  ButtonBox["Newton polynomial",
    ButtonData:>{
      URL[ 
      "http://mathworld.wolfram.com/\
NewtonsDividedDifferenceInterpolationFormula.html"], None},
    ButtonStyle->"Hyperlink"],
  StyleBox[" that passes through the four points  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{"(", 
        RowBox[{\(x\_k\), 
          StyleBox[",",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], \(f \((x\_k)\)\)}], ")"}]]],
  StyleBox["  for  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{\(k = 0\), 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "1", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "2", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "3", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "4"}]]],
  StyleBox[".  It may be shown that the Taylor polynomial ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\(\(\ \)\(\(T\_3\) \((x)\)\)\)\)]],
  " ",
  StyleBox["is the limit of  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\(P\_3\) \((x)\)\)]],
  "  as  ",
  Cell[BoxData[
      \(h \[Rule] 0\)]],
  ".",
  StyleBox["  We shall use the power of ",
    FontFamily->"Times New Roman"],
  StyleBox["Mathematica",
    FontFamily->"Times New Roman",
    FontSlant->"Italic"],
  StyleBox[" to assist us with this derivation.  Begin by setting  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y \((x)\)\)]],
  StyleBox["  equal to the general form of a Newton polynomial of degree ",
    FontFamily->"Times New Roman"],
  StyleBox["n",
    FontFamily->"Courier New"],
  StyleBox[" by issuing the following ",
    FontFamily->"Times New Roman"],
  StyleBox["Mathematica",
    FontFamily->"Times New Roman",
    FontSlant->"Italic"],
  StyleBox[" commands:",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[BoxData[{
    \(\(n\  = \ 3;\)\ \), "\n", 
    \(\(Clear[f, h, i, j, x, X, y];\)\ \), "\[IndentingNewLine]", 
    \(\(vars = Table[a\_j, {j, 0, n}];\)\ \), "\n", 
    \(\(eqns = Table[0, {n + 1}];\)\), "\[IndentingNewLine]", 
    \(\(y[
          X_] = \[Sum]\+\(j = 0\)\%n\((\ 
            a\_j\ \(\[Product]\+\(i = 0\)\%\(j - 1\)\((X - x\_0 - 
                    h\ i)\)\)\ )\);\)\), "\[IndentingNewLine]", 
    \(\(Print["\<y[x] = \>", y[x]\ ];\)\)}], "Input"],

Cell[TextData[StyleBox["Now form the set of four equations that force the \
polynomial to pass through the four equally-spaced points.  Notice that this \
is a lower-triangular system of linear equations. ",
  FontFamily->"Times New Roman"]], "Text"],

Cell[BoxData[{
    StyleBox[\(\(n\  = \ 3;\)\(\ \ \)\),
      FontFamily->"Courier",
      FontWeight->"Bold"], "\[IndentingNewLine]", 
    RowBox[{\(Do[\ 
          eqns\_\(\(\[LeftDoubleBracket]\)\(k + \
1\)\(\[RightDoubleBracket]\)\)\  = \ 
            y[x\_0 + k*h]\  \[Equal] \ f[x\_0 + k*h], {k, 0, n}\ ];\), 
      " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\ TableForm[eqns]\ ];\), " "}]}], "Input"],

Cell[TextData[{
  StyleBox["Then solve this lower triangular linear system, and construct the \
polynomial  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\(P\_3\) \((x)\)\)]],
  StyleBox[",  and store it as the function  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(P \((x, x\_0, h)\)\)]],
  StyleBox[".  ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[BoxData[{
    RowBox[{\(solset\  = \ Solve[eqns, vars];\), " "}], "\[IndentingNewLine]",
   
    RowBox[{
      RowBox[{
        StyleBox[\(P[X_, x0_, h_]\),
          FontFamily->"Courier",
          FontWeight->"Bold"], 
        StyleBox[" ",
          FontFamily->"Courier",
          FontWeight->"Bold"], 
        StyleBox["=",
          FontFamily->"Courier",
          FontWeight->"Bold"], 
        StyleBox[" ",
          FontFamily->"Courier",
          FontWeight->"Bold"], 
        RowBox[{
          StyleBox["ReplaceAll",
            FontFamily->"Courier",
            FontWeight->"Bold"], 
          StyleBox["[",
            FontFamily->"Courier",
            FontWeight->"Bold"], 
          StyleBox[" ",
            FontFamily->"Courier",
            FontWeight->"Bold"], 
          RowBox[{
            RowBox[{
              StyleBox[
                RowBox[{"R", 
                  StyleBox["eplaceAll",
                    FontFamily->"Courier",
                    FontWeight->"Bold"]}]], 
              StyleBox["[",
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              
              StyleBox[\(y[X], 
                solset\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\
\)\)\),
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["]",
                FontFamily->"Courier",
                FontWeight->"Bold"]}], 
            StyleBox[",",
              FontFamily->"Courier",
              FontWeight->"Bold"], \(x\_0 \[Rule] x0\)}], 
          StyleBox["]",
            FontFamily->"Courier",
            FontWeight->"Bold"]}]}], 
      StyleBox[" ",
        FontFamily->"Courier",
        FontWeight->"Bold"], 
      StyleBox[";",
        FontFamily->"Courier",
        FontWeight->"Bold"]}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<P[x,\!\(x\_0\),h] = \>\"", P[x, x\_0, h]];\), 
      " "}]}], "Input"],

Cell[TextData[StyleBox["Finally, compute the limit to verify that our \
conjecture was correct: ",
  FontFamily->"Times New Roman"]], "Text"],

Cell[BoxData[{
    \(\(Z = 
        Limit[\ P[X, x0, h], h \[Rule] 0, 
          Analytic \[Rule] True];\)\ \), "\[IndentingNewLine]", 
    \(\(Z\  = 
        Expand[\ ReplaceAll[Z, 
            X \[Rule] z + x0]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Clear[T];\)\ \), "\[IndentingNewLine]", 
    \(\(T[X_, x0_]\  = \ 
        ReplaceAll[Z, z \[Rule] X - x0];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<T[x] = \>", T[x, x\_0]];\)\ \)}], "Input"],

Cell[TextData[{
  StyleBox["Eureka!  The limiting case of  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\(P\_3\) \((x)\)\)]],
  "  ",
  StyleBox["as",
    FontFamily->"Times New Roman"],
  "  ",
  Cell[BoxData[
      \(h \[Rule] 0\)]],
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  StyleBox["is the Taylor polynomial ",
    FontFamily->"Times New Roman"],
  StyleBox[" ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\(\(\ \)\(\(T\_3\) \((x)\)\)\)\)]],
  StyleBox[".  Observe that the option  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(Analytic \[Rule] True\)]],
  StyleBox["  must be used in ",
    FontFamily->"Times New Roman"],
  StyleBox["Mathematica's",
    FontFamily->"Times New Roman",
    FontSlant->"Italic"],
  StyleBox[" limit procedure.  This is a mathematicians way to tell the \
computer that  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(f \((x)\)\)]],
  StyleBox["  is \"sufficiently differentiable.\"",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["Example 3.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox["  Use the function  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(f \((x)\)\  = \ \(\[ExponentialE]\^\(x/4\)\) Cos \((x)\)\)]],
  StyleBox["  and the point  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(x\_0 = 0\)]],
  "  ",
  StyleBox["and draw the graphs of Newton cubic polynomials with",
    FontFamily->"Times New Roman"],
  StyleBox[" ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{"h", "=", 
        RowBox[{
          RowBox[{\(1\/4\), "  ", 
            StyleBox["and",
              FontFamily->"Times New Roman",
              FontSize->12,
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontColor->GrayLevel[0],
              FontVariations->{"Underline"->False,
              "StrikeThrough"->False}], "  ", "h"}], "=", \(1\/16\)}]}]]],
  " ",
  StyleBox["and compare them with the Taylor polynomial.  ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 3.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(f[x_]\  = \ \(\[ExponentialE]\^\(x/4\)\) 
          Cos[x];\)\ \), "\[IndentingNewLine]", 
    \(\(T[x_] = 
        ReplaceAll[T[x, x\_0], 
          x\_0 \[Rule] 0];\)\ \), "\[IndentingNewLine]", 
    \(\(S[x]\  = \ 
        Normal[Series[f[x], {x, 0, n}]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<Expansions about \!\(x\_0\) = 0\>\""];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<The secant cubic\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<P[x,0,h] = \>", P[x, 0, h]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The tangent cubic\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<T[x] = \>", T[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The Taylor polynomial\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<S[x] = \>", S[x]\ ];\)\ \)}], "Input"],

Cell[TextData[{
  StyleBox["We can graph the secant polynomials corresponding to ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{"h", "=", 
        RowBox[{
          RowBox[{\(1\/4\), "  ", 
            StyleBox["and",
              FontFamily->"Times New Roman",
              FontSize->12,
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontColor->GrayLevel[0],
              FontVariations->{"Underline"->False,
              "StrikeThrough"->False}], "  ", "h"}], "=", \(1\/16\)}]}]]],
  " and the Taylor polynomial. "
}], "Text"],

Cell[BoxData[{
    \(\(Needs["\<Graphics`Colors`\>"];\)\), "\[IndentingNewLine]", 
    \(\(gr1 = 
        Plot[{f[x], P[x, 0, 1\/4]}, {x, \(-4.7\), 3.5}, 
          PlotRange \[Rule] {\(-3.0\), 1.2}, 
          PlotStyle \[Rule] {Magenta, Blue}, 
          Ticks \[Rule] {Range[\(-4\), 3, 1], 
              Range[\(-3\), 3, 1]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<     f[x] = \>", f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<       \!\(x\_0\) = \>\"", 
        0\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<        h = \>", 1\/4\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<P[x,0,\!\(1\/4\)] = \>\"", 
        P[x, 0, 1.0\/4]];\)\ \)}], "Input"],

Cell[BoxData[{
    \(\(gr2 = 
        Plot[{f[x], P[x, 0, 1\/16]}, {x, \(-4.7\), 3.5}, 
          PlotRange \[Rule] {\(-3.0\), 1.2}, 
          PlotStyle \[Rule] {Magenta, Cyan}, 
          Ticks \[Rule] {Range[\(-4\), 3, 1], 
              Range[\(-3\), 3, 1]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<      f[x] = \>", f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<        \!\(x\_0\) = \>\"", 
        0\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<         h = \>", 1\/16\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<P[x,0,\!\(1\/16\)] = \>\"", 
        P[x, 0, 1.0\/16]];\)\ \)}], "Input"],

Cell[TextData[{
  StyleBox["The next figure shows a comparison of the Taylor polynomial T",
    FontFamily->"Times New Roman"],
  StyleBox["3",
    FontFamily->"Times New Roman",
    FontSize->10,
    FontVariations->{"CompatibilityType"->"Subscript"}],
  StyleBox["(x) and f(x):",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[BoxData[{
    \(\(Needs["\<Graphics`Colors`\>"];\)\), "\[IndentingNewLine]", 
    \(\(grf = 
        Plot[{f[x], T[x]}, {x, \(-4.7\), 3.5}, 
          PlotRange \[Rule] {\(-3.0\), 1.2}, 
          PlotStyle \[Rule] {Magenta, Green}, 
          Ticks \[Rule] {Range[\(-4\), 3, 1], 
              Range[\(-3\), 3, 1]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<  \!\(x\_0\) = \>\"", 
        0\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<T[x] = \>", T[x]\ ];\)\ \)}], "Input"],

Cell[BoxData[{
    \(\(Show[gr1, gr2, grf];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<      f[x] = \>", f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<        \!\(x\_0\) = \>\"", 
        0\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\< P[x,0,\!\(1\/4\)] = \>\"", 
        P[x, 0, 1.0\/4]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<P[x,0,\!\(1\/16\)] = \>\"", 
        P[x, 0, 1.0\/16]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<      T[x] = \>", T[x]\ ];\)\ \)}], "Input"]
}, Closed]],

Cell[TextData[StyleBox["Various Scenarios and Animations for the Tangent \
Parabola.",
  FontSize->14,
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[TextData[{
  StyleBox["Example 4.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox["  Use the function  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(f \((x)\)\  = \ \(\[ExponentialE]\^\(x/4\)\) Cos \((x)\)\)]],
  StyleBox["  and the point  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(x\_0 = 0\)]],
  "  ",
  StyleBox["and plot a sequence of Newton cubic polynomials converging to the \
Taylor polynomial.  ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 4.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(f[x_]\  = \ \(\[ExponentialE]\^\(x/4\)\) 
          Cos[x];\)\ \), "\[IndentingNewLine]", 
    \(\(T[x_] = 
        ReplaceAll[T[x, x\_0], 
          x\_0 \[Rule] 0];\)\ \), "\[IndentingNewLine]", 
    \(\(S[x]\  = \ 
        Normal[Series[f[x], {x, 0, n}]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<Expansions about \!\(x\_0\) = 0\>\""];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<The secant cubic\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<P[x,0,h] = \>", P[x, 0, h]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The tangent cubic\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<T[x] = \>", T[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The Taylor polynomial\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<S[x] = \>", S[x]\ ];\)\ \)}], "Input"],

Cell[BoxData[{
    \(\(Needs["\<Graphics`Colors`\>"];\)\), "\[IndentingNewLine]", 
    \(\(For[i = 1, 
        i \[LessEqual] 
          12, \(i++\), \[IndentingNewLine]\(Plot[{f[x], T[x], 
              P[x, 0, \((0.7)\)\^i]}, {x, \(-4.7\), 3.5}, 
            PlotRange \[Rule] {\(-3.0\), 1.2}, 
            PlotStyle \[Rule] {Magenta, Green, Blue}, 
            Ticks \[Rule] {Range[\(-4\), 3, 1], 
                Range[\(-3\), 3, 1]}];\)\ ];\)\ \)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Tangent Polynomials of Higher Degree",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["\n",
    FontFamily->"Times New Roman",
    FontWeight->"Bold"],
  StyleBox["\n\tConsider the seven points ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\((x\_k, f \((x\_k)\))\)\)]],
  StyleBox["  for  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(k = 0, 1, 2, 3, 4, 5, 6\)]],
  StyleBox[".  We can construct the Newton polynomial of degree ",
    FontFamily->"Times New Roman"],
  StyleBox["6",
    FontFamily->"Courier New"],
  StyleBox[" and take the limit to obtain the Taylor polynomial. ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[BoxData[{
    \(\(n\  = \ 6;\)\ \), "\n", 
    \(\(Clear[f, h, i, j, x, X, y];\)\ \), "\[IndentingNewLine]", 
    \(\(vars = Table[a\_j, {j, 0, n}];\)\ \), "\n", 
    \(\(eqns = Table[0, {n + 1}];\)\), "\[IndentingNewLine]", 
    \(\(y[
          X_] = \[Sum]\+\(j = 0\)\%n\((\ 
            a\_j\ \(\[Product]\+\(i = 0\)\%\(j - 1\)\((X - x\_0 - 
                    h\ i)\)\)\ )\);\)\), "\[IndentingNewLine]", 
    \(\(Print["\<y[x] = \>", y[x]\ ];\)\)}], "Input"],

Cell[TextData[StyleBox["Now form the set of seven equations that force the \
polynomial to pass through the four equally-spaced points.  ",
  FontFamily->"Times New Roman"]], "Text"],

Cell[BoxData[{
    StyleBox[\(\(n\  = \ 6;\)\(\ \ \)\),
      FontFamily->"Courier",
      FontWeight->"Bold"], "\[IndentingNewLine]", 
    RowBox[{\(Do[\ 
          eqns\_\(\(\[LeftDoubleBracket]\)\(k + \
1\)\(\[RightDoubleBracket]\)\)\  = \ 
            y[x\_0 + k*h]\  \[Equal] \ f[x\_0 + k*h], {k, 0, n}\ ];\), 
      " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\ TableForm[eqns]\ ];\), " "}]}], "Input"],

Cell[TextData[{
  StyleBox["Then solve this lower triangular system, and construct the \
polynomial  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\(P\_6\) \((x)\)\)]],
  StyleBox[",  and store it as the function  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(P \((x, x\_0, h)\)\)]],
  StyleBox[".  ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[BoxData[{
    RowBox[{\(solset\  = \ Solve[eqns, vars];\), " "}], "\[IndentingNewLine]",
   
    RowBox[{
      RowBox[{
        StyleBox[\(P[X_, x0_, h_]\),
          FontFamily->"Courier",
          FontWeight->"Bold"], 
        StyleBox[" ",
          FontFamily->"Courier",
          FontWeight->"Bold"], 
        StyleBox["=",
          FontFamily->"Courier",
          FontWeight->"Bold"], 
        StyleBox[" ",
          FontFamily->"Courier",
          FontWeight->"Bold"], 
        RowBox[{
          StyleBox["ReplaceAll",
            FontFamily->"Courier",
            FontWeight->"Bold"], 
          StyleBox["[",
            FontFamily->"Courier",
            FontWeight->"Bold"], 
          StyleBox[" ",
            FontFamily->"Courier",
            FontWeight->"Bold"], 
          RowBox[{
            RowBox[{
              StyleBox[
                RowBox[{"R", 
                  StyleBox["eplaceAll",
                    FontFamily->"Courier",
                    FontWeight->"Bold"]}]], 
              StyleBox["[",
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              
              StyleBox[\(y[X], 
                solset\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\
\)\)\),
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["]",
                FontFamily->"Courier",
                FontWeight->"Bold"]}], 
            StyleBox[",",
              FontFamily->"Courier",
              FontWeight->"Bold"], \(x\_0 \[Rule] x0\)}], 
          StyleBox["]",
            FontFamily->"Courier",
            FontWeight->"Bold"]}]}], 
      StyleBox[" ",
        FontFamily->"Courier",
        FontWeight->"Bold"], 
      StyleBox[";",
        FontFamily->"Courier",
        FontWeight->"Bold"]}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<P[x,\!\(x\_0\),h] = \>\"", P[x, x\_0, h]];\), 
      " "}]}], "Input"],

Cell[TextData[StyleBox["Finally, compute the limit and see that it is the \
Taylor polynomial.",
  FontFamily->"Times New Roman"]], "Text"],

Cell[BoxData[{
    \(\(Z = 
        Limit[\ P[X, x0, h], h \[Rule] 0, 
          Analytic \[Rule] True];\)\ \), "\[IndentingNewLine]", 
    \(\(Z\  = 
        Expand[\ ReplaceAll[Z, 
            X \[Rule] z + x0]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Clear[T];\)\ \), "\[IndentingNewLine]", 
    \(\(T[X_, x0_]\  = \ 
        ReplaceAll[Z, z \[Rule] X - x0];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<T[x] = \>", T[x, x\_0]];\)\ \)}], "Input"],

Cell[TextData[{
  StyleBox["Example 5.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox["  Use the function  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(f \((x)\)\  = \ \(\[ExponentialE]\^\(x/4\)\) Cos \((x)\)\)]],
  StyleBox["  and the point  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(x\_0 = 0\)]],
  "  ",
  StyleBox["and plot a sequence of Newton polynomials of degree ",
    FontFamily->"Times New Roman"],
  StyleBox["6",
    FontFamily->"Courier New"],
  StyleBox[" converging to the Taylor polynomial.  ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 5.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(f[x_]\  = \ \(\[ExponentialE]\^\(x/4\)\) 
          Cos[x];\)\ \), "\[IndentingNewLine]", 
    \(\(T[x_] = 
        ReplaceAll[T[x, x\_0], 
          x\_0 \[Rule] 0];\)\ \), "\[IndentingNewLine]", 
    \(\(S[x]\  = \ 
        Normal[Series[f[x], {x, 0, n}]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<Expansions about \!\(x\_0\) = 0\>\""];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<The secant cubic\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<P[x,0,h] = \>", P[x, 0, h]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The tangent cubic\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<T[x] = \>", T[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The Taylor polynomial\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<S[x] = \>", S[x]\ ];\)\ \)}], "Input"],

Cell[BoxData[{
    \(\(Needs["\<Graphics`Colors`\>"];\)\), "\[IndentingNewLine]", 
    \(\(For[i = 1, 
        i \[LessEqual] 
          12, \(i++\), \[IndentingNewLine]\(Plot[{f[x], T[x], 
              P[x, 0, \((0.7)\)\^i]}, {x, \(-4.7\), 3.5}, 
            PlotRange \[Rule] {\(-3.0\), 1.2}, 
            PlotStyle \[Rule] {Magenta, Green, Blue}, 
            Ticks \[Rule] {Range[\(-4\), 3, 1], 
                Range[\(-3\), 3, 1]}];\)\ ];\)\ \)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["References",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "\n\n1.  ",
  StyleBox["Russell Howell and John Mathews,",
    FontFamily->"New Century Schlbk"],
  " \"",
  ButtonBox["The Tangent Parabola",
    ButtonData:>{
      URL[ 
      "http://math.fullerton.edu/mathews/articles/2001TangentParabola.pdf"], 
      None},
    ButtonStyle->"Hyperlink"],
  ",\" ",
  StyleBox["The AMATYC Review, Vol. 23, No. 1, Fall 2001, pp. 25-32. ",
    TextAlignment->Center,
    AspectRatioFixed->False,
    ImageRegion->{{0, 1}, {0, 1}},
    FontFamily->"Times New Roman"],
  "\n2.  ",
  StyleBox["Russell Howell and John Mathews, \"",
    FontFamily->"New Century Schlbk"],
  ButtonBox["Investigation of Tangent Polynomials with a Computer Algebra \
System",
    ButtonData:>{
      URL[ 
      "http://math.fullerton.edu/mathews/articles/1992TangentPolynomials.pdf"]\
, None},
    ButtonStyle->"Hyperlink"],
  StyleBox[", \" The AMATYC Review, Vol. 14, No. 1, Fall 1992, pp. 20-27. \n\
3.  Kurtis Fink and ",
    FontFamily->"New Century Schlbk"],
  "John Mathews",
  StyleBox[", ",
    FontFamily->"New York"],
  ButtonBox["Numerical Methods Using Matlab",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/books/nbook.htm"], None},
    ButtonStyle->"Hyperlink"],
  StyleBox[", 4",
    FontFamily->"Times New Roman"],
  StyleBox["th",
    FontFamily->"Times New Roman",
    FontVariations->{"CompatibilityType"->"Superscript"}],
  StyleBox[" Edition, ISBN 0-13-065248-2, Prentice-Hall Pub. Inc., ",
    FontFamily->"Times New Roman"],
  StyleBox["Upper Saddle River, NJ, 2004.  ",
    FontFamily->"New York"]
}], "Text"],

Cell[TextData[StyleBox["Research Experience for Undergraduates",
  FontSize->14,
  FontWeight->"Bold",
  FontColor->RGBColor[0.500008, 0, 0.996109]]], "Text"],

Cell[TextData[{
  StyleBox[ButtonBox["Lagrange Polynomials",
    ButtonData:>{
      URL[ 
      "http://www.ecs.fullerton.edu/~mathews/n2003/LagrangePolyBib.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox[ButtonBox["Lagrange Polynomials",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/LagrangePolyBib.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  "  Internet hyperlinks to web sites and a bibliography of articles.  "
}], "Text"],

Cell[TextData[{
  StyleBox[ButtonBox["Newton Polynomials",
    ButtonData:>{
      URL[ "http://www.ecs.fullerton.edu/~mathews/n2003/NewtonPolyBib.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox[ButtonBox["Newton Polynomials",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/NewtonPolyBib.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  "  Internet hyperlinks to web sites and a bibliography of articles.  "
}], "Text"],

Cell[TextData[{
  StyleBox[ButtonBox["Maclaurin and Taylor Polynomials",
    ButtonData:>{
      URL[ "http://www.ecs.fullerton.edu/~mathews/n2003/TaylorPolyBib.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox[ButtonBox["Maclaurin and Taylor Polynomials",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/TaylorPolyBib.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  "  Internet hyperlinks to web sites and a bibliography of articles.  "
}], "Text"],

Cell[TextData[StyleBox[ButtonBox["Return to the Numerical Analysis Project",
  ButtonData:>{
    URL[ "http://math.fullerton.edu/mathews/numerical.html"], None},
  ButtonStyle->"Hyperlink"],
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1],
  FontVariations->{"Underline"->True}]], "Text"]
},
FrontEndVersion->"5.2 for Microsoft Windows",
ScreenRectangle->{{0, 1024}, {0, 685}},
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{1003, 629},
WindowMargins->{{4, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PageHeaders->{{Cell[ 
        TextData[ {
          CounterBox[ "Page"]}], "PageNumber"], Inherited, Cell[ 
        TextData[ {
          ValueBox[ "FileName"]}], "Header"]}, {None, Inherited, None}},
PrintingOptions->{"PrintingMargins"->{{54, 54}, {36, 36}},
"FirstPageHeader"->False},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, -1}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
Magnification->1
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 173, 4, 35, "Text"],
Cell[1952, 59, 1464, 49, 99, "Text"]
}, Closed]],
Cell[3431, 111, 540, 16, 108, "Text"],
Cell[3974, 129, 952, 29, 90, "Text"],
Cell[4929, 160, 2945, 96, 570, "Text"],
Cell[7877, 258, 858, 30, 71, "Text"],
Cell[8738, 290, 22056, 505, 198, "Text"],
Cell[30797, 797, 261, 7, 33, "Text"],
Cell[31061, 806, 21976, 504, 217, "Text"],
Cell[53040, 1312, 253, 6, 33, "Text"],
Cell[53296, 1320, 21853, 495, 198, "Text"],
Cell[75152, 1817, 154, 5, 71, "Text"],
Cell[75309, 1824, 2438, 75, 356, "Text"],
Cell[77750, 1901, 1137, 30, 261, "Text"],
Cell[78890, 1933, 1801, 55, 292, "Text"],
Cell[80694, 1990, 738, 26, 33, "Text"],
Cell[81435, 2018, 928, 30, 90, "Text"],
Cell[82366, 2050, 1030, 32, 33, "Text"],

Cell[CellGroupData[{
Cell[83421, 2086, 101, 2, 33, "Text"],
Cell[83525, 2090, 1915, 46, 417, "Text"],
Cell[85443, 2138, 203, 8, 33, "Text"],
Cell[85649, 2148, 1936, 33, 420, "Input"],
Cell[87588, 2183, 1448, 28, 297, "Input"]
}, Closed]],
Cell[89051, 2214, 1054, 32, 30, "Text"],

Cell[CellGroupData[{
Cell[90130, 2250, 101, 2, 33, "Text"],
Cell[90234, 2254, 1670, 44, 367, "Text"],
Cell[91907, 2300, 203, 8, 33, "Text"],
Cell[92113, 2310, 1937, 33, 420, "Input"],
Cell[94053, 2345, 1482, 29, 297, "Input"]
}, Closed]],
Cell[95550, 2377, 6220, 160, 311, "Text"],

Cell[CellGroupData[{
Cell[101795, 2541, 97, 2, 33, "Text"],
Cell[101895, 2545, 1660, 33, 304, "Input"]
}, Closed]],
Cell[103570, 2581, 1963, 48, 279, "Text"],

Cell[CellGroupData[{
Cell[105558, 2633, 104, 2, 33, "Text"],
Cell[105665, 2637, 174, 5, 33, "Text"],
Cell[105842, 2644, 926, 16, 225, "Input"]
}, Closed]],
Cell[106783, 2663, 511, 15, 109, "Text"],

Cell[CellGroupData[{
Cell[107319, 2682, 104, 2, 33, "Text"],
Cell[107426, 2686, 103, 3, 33, "Text"],
Cell[107532, 2691, 724, 12, 125, "Input"],
Cell[108259, 2705, 556, 17, 112, "Text"],
Cell[108818, 2724, 377, 8, 76, "Input"],
Cell[109198, 2734, 110, 3, 33, "Text"],
Cell[109311, 2739, 1623, 29, 350, "Input"]
}, Closed]],
Cell[110949, 2771, 649, 22, 109, "Text"],

Cell[CellGroupData[{
Cell[111623, 2797, 104, 2, 33, "Text"],
Cell[111730, 2801, 1862, 34, 410, "Input"]
}, Closed]],
Cell[113607, 2838, 713, 18, 87, "Text"],
Cell[114323, 2858, 411, 8, 64, "Input"],
Cell[114737, 2868, 38, 0, 33, "Text"],
Cell[114778, 2870, 299, 5, 64, "Input"],
Cell[115080, 2877, 86, 2, 33, "Text"],

Cell[CellGroupData[{
Cell[115191, 2883, 97, 2, 33, "Text"],
Cell[115291, 2887, 185, 8, 33, "Text"],
Cell[115479, 2897, 62, 1, 30, "Input"],
Cell[115544, 2900, 155, 5, 33, "Text"],
Cell[115702, 2907, 62, 1, 30, "Input"],
Cell[115767, 2910, 282, 7, 33, "Text"],
Cell[116052, 2919, 82, 1, 30, "Input"]
}, Closed]],
Cell[116149, 2923, 143, 3, 30, "Text"],
Cell[116295, 2928, 1778, 54, 150, "Text"],
Cell[118076, 2984, 628, 21, 33, "Text"],
Cell[118707, 3007, 824, 25, 114, "Text"],
Cell[119534, 3034, 648, 21, 33, "Text"],
Cell[120185, 3057, 1948, 42, 207, "Text"],
Cell[122136, 3101, 3657, 106, 147, "Text"],
Cell[125796, 3209, 469, 9, 168, "Input"],
Cell[126268, 3220, 250, 3, 33, "Text"],
Cell[126521, 3225, 415, 9, 71, "Input"],
Cell[126939, 3236, 389, 12, 33, "Text"],
Cell[127331, 3250, 1943, 59, 70, "Input"],
Cell[129277, 3311, 141, 2, 33, "Text"],
Cell[129421, 3315, 454, 10, 110, "Input"],
Cell[129878, 3327, 1048, 35, 52, "Text"],
Cell[130929, 3364, 1103, 33, 55, "Text"],

Cell[CellGroupData[{
Cell[132057, 3401, 101, 2, 33, "Text"],
Cell[132161, 3405, 884, 16, 230, "Input"],
Cell[133048, 3423, 592, 16, 36, "Text"],
Cell[133643, 3441, 694, 13, 192, "Input"],
Cell[134340, 3456, 633, 12, 171, "Input"],
Cell[134976, 3470, 328, 9, 38, "Text"],
Cell[135307, 3481, 565, 11, 130, "Input"],
Cell[135875, 3494, 519, 9, 158, "Input"]
}, Closed]],
Cell[136409, 3506, 166, 4, 32, "Text"],
Cell[136578, 3512, 555, 17, 33, "Text"],

Cell[CellGroupData[{
Cell[137158, 3533, 101, 2, 33, "Text"],
Cell[137262, 3537, 884, 16, 230, "Input"],
Cell[138149, 3555, 463, 9, 93, "Input"]
}, Closed]],
Cell[138627, 3567, 749, 22, 87, "Text"],
Cell[139379, 3591, 469, 9, 168, "Input"],
Cell[139851, 3602, 182, 2, 33, "Text"],
Cell[140036, 3606, 415, 9, 71, "Input"],
Cell[140454, 3617, 382, 12, 33, "Text"],
Cell[140839, 3631, 1943, 59, 70, "Input"],
Cell[142785, 3692, 139, 2, 33, "Text"],
Cell[142927, 3696, 454, 10, 110, "Input"],
Cell[143384, 3708, 657, 20, 33, "Text"],

Cell[CellGroupData[{
Cell[144066, 3732, 101, 2, 33, "Text"],
Cell[144170, 3736, 884, 16, 230, "Input"],
Cell[145057, 3754, 463, 9, 93, "Input"]
}, Closed]],
Cell[145535, 3766, 1669, 49, 114, "Text"],
Cell[147207, 3817, 158, 3, 35, "Text"],
Cell[147368, 3822, 571, 17, 33, "Text"],
Cell[147942, 3841, 556, 16, 33, "Text"],
Cell[148501, 3859, 584, 16, 33, "Text"],
Cell[149088, 3877, 293, 6, 33, "Text"]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

