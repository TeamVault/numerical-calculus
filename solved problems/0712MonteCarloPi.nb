(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    216302,       4247]*)
(*NotebookOutlinePosition[    216968,       4270]*)
(*  CellTagsIndexPosition[    216924,       4266]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Module for Monte Carlo Pi",
  FontFamily->"New Century Schlbk",
  FontSize->14,
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]], "Text",
  TextAlignment->Center],

Cell[TextData[{
  StyleBox["Numerical Methods Using Mathematica \nComplementary Supplement \n\
for ",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["\n",
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["Numerical Analysis - Numerical Methods",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/numerical.html"], None},
    ButtonStyle->"Hyperlink"],
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[" \n",
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["(c) ",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["\n",
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["John H. Mathews and Kurtis Fink, 2005",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/numerical.html"], None},
    ButtonStyle->"Hyperlink"],
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[" ",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]]
}], "Text",
  TextAlignment->Center]
}, Closed]],

Cell[TextData[{
  StyleBox["Background",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "\n\n\tWe start the familiar example of finding the area of a circle.  \
Figure 1 below shows a circle with radius ",
  Cell[BoxData[
      \(r = 1\)]],
  " inscribed within a square. The area of the circle is  ",
  Cell[BoxData[
      \(\[Pi]\ r\^2 = \ \(\[Pi]\ 1\^2 = \ \[Pi]\)\)]],
  ",  and the area of the square is ",
  Cell[BoxData[
      \(\((2  r)\)\^2 = \ \(2\^2 = \ 4\)\)]],
  ".  The ratio of the area of the circle to the area of the square is   \n\t\
\n\t\t",
  Cell[BoxData[
      \(\[Rho]\  = \ \(\(Area\ of\ Circle\)\/\(Area\ of\ Square\)\  = \ \(\(\
\[Pi]\ r\^2\)\/\((2  r)\)\^2\  = \ \(\[Pi]\/4\  = \ \(3.1415926535897932\/4\  \
= \ 0.7853981633974483\)\)\)\)\)]],
  "  \n\n\t\t",
  Cell[GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40003;0000bb000`400?l0
0000o`00003ob`3oool00</0oooo003;0?ooo`00b`3oool00</0oooo0004
0?oool8000001@3oool000@0oooo00<000000?ooo`3oool0C@3ooolR0000
odl0oooo00<000000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3o
ool0B03oool?0000o`h0l?o`3`000?m:0?ooo`030000003oool0oooo00<0
oooo00040?ooo`030000003oool0oooo04@0oooo2P000?lP0?3ol0X0003o
AP3oool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo0?oo
o`0o0?ooo`X0003o:P3`oo0:0000od40oooo00<000000?ooo`3oool00`3o
ool000@0oooo00<000000?ooo`3oool0?@3oool80000oc80l?o`20000?lo
0?ooo`030000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo
03/0oooo1@000?ll0?3ol0D0003o?@3oool00`000000oooo0?ooo`030?oo
o`00103oool00`000000oooo0?ooo`0i0?ooo`D0003o@03`oo050000oc/0
oooo00<000000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool0
=`3oool50000od@0l?o`1@000?li0?ooo`030000003oool0oooo00<0oooo
00040?ooo`030000003oool0oooo03@0oooo1P000?m80?3ol0H0003o=P3o
ool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo0?ooo`0b
0?ooo`H0003oC03`oo060000oc@0oooo00<000000?ooo`3oool00`3oool0
00@0oooo00<000000?ooo`3oool0<03oool50000oe80l?o`1@000?lb0?oo
o`030000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo02h0
oooo1@000?mF0?3ol0D0003o<03oool00`000000oooo0?ooo`030?ooo`00
103oool00`000000oooo0?ooo`0/0?ooo`D0003oFP3`oo050000obh0oooo
00<000000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool0:P3o
ool50000oeh0l?o`1@000?l/0?ooo`030000003oool0oooo00<0oooo0004
0?ooo`030000003oool0oooo02T0oooo10000?mR0?3ol0@0003o:`3oool0
0`000000oooo0?ooo`030?ooo`00103oool00`000000oooo0?ooo`0X0?oo
o`<0003oIP3`oo030000obX0oooo00<000000?ooo`3oool00`3oool000@0
oooo00<000000?ooo`3oool09P3oool40000ofP0l?o`10000?lX0?ooo`03
0000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo02@0oooo
1@000?mZ0?3ol0D0003o9P3oool00`000000oooo0?ooo`030?ooo`00103o
ool00`000000oooo0?ooo`0S0?ooo`@0003oKP3`oo040000obD0oooo00<0
00000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool08P3oool3
0000og80l?o`0`000?lT0?ooo`030000003oool0oooo00<0oooo00040?oo
o`030000003oool0oooo0200oooo10000?md0?3ol0@0003o8P3oool00`00
0000oooo0?ooo`030?ooo`00103oool00`000000oooo0?ooo`0P0?ooo`<0
003oMP3`oo030000ob80oooo00<000000?ooo`3oool00`3oool000@0oooo
00<000000?ooo`3oool07`3oool20000ogX0l?o`0P000?lQ0?ooo`030000
003oool0oooo00<0oooo00040?ooo`030000003oool0oooo01d0oooo0`00
0?ml0?3ol0<0003o7`3oool00`000000oooo0?ooo`030?ooo`00103oool0
0`000000oooo0?ooo`0L0?ooo`@0003oO03`oo040000oah0oooo00<00000
0?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool06`3oool30000
oh00l?o`0`000?lM0?ooo`030000003oool0oooo00<0oooo00040?ooo`03
0000003oool0oooo01T0oooo10000?n20?3ol0@0003o6`3oool00`000000
oooo0?ooo`030?ooo`00103oool00`000000oooo0?ooo`0I0?ooo`<0003o
Q03`oo030000oa/0oooo00<000000?ooo`3oool00`3oool000@0oooo00<0
00000?ooo`3oool0603oool20000ohP0l?o`0P000?lJ0?ooo`030000003o
ool0oooo00<0oooo00040?ooo`030000003oool0oooo01L0oooo0P000?n:
0?3ol080003o6@3oool00`000000oooo0?ooo`030?ooo`00103oool00`00
0000oooo0?ooo`0F0?ooo`<0003oRP3`oo030000oaP0oooo00<000000?oo
o`3oool00`3oool000@0oooo00<000000?ooo`3oool05P3oool20000oh`0
l?o`0P000?lH0?ooo`030000003oool0oooo00<0oooo00040?ooo`030000
003oool0oooo01D0oooo0P000?n>0?3ol080003o5`3oool00`000000oooo
0?ooo`030?ooo`00103oool00`000000oooo0?ooo`0C0?ooo`<0003oT03`
oo030000oaD0oooo00<000000?ooo`3oool00`3oool000@0oooo00<00000
0?ooo`3oool04`3oool30000oi00l?o`0`000?lE0?ooo`030000003oool0
oooo00<0oooo00040?ooo`030000003oool0oooo0180oooo0P000?nD0?3o
l080003o503oool00`000000oooo0?ooo`030?ooo`00103oool00`000000
oooo0?ooo`0A0?ooo`80003oUP3`oo020000oa<0oooo00<000000?ooo`3o
ool00`3oool000@0oooo00<000000?ooo`3oool0403oool30000oiH0l?o`
0`000?lB0?ooo`030000003oool0oooo00<0oooo00040?ooo`030000003o
ool0oooo0100oooo0P000?nH0?3ol080003o4P3oool00`000000oooo0?oo
o`030?ooo`00103oool00`000000oooo0?ooo`0?0?ooo`80003oVP3`oo02
0000oa40oooo00<000000?ooo`3oool00`3oool000@0oooo00<000000?oo
o`3oool03`3oool00`000?l0l?o`0?3ol02J0?3ol0030000o`3oool0oooo
00l0oooo00<000000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3o
ool03P3oool20000oi`0l?o`0P000?l@0?ooo`030000003oool0oooo00<0
oooo00040?ooo`030000003oool0oooo00d0oooo0P000?nN0?3ol080003o
3`3oool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo0?oo
o`0<0?ooo`<0003oWP3`oo030000o`h0oooo00<000000?ooo`3oool00`3o
ool000@0oooo00<000000?ooo`3oool0303oool20000oj00l?o`0P000?l>
0?ooo`030000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo
00/0oooo0P000?nR0?3ol080003o3@3oool00`000000oooo0?ooo`030?oo
o`00103oool00`000000oooo0?ooo`0;0?ooo`030000o`3`oo00l?o`0:80
l?o`00<0003o0?ooo`3oool02`3oool00`000000oooo0?ooo`030?ooo`00
103oool00`000000oooo0?ooo`0:0?ooo`80003oY03`oo020000o``0oooo
00<000000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool02P3o
ool00`000?l0l?o`0?3ol02T0?3ol0030000o`3oool0oooo00X0oooo00<0
00000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool02@3oool2
0000ojH0l?o`0P000?l;0?ooo`030000003oool0oooo00<0oooo00040?oo
o`030000003oool0oooo00T0oooo00<0003o0?3ol03`oo00YP3`oo000`00
0?l0oooo0?ooo`090?ooo`030000003oool0oooo00<0oooo00040?ooo`03
0000003oool0oooo00P0oooo0P000?nX0?3ol080003o2P3oool00`000000
oooo0?ooo`030?ooo`00103oool00`000000oooo0?ooo`080?ooo`030000
o`3`oo00l?o`0:P0l?o`00<0003o0?ooo`3oool0203oool00`000000oooo
0?ooo`030?ooo`00103oool00`000000oooo0?ooo`070?ooo`80003oZP3`
oo020000o`T0oooo00<000000?ooo`3oool00`3oool000@0oooo00<00000
0?ooo`3oool01`3oool00`000?l0l?o`0?3ol02Z0?3ol0030000o`3oool0
oooo00L0oooo00<000000?ooo`3oool00`3oool000@0oooo00<000000?oo
o`3oool01P3oool20000oj`0l?o`0P000?l80?ooo`030000003oool0oooo
00<0oooo00040?ooo`030000003oool0oooo00H0oooo0P000?n/0?3ol080
003o203oool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo
0?ooo`060?ooo`030000o`3`oo00l?o`0:`0l?o`00<0003o0?ooo`3oool0
1P3oool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo0?oo
o`050?ooo`80003o[P3`oo020000o`L0oooo00<000000?ooo`3oool00`3o
ool000@0oooo00<000000?ooo`3oool01@3oool00`000?l0l?o`0?3ol02^
0?3ol0030000o`3oool0oooo00D0oooo00<000000?ooo`3oool00`3oool0
00@0oooo00<000000?ooo`3oool0103oool20000ok00l?o`0P000?l60?oo
o`030000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo00@0
oooo00<0003o0?3ol03`oo00/03`oo000`000?l0oooo0?ooo`040?ooo`03
0000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo00<0oooo
0P000?nb0?3ol080003o1@3oool00`000000oooo0?ooo`030?ooo`00103o
ool00`000000oooo0?ooo`030?ooo`030000o`3`oo00l?o`0;80l?o`00<0
003o0?ooo`3oool00`3oool00`000000oooo0?ooo`030?ooo`00103oool0
0`000000oooo0?ooo`020?ooo`80003o]03`oo020000o`@0oooo00<00000
0?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool00P3oool00`00
0?l0l?o`0?3ol02d0?3ol0030000o`3oool0oooo0080oooo00<000000?oo
o`3oool00`3oool000@0oooo00@000000?ooo`3oool0oooo0P000?nf0?3o
l080003o0`3oool00`000000oooo0?ooo`030?ooo`00103oool010000000
oooo0?ooo`3oool20000okH0l?o`0P000?l30?ooo`030000003oool0oooo
00<0oooo00040?ooo`030000003oool0oooo00<0003o]P3`oo020000o`<0
oooo00<000000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool0
0P000?ng0?3ol080003o0`3oool00`000000oooo0?ooo`030?ooo`00103o
ool00`000000oooo0?ooo`020000okP0l?o`00D0003o0?ooo`3oool0oooo
000000050?ooo`00103oool00`000000oooo0?ooo`020000okP0l?o`0P00
0?l20?ooo`030000003oool0oooo00<0oooo00040?ooo`040000003oool0
oooo0000okX0l?o`00@0003o0?ooo`3oool000001@3oool000@0oooo00@0
00000?ooo`000?l0003o^@3`oo020000o`80oooo00<000000?ooo`3oool0
0`3oool000@0oooo00@000000?ooo`000?l0003o^@3`oo030000o`030?oo
o`000000oooo00@0oooo00040?ooo`040000003oool0003o0000okX0l?o`
0P000?l00`3oool000000?ooo`040?ooo`00103oool010000000oooo0000
o`000?nj0?3ol080003o00<0oooo0000003oool0103oool000@0oooo00@0
00000000o`000?l0003o^P3`oo020000o`030?ooo`000000oooo00@0oooo
00040?ooo`03000000000?l0003o0;/0l?o`0P000?l00`3oool000000?oo
o`040?ooo`00103oool00`000000003o0000o`2l0?3ol0030000o`3oool0
000000D0oooo00040?ooo`03000000000?l0003o0;`0l?o`0P000?l00`00
0000oooo0?ooo`030?ooo`00103oool00`000000003o0?3ol02m0?3ol003
0000o`000000oooo00@0oooo00040?ooo`03000000000?l0l?o`0;`0l?o`
0P000?l00`000000oooo0?ooo`030?ooo`00103oool00`000000003o0?3o
l02l0?3ol080003o00<000000?ooo`3oool00`3oool000@0oooo00<00000
0000o`3`oo00_03`oo020000o`030000003oool0oooo00<0oooo00040?oo
o`03000000000?l0l?o`0;`0l?o`0P000?l00`000000oooo0?ooo`030?oo
o`00103oool00`000000003o0?3ol02l0?3ol080003o00<000000?ooo`3o
ool00`3oool000@0oooo00<000000000o`3`oo00_03`oo020000o`030000
003oool0oooo00<0oooo00040?ooo`03000000000?l0l?o`0;`0l?o`0P00
0?l00`000000oooo0?ooo`030?ooo`00103oool00`000000003o0?3ol02m
0?3ol0030000o`000000oooo00@0oooo00040?ooo`03000000000?l0l?o`
0;d0l?o`00<0003o0000003oool0103oool000<0oooo00<0003o00000000
0?l0_P3`oo000`000?l000000?ooo`040?ooo`000`3oool00`000?l00000
0?3ol02n0?3ol0030000o`000000oooo00@0oooo00030?ooo`030000o`00
0000l?o`0;h0l?o`00<0003o0000003oool0103oool000<0oooo00<0003o
0000003`oo00_P3`oo000`000?l000000?ooo`040?ooo`000`3oool00`00
0?l000000?3ol02n0?3ol0030000o`000000oooo00@0oooo00030?ooo`03
0000o`000000l?o`0;h0l?o`00<0003o0000003oool0103oool000<0oooo
00<0003o0000003`oo00_P3`oo000`000?l000000?ooo`040?ooo`000`3o
ool00`000?l000000?3ol02n0?3ol0030000o`000000oooo00@0oooo0003
0?ooo`030000o`000000l?o`0;h0l?o`00<0003o0000003oool0103oool0
00<0oooo00<0003o000000000?l0_P3`oo000`000?l000000?ooo`040?oo
o`00103oool00`000000003o0?3ol02m0?3ol0030000o`000000oooo00@0
oooo00040?ooo`03000000000?l0l?o`0;d0l?o`00<0003o0000003oool0
103oool000@0oooo00<000000000o`3`oo00_03`oo020000o`030000003o
ool0oooo00<0oooo00040?ooo`03000000000?l0l?o`0;`0l?o`0P000?l0
0`000000oooo0?ooo`030?ooo`00103oool00`000000003o0?3ol02l0?3o
l080003o00<000000?ooo`3oool00`3oool000@0oooo00<000000000o`3`
oo00_03`oo020000o`030000003oool0oooo00<0oooo00040?ooo`030000
00000?l0l?o`0;`0l?o`0P000?l00`000000oooo0?ooo`030?ooo`00103o
ool00`000000003o0?3ol02l0?3ol080003o00<000000?ooo`3oool00`3o
ool000@0oooo00<000000000o`3`oo00_03`oo020000o`030000003oool0
oooo00<0oooo00040?ooo`03000000000?l0l?o`0;`0l?o`0P000?l00`00
0000oooo0?ooo`030?ooo`00103oool00`000000003o0000o`2l0?3ol080
003o00<000000?ooo`3oool00`3oool000@0oooo00<000000?ooo`000?l0
_03`oo000`000?l0oooo000000050?ooo`00103oool00`000000003o0000
o`2k0?3ol080003o00<0oooo0000003oool0103oool000@0oooo00@00000
0000o`000?l0003o^P3`oo020000o`030?ooo`000000oooo00@0oooo0004
0?ooo`040000003oool0003o0000okX0l?o`0P000?l00`3oool000000?oo
o`040?ooo`00103oool010000000oooo0000o`000?nj0?3ol080003o00<0
oooo0000003oool0103oool000@0oooo00@000000?ooo`000?l0003o^@3`
oo030000o`030?ooo`000000oooo00@0oooo00040?ooo`040000003oool0
003o0000okT0l?o`0P000?l20?ooo`030000003oool0oooo00<0oooo0004
0?ooo`040000003oool0oooo0000okT0l?o`0P000?l20?ooo`030000003o
ool0oooo00<0oooo00040?ooo`030000003oool0oooo0080003o^03`oo02
0000o`80oooo00<000000?ooo`3oool00`3oool000@0oooo00D000000?oo
o`3oool0oooo0000o`2h0?3ol0050000o`3oool0oooo0?ooo`0000001@3o
ool000@0oooo00<000000?ooo`3oool00P000?ng0?3ol080003o0`3oool0
0`000000oooo0?ooo`030?ooo`00103oool00`000000oooo0?ooo`030000
okH0l?o`0P000?l30?ooo`030000003oool0oooo00<0oooo00040?ooo`04
0000003oool0oooo0?ooo`80003o]P3`oo020000o`<0oooo00<000000?oo
o`3oool00`3oool000@0oooo00@000000?ooo`3oool0oooo0P000?nf0?3o
l080003o0`3oool00`000000oooo0?ooo`030?ooo`00103oool00`000000
oooo0?ooo`020?ooo`030000o`3`oo00l?o`0;@0l?o`00<0003o0?ooo`3o
ool00P3oool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo
0?ooo`020?ooo`80003o]03`oo020000o`@0oooo00<000000?ooo`3oool0
0`3oool000@0oooo00<000000?ooo`3oool00`3oool00`000?l0l?o`0?3o
l02b0?3ol0030000o`3oool0oooo00<0oooo00<000000?ooo`3oool00`3o
ool000@0oooo00<000000?ooo`3oool00`3oool20000ok80l?o`0P000?l5
0?ooo`030000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo
00@0oooo00<0003o0?3ol03`oo00/03`oo000`000?l0oooo0?ooo`040?oo
o`030000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo00@0
oooo0P000?n`0?3ol080003o1P3oool00`000000oooo0?ooo`030?ooo`00
103oool00`000000oooo0?ooo`050?ooo`030000o`3`oo00l?o`0:h0l?o`
00<0003o0?ooo`3oool01@3oool00`000000oooo0?ooo`030?ooo`00103o
ool00`000000oooo0?ooo`050?ooo`80003o[P3`oo020000o`L0oooo00<0
00000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool01P3oool0
0`000?l0l?o`0?3ol02/0?3ol0030000o`3oool0oooo00H0oooo00<00000
0?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool01P3oool20000
oj`0l?o`0P000?l80?ooo`030000003oool0oooo00<0oooo00040?ooo`03
0000003oool0oooo00H0oooo0P000?n/0?3ol080003o203oool00`000000
oooo0?ooo`030?ooo`00103oool00`000000oooo0?ooo`070?ooo`030000
o`3`oo00l?o`0:X0l?o`00<0003o0?ooo`3oool01`3oool00`000000oooo
0?ooo`030?ooo`00103oool00`000000oooo0?ooo`070?ooo`80003oZP3`
oo020000o`T0oooo00<000000?ooo`3oool00`3oool000@0oooo00<00000
0?ooo`3oool0203oool00`000?l0l?o`0?3ol02X0?3ol0030000o`3oool0
oooo00P0oooo00<000000?ooo`3oool00`3oool000@0oooo00<000000?oo
o`3oool0203oool20000ojP0l?o`0P000?l:0?ooo`030000003oool0oooo
00<0oooo00040?ooo`030000003oool0oooo00T0oooo00<0003o0?3ol03`
oo00YP3`oo000`000?l0oooo0?ooo`090?ooo`030000003oool0oooo00<0
oooo00040?ooo`030000003oool0oooo00T0oooo0P000?nV0?3ol080003o
2`3oool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo0?oo
o`0:0?ooo`030000o`3`oo00l?o`0:@0l?o`00<0003o0?ooo`3oool02P3o
ool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo0?ooo`0:
0?ooo`80003oY03`oo020000o``0oooo00<000000?ooo`3oool00`3oool0
00@0oooo00<000000?ooo`3oool02`3oool00`000?l0l?o`0?3ol02R0?3o
l0030000o`3oool0oooo00/0oooo00<000000?ooo`3oool00`3oool000@0
oooo00<000000?ooo`3oool02`3oool20000oj80l?o`0P000?l=0?ooo`03
0000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo00`0oooo
0P000?nP0?3ol080003o3P3oool00`000000oooo0?ooo`030?ooo`00103o
ool00`000000oooo0?ooo`0<0?ooo`<0003oWP3`oo030000o`h0oooo00<0
00000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool03@3oool2
0000oih0l?o`0P000?l?0?ooo`030000003oool0oooo00<0oooo00040?oo
o`030000003oool0oooo00h0oooo0P000?nL0?3ol080003o403oool00`00
0000oooo0?ooo`030?ooo`00103oool00`000000oooo0?ooo`0?0?ooo`03
0000o`3`oo00l?o`09X0l?o`00<0003o0?ooo`3oool03`3oool00`000000
oooo0?ooo`030?ooo`00103oool00`000000oooo0?ooo`0?0?ooo`80003o
VP3`oo020000oa40oooo00<000000?ooo`3oool00`3oool000@0oooo00<0
00000?ooo`3oool0403oool20000oiP0l?o`0P000?lB0?ooo`030000003o
ool0oooo00<0oooo00040?ooo`030000003oool0oooo0100oooo0`000?nF
0?3ol0<0003o4P3oool00`000000oooo0?ooo`030?ooo`00103oool00`00
0000oooo0?ooo`0A0?ooo`80003oUP3`oo020000oa<0oooo00<000000?oo
o`3oool00`3oool000@0oooo00<000000?ooo`3oool04P3oool20000oi@0
l?o`0P000?lD0?ooo`030000003oool0oooo00<0oooo00040?ooo`030000
003oool0oooo01<0oooo0`000?n@0?3ol0<0003o5@3oool00`000000oooo
0?ooo`030?ooo`00103oool00`000000oooo0?ooo`0C0?ooo`<0003oT03`
oo030000oaD0oooo00<000000?ooo`3oool00`3oool000@0oooo00<00000
0?ooo`3oool05@3oool20000ohh0l?o`0P000?lG0?ooo`030000003oool0
oooo00<0oooo00040?ooo`030000003oool0oooo01H0oooo0P000?n<0?3o
l080003o603oool00`000000oooo0?ooo`030?ooo`00103oool00`000000
oooo0?ooo`0F0?ooo`<0003oRP3`oo030000oaP0oooo00<000000?ooo`3o
ool00`3oool000@0oooo00<000000?ooo`3oool05`3oool20000ohX0l?o`
0P000?lI0?ooo`030000003oool0oooo00<0oooo00040?ooo`030000003o
ool0oooo01P0oooo0P000?n80?3ol080003o6P3oool00`000000oooo0?oo
o`030?ooo`00103oool00`000000oooo0?ooo`0I0?ooo`<0003oQ03`oo03
0000oa/0oooo00<000000?ooo`3oool00`3oool000@0oooo00<000000?oo
o`3oool06@3oool40000oh80l?o`10000?lK0?ooo`030000003oool0oooo
00<0oooo00040?ooo`030000003oool0oooo01/0oooo0`000?n00?3ol0<0
003o7@3oool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo
0?ooo`0L0?ooo`@0003oO03`oo040000oah0oooo00<000000?ooo`3oool0
0`3oool000@0oooo00<000000?ooo`3oool07@3oool30000og`0l?o`0`00
0?lO0?ooo`030000003oool0oooo00<0oooo00040?ooo`030000003oool0
oooo01l0oooo0P000?mj0?3ol080003o8@3oool00`000000oooo0?ooo`03
0?ooo`00103oool00`000000oooo0?ooo`0P0?ooo`<0003oMP3`oo030000
ob80oooo00<000000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3o
ool0803oool40000og@0l?o`10000?lR0?ooo`030000003oool0oooo00<0
oooo00040?ooo`030000003oool0oooo0280oooo0`000?mb0?3ol0<0003o
903oool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo0?oo
o`0S0?ooo`@0003oKP3`oo040000obD0oooo00<000000?ooo`3oool00`3o
ool000@0oooo00<000000?ooo`3oool0903oool50000ofX0l?o`1@000?lV
0?ooo`030000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo
02H0oooo10000?mX0?3ol0@0003o:03oool00`000000oooo0?ooo`030?oo
o`00103oool00`000000oooo0?ooo`0X0?ooo`<0003oIP3`oo030000obX0
oooo00<000000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool0
:@3oool40000of80l?o`10000?l[0?ooo`030000003oool0oooo00<0oooo
00040?ooo`030000003oool0oooo02X0oooo1@000?mN0?3ol0D0003o;03o
ool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo0?ooo`0/
0?ooo`D0003oFP3`oo050000obh0oooo00<000000?ooo`3oool00`3oool0
00@0oooo00<000000?ooo`3oool0;P3oool50000oeH0l?o`1@000?l`0?oo
o`030000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo0300
oooo1@000?mB0?3ol0D0003o<P3oool00`000000oooo0?ooo`030?ooo`00
103oool00`000000oooo0?ooo`0b0?ooo`H0003oC03`oo060000oc@0oooo
00<000000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool0=03o
ool60000odP0l?o`1P000?lf0?ooo`030000003oool0oooo00<0oooo0004
0?ooo`030000003oool0oooo03L0oooo1@000?m40?3ol0D0003o>@3oool0
0`000000oooo0?ooo`030?ooo`00103oool00`000000oooo0?ooo`0i0?oo
o`D0003o@03`oo050000oc/0oooo00<000000?ooo`3oool00`3oool000@0
oooo00<000000?ooo`3oool0>`3oool50000oc`0l?o`1@000?lm0?ooo`03
0000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo03d0oooo
1P000?lf0?3ol0H0003o?`3oool00`000000oooo0?ooo`030?ooo`00103o
ool00`000000oooo0?ooo`0o0?ooo`P0003o;P3`oo080000od40oooo00<0
00000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool0@P3oool:
0000ob@0l?o`2P000?m40?ooo`030000003oool0oooo00<0oooo00040?oo
o`030000003oool0oooo04H0oooo2P000?lL0?3ol0X0003oB03oool00`00
0000oooo0?ooo`030?ooo`00103oool00`000000oooo0?ooo`1;0?ooo`l0
003o203`oo0?0000odd0oooo00<000000?ooo`3oool00`3oool000@0oooo
`P0000050?ooo`00H03oool:0000of40oooo003;0?ooo`00b`3oool00</0
oooo0000\
\>"], "Graphics",
    Evaluatable->False,
    ImageSize->{203, 203},
    ImageMargins->{{0, 0}, {0, 0}},
    ImageRegion->{{0, 1}, {0, 1}}],
  "  \n\t\t",
  StyleBox["Figure 1.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "  ",
  Cell[BoxData[
      \(\[Rho]\  = \ \(\(Area\ of\ Circle\)\/\(Area\ of\ Square\)\  = \ \(\
\[Pi]\/4\  = \ 0.7853981633974483\)\)\)]],
  "  "
}], "Text"],

Cell["\<\

\
\>", "Text"],

Cell[TextData[{
  "\tIf we could compute ratio, then we could multiple it by four to obtain \
the value ",
  Cell[BoxData[
      \(\[Pi]\)]],
  ".  One particularly simple way to do this is to pick lattice points in the \
square and count how many of them lie inside the circle, see Figure 2.  \
Suppose for example that the points ",
  Cell[BoxData[
      \(\(\({\(-\ 1\) + \(2  i - 1\)\/32, \(-\ 1\) + \(2  j - 1\)\/32}\_\(i = \
1\)\%32\)\(\ \)\)\_\(j = 1\)\%31\)]],
  " are selected, then there are ",
  StyleBox["812",
    FontFamily->"Courier New"],
  " points inside the circle and ",
  StyleBox["212",
    FontFamily->"Courier New"],
  " points outside the circle and the percentage of points inside the circle \
is  ",
  Cell[BoxData[
      \(\[Rho]\  = \ \(812\/\(812 + 212\)\  = \ \(812\/1024\  = \ 
            0.79296875\)\)\)]],
  ".  Then the area of the circle is approximated with the following \
calculation  \n\t\n\t",
  Cell[BoxData[
      \(Area\ of\ Circle\  \[TildeTilde] \ \[Rho]\ *\ 
            Area\ of\ Square\  = \ \(\[Rho]\ *\ 
            4\  = \ \(0.79296875\ *\ 4\ \  = \ 3.171875\)\)\)]],
  "  \n\n\t\t",
  Cell[GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40003;0000bb000`400?l0
0000o`00003ob`3oool00</0oooo003;0?ooo`00b`3oool00</0oooo0004
0?oool8000001@3oool000@0oooo00<000000?ooo`3oool0C@3ooolR0000
odl0oooo00<000000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3o
ool00P00o`040?ooo`800?l0103oool2003o00@0oooo0P00o`040?ooo`80
0?l0103oool2003o00@0oooo0P00o`040?ooo`800?l0103oool2003o00@0
oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo3`000?l30?ooo`80
o`00103oool20?l000<0oooo3`000?l40?ooo`800?l0103oool2003o00@0
oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo0P00o`040?ooo`80
0?l0103oool2003o00@0oooo0P00o`040?ooo`800?l0103oool2003o00@0
oooo0P00o`020?ooo`030000003oool0oooo00<0oooo00040?ooo`030000
003oool00?l000<00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l0
0P3oool4003o0080oooo1000o`020?ooo`@00?l00P3oool4003o0080oooo
1000o`020?ooo`@00?l00P3oool4003o0080oooo0`00o`0:0000o`<0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
0`3o000:0000o`<00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l0
0P3oool4003o0080oooo1000o`020?ooo`@00?l00P3oool4003o0080oooo
1000o`020?ooo`@00?l00P3oool4003o0080oooo1000o`000`3oool00000
0?ooo`040?ooo`00103oool00`000000oooo003o0003003o0080oooo1000
o`020?ooo`@00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l00P3o
ool4003o0080oooo1000o`020?ooo`@00?l00P3oool4003o0080oooo1000
o`0:0000o`80o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool20?l000X0003o1000
o`020?ooo`@00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l00P3o
ool4003o0080oooo1000o`020?ooo`@00?l00P3oool4003o0080oooo1000
o`020?ooo`@00?l000<0oooo0000003oool0103oool000@0oooo00<00000
0?ooo`3oool00P00o`040?ooo`800?l0103oool2003o00@0oooo0P00o`04
0?ooo`800?l0103oool2003o00@0oooo0P00o`040?ooo`800?l0103oool2
003o00@0oooo0P00o`040?ooo`03003o00000?l0003o00H0003o0`3oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00030?ooo`P0003o00<00?l0
0?ooo`3oool00P3oool2003o00@0oooo0P00o`040?ooo`800?l0103oool2
003o00@0oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo0P00o`04
0?ooo`800?l0103oool2003o0080oooo00<000000?ooo`3oool00`3oool0
00@0oooo00<000000?ooo`3oool0>`3oool50000oc`0oooo1@000?lm0?oo
o`030000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo03T0
oooo1@000?m00?ooo`D0003o>`3oool00`000000oooo0?ooo`030?ooo`00
103oool00`000000oooo0?ooo`02003o00@0oooo0P00o`040?ooo`800?l0
103oool2003o00@0oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo
0P00o`040?ooo`800?l0103oool00`3o0000003o0000o`030000o`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00050000o`030?l0003oool0oooo0080oooo
0P00o`040?ooo`800?l0103oool2003o00@0oooo0P00o`040?ooo`800?l0
103oool2003o00@0oooo0P00o`040?ooo`800?l0103oool2003o0080oooo
00<000000?ooo`3oool00`3oool000@0oooo00<000000?ooo`00o`000`00
o`020?ooo`@00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l00P3o
ool4003o0080oooo1000o`020?ooo`@00?l00P3oool4003o00030?ooo`00
0?l0003o00@0003o00<0oooo0?l0003o00000P3o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l000030?ooo`000?l0003o00@0003o00<0oooo003o0000o`000P00
o`020?ooo`@00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l00P3o
ool4003o0080oooo1000o`020?ooo`@00?l00P3oool4003o00030?ooo`00
0000oooo00@0oooo00040?ooo`030000003oool00?l000<00?l00P3oool4
003o0080oooo1000o`020?ooo`@00?l00P3oool4003o0080oooo1000o`02
0?ooo`@00?l00P3oool4003o0080oooo0`00o`060000o`030?l0003oool0
oooo00@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`030?l000000?l0
003o00@0003o0`00o`020?ooo`@00?l00P3oool4003o0080oooo1000o`02
0?ooo`@00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l00P3oool4
003o00030?ooo`000000oooo00@0oooo00040?ooo`030000003oool0oooo
00800?l0103oool2003o00@0oooo0P00o`040?ooo`800?l0103oool2003o
00@0oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo1@000?l00`3o
ool0o`000?l000040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`0000<0oooo0000o`000?l00`000?l40?ooo`800?l0103oool2003o
00@0oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo0P00o`040?oo
o`800?l0103oool2003o0080oooo00<000000?ooo`3oool00`3oool000@0
oooo00<000000?ooo`3oool0;P3oool50000oeH0oooo1@000?l`0?ooo`03
0000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo02`0oooo
1@000?mJ0?ooo`D0003o;P3oool00`000000oooo0?ooo`030?ooo`00103o
ool00`000000oooo0?ooo`02003o00@0oooo0P00o`040?ooo`800?l0103o
ool2003o00@0oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo1@00
0?l00`3oool0o`000?l000040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00000`3oool0003o0000
o`030000o`@0oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo0P00
o`040?ooo`800?l0103oool2003o00@0oooo0P00o`020?ooo`030000003o
ool0oooo00<0oooo00040?ooo`030000003oool00?l000<00?l00P3oool4
003o0080oooo1000o`020?ooo`@00?l00P3oool4003o0080oooo1000o`02
0?ooo`@00?l00P3oool40000o`80oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0003o0P3oool4003o0080oooo1000o`020?ooo`@00?l00P3oool4
003o0080oooo1000o`020?ooo`@00?l00P3oool4003o00030?ooo`000000
oooo00@0oooo00040?ooo`030000003oool00?l000<00?l00P3oool4003o
0080oooo1000o`020?ooo`@00?l00P3oool4003o0080oooo1000o`020?oo
o`@00?l000@0oooo0000o`000?l0003o0P3o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool20?l000<0003o00<0oooo003o0000o`000P00o`02
0?ooo`@00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l00P3oool4
003o0080oooo1000o`000`3oool000000?ooo`040?ooo`00103oool00`00
0000oooo0?ooo`02003o00@0oooo0P00o`040?ooo`800?l0103oool2003o
00@0oooo0P00o`040?ooo`800?l0103oool2003o00@0003o0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0003o0P00o`040?oo
o`800?l0103oool2003o00@0oooo0P00o`040?ooo`800?l0103oool2003o
00@0oooo0P00o`020?ooo`030000003oool0oooo00<0oooo00040?ooo`03
0000003oool0oooo02@0oooo1@000?mZ0?ooo`D0003o9P3oool00`000000
oooo0?ooo`030?ooo`00103oool00`000000oooo0?ooo`0S0?ooo`@0003o
KP3oool40000obD0oooo00<000000?ooo`3oool00`3oool000@0oooo00<0
00000?ooo`3oool00P00o`040?ooo`800?l0103oool2003o00@0oooo0P00
o`040?ooo`800?l0103oool2003o0080oooo0`000?l00`3o0000oooo0?oo
o`020?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`040?l000000?l0003o0000o`80oooo0P00o`040?ooo`800?l0
103oool2003o00@0oooo0P00o`040?ooo`800?l0103oool2003o0080oooo
00<000000?ooo`3oool00`3oool000@0oooo00<000000?ooo`00o`000`00
o`020?ooo`@00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l00P3o
ool3003o00@0003o0`3o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`<0o`0010000?l3003o0080oooo1000
o`020?ooo`@00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l000<0
oooo0000003oool0103oool000@0oooo00<000000?ooo`00o`000`00o`02
0?ooo`@00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l00P3oool3
003o00<0003o103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000`000?l3003o0080oooo1000o`02
0?ooo`@00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l000<0oooo
0000003oool0103oool000@0oooo00<000000?ooo`3oool00P00o`040?oo
o`800?l0103oool2003o00@0oooo0P00o`040?ooo`800?l0103oool00`00
o`00003o0000o`030?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000<0oooo0P000?l00`00
o`00oooo0?ooo`020?ooo`800?l0103oool2003o00@0oooo0P00o`040?oo
o`800?l0103oool2003o0080oooo00<000000?ooo`3oool00`3oool000@0
oooo00<000000?ooo`3oool07@3oool30000og`0oooo0`000?lO0?ooo`03
0000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo01`0oooo
10000?ml0?ooo`@0003o7P3oool00`000000oooo0?ooo`030?ooo`00103o
ool00`000000oooo0?ooo`02003o00@0oooo0P00o`040?ooo`800?l0103o
ool2003o00@0oooo0P00o`00103oool0003o0000o`000?l20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000<0003o00<0oooo003o0000o`00
103oool2003o00@0oooo0P00o`040?ooo`800?l0103oool2003o0080oooo
00<000000?ooo`3oool00`3oool000@0oooo00<000000?ooo`00o`000`00
o`020?ooo`@00?l00P3oool4003o0080oooo1000o`020?ooo`800?l01000
0?l40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l000@0003o0P00
o`020?ooo`@00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l000<0
oooo0000003oool0103oool000@0oooo00<000000?ooo`00o`000`00o`02
0?ooo`@00?l00P3oool4003o0080oooo1000o`020?ooo`800?l00`000?l0
0`3oool0o`000?l000020?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l000040?ooo`000?l0003o0000o`800?l00P3oool4003o0080oooo1000
o`020?ooo`@00?l00P3oool4003o00030?ooo`000000oooo00@0oooo0004
0?ooo`030000003oool0oooo00800?l0103oool2003o00@0oooo0P00o`04
0?ooo`800?l0103oool20000o`@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80003o103oool2003o00@0oooo0P00o`04
0?ooo`800?l0103oool2003o0080oooo00<000000?ooo`3oool00`3oool0
00@0oooo00<000000?ooo`3oool05`3oool20000ohX0oooo0P000?lI0?oo
o`030000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo01H0
oooo0`000?n:0?ooo`<0003o603oool00`000000oooo0?ooo`030?ooo`00
103oool00`000000oooo0?ooo`02003o00@0oooo0P00o`040?ooo`800?l0
103oool2003o0080oooo0P000?l20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`000P000?l20?ooo`800?l0
103oool2003o00@0oooo0P00o`040?ooo`800?l00P3oool00`000000oooo
0?ooo`030?ooo`00103oool00`000000oooo003o0003003o0080oooo1000
o`020?ooo`@00?l00P3oool4003o0080003o103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080003o1000
o`020?ooo`@00?l00P3oool4003o0080oooo1000o`000`3oool000000?oo
o`040?ooo`00103oool00`000000oooo003o0003003o0080oooo1000o`02
0?ooo`@00?l00P3oool2003o00<0003o00<0oooo0?l0003o00000P3o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l000040?ooo`000?l0003o0000o`800?l00P3oool4003o0080oooo1000
o`020?ooo`@00?l000<0oooo0000003oool0103oool000@0oooo00<00000
0?ooo`3oool00P00o`040?ooo`800?l0103oool2003o00@0oooo00@00?l0
0000o`000?l0003o0P3oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`000P3oool30000o`03003o003o
ool0oooo0080oooo0P00o`040?ooo`800?l0103oool2003o0080oooo00<0
00000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool04P3oool2
0000oi@0oooo0P000?lD0?ooo`030000003oool0oooo00<0oooo00040?oo
o`030000003oool0oooo0140oooo0P000?nF0?ooo`80003o4`3oool00`00
0000oooo0?ooo`030?ooo`00103oool00`000000oooo0?ooo`02003o00@0
oooo0P00o`040?ooo`800?l00P3oool30000o`030?l0003oool0oooo0080
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo00@0o`000000o`000?l0003o0P3oool2003o
00@0oooo0P00o`040?ooo`800?l00P3oool00`000000oooo0?ooo`030?oo
o`00103oool00`000000oooo003o0003003o0080oooo1000o`020?ooo`@0
0?l000<0oooo0000o`000?l00`3o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`<0
o`000P000?l00`3oool00?l0003o0002003o0080oooo1000o`020?ooo`@0
0?l000<0oooo0000003oool0103oool000@0oooo00<000000?ooo`00o`00
0`00o`020?ooo`@00?l00P3oool4003o0080003o103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P000?l4003o0080oooo1000o`020?ooo`@00?l0
00<0oooo0000003oool0103oool000@0oooo00<000000?ooo`3oool00P00
o`040?ooo`800?l0103oool2003o00040?ooo`000?l0oooo0?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l00080oooo00@0003o0?ooo`00o`00
0?l0103oool2003o00@0oooo0P00o`020?ooo`030000003oool0oooo00<0
oooo00040?ooo`030000003oool0oooo00h0oooo0P000?nL0?ooo`80003o
403oool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo0?oo
o`0=0?ooo`80003oWP3oool20000o`l0oooo00<000000?ooo`3oool00`3o
ool000@0oooo00<000000?ooo`3oool00P00o`040?ooo`800?l0103oool3
0000o`<0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`000`3oool3
0000o`@0oooo0P00o`040?ooo`800?l00P3oool00`000000oooo0?ooo`03
0?ooo`00103oool00`000000oooo003o0003003o0080oooo1000o`020?oo
o`040?l000000?l0003o0?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool0103o0000003o0000o`3o00020?ooo`@00?l00P3o
ool4003o00030?ooo`000000oooo00@0oooo00040?ooo`030000003oool0
0?l000<00?l00P3oool4003o0080oooo0P000?l20?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool20?l00080003o0P3oool4
003o0080oooo1000o`000`3oool000000?ooo`040?ooo`00103oool00`00
0000oooo0?ooo`02003o00@0oooo0P00o`030?ooo`030000o`3o0000o`00
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00040000o`3oool0oooo0?ooo`800?l0103oool2003o0080oooo00<00000
0?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool02P3oool20000
oj@0oooo0P000?l<0?ooo`030000003oool0oooo00<0oooo00040?ooo`03
0000003oool0oooo00X0oooo00<0003o0?ooo`3oool0Y03oool00`000?l0
oooo0?ooo`0:0?ooo`030000003oool0oooo00<0oooo00040?ooo`030000
003oool0oooo00800?l0103oool2003o00040?ooo`000?l0003o0?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`0000@0oooo0000o`000?l0oooo0P00o`040?ooo`800?l00P3oool00`00
0000oooo0?ooo`030?ooo`00103oool00`000000oooo003o0003003o0080
oooo1000o`000`000?l0oooo0?l000030?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l000030?ooo`000?l00?l000<0
0?l00P3oool4003o00030?ooo`000000oooo00@0oooo00040?ooo`030000
003oool00?l000<00?l00P3oool3003o0080003o00<0oooo0?l0003o0000
0P3o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00000`3oool0003o0000o`03003o0080oooo1000o`000`3oool00000
0?ooo`040?ooo`00103oool00`000000oooo0?ooo`02003o00@0oooo0P00
o`0010000?l0oooo0?ooo`3oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000<0oooo00<0003o003o0000o`00
103oool2003o0080oooo00<000000?ooo`3oool00`3oool000@0oooo00<0
00000?ooo`3oool01`3oool20000ojX0oooo0P000?l90?ooo`030000003o
ool0oooo00<0oooo00040?ooo`030000003oool0oooo00L0oooo00<0003o
0?ooo`3oool0ZP3oool00`000?l0oooo0?ooo`070?ooo`030000003oool0
oooo00<0oooo00040?ooo`030000003oool0oooo00800?l0103oool20000
o`@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80003o103oool2003o0080oooo00<000000?oo
o`3oool00`3oool000@0oooo00<000000?ooo`00o`000`00o`020?ooo`04
0?l000000?l0003o0?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`040?l000000?l0003o
0?l00080oooo1000o`000`3oool000000?ooo`040?ooo`00103oool00`00
0000oooo003o0003003o0080oooo00@0o`000000o`3o0000o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo0P3o000010000?l0o`000?ooo`3oool4003o00030?ooo`00
0000oooo00@0oooo00040?ooo`030000003oool0oooo00800?l00`3oool2
0000o`030?l0003oool0oooo0080oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`030?l000000?l0
003o00<0oooo0P00o`020?ooo`030000003oool0oooo00<0oooo00040?oo
o`030000003oool0oooo00D0oooo00<0003o0?ooo`3oool0[P3oool00`00
0?l0oooo0?ooo`050?ooo`030000003oool0oooo00<0oooo00040?ooo`03
0000003oool0oooo00@0oooo0P000?n`0?ooo`80003o1P3oool00`000000
oooo0?ooo`030?ooo`00103oool00`000000oooo0?ooo`02003o0080oooo
00@0003o0?ooo`3o0000o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0000103oool0
003o0?ooo`3oool2003o0080oooo00<000000?ooo`3oool00`3oool000@0
oooo00<000000?ooo`00o`000`00o`020000o`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020000o`@00?l000<0oooo0000003oool0103oool000@0oooo
00<000000?ooo`00o`000`00o`000`000?l0oooo0?l000030?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`0000<0oooo0000o`00o`000`00o`000`3oool00000
0?ooo`040?ooo`00103oool00`000000oooo0?ooo`02003o0080003o0P3o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`000P3oool20000o`800?l00P3o
ool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo0?ooo`02
0?ooo`030000o`3oool0oooo0;@0oooo00<0003o0?ooo`3oool00P3oool0
0`000000oooo0?ooo`030?ooo`00103oool010000000oooo0?ooo`3oool2
0000okH0oooo0P000?l30?ooo`030000003oool0oooo00<0oooo00040?oo
o`040000003oool0oooo003o0080003o0`3oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`000`3oool20000o`04003o003oool0oooo000000D0oooo0004
0?ooo`030000003oool00?l000<0003o0P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool20000o`800?l000<0oooo0000003oool0103oool0
00@0oooo00<000000?ooo`00o`000P000?l00`00o`00oooo0?ooo`040?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool20000o`800?l000<0oooo0000
003oool0103oool000@0oooo00<000000?ooo`3oool00P000?l40?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`050000o`00o`00oooo0?oo
o`0000001@3oool000@0oooo00<000000?ooo`3oool00P000?nh0?ooo`80
003o0P3oool00`000000oooo0?ooo`030?ooo`00103oool010000000oooo
0?ooo`000?nj0?ooo`040000o`3oool0oooo000000D0oooo00040?ooo`05
0000003oool0003o0000o`3o0000103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20000o`80oooo00<000000?ooo`3oool00`3oool000@0
oooo00@000000?ooo`000?l0003o0P3o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`060?l000000?l0003o0000o`3oool000001@3o
ool000@0oooo00@000000?ooo`000?l0003o0P3o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`80o`000P000?l00`3oool000000?oo
o`040?ooo`00103oool01@000000oooo0000o`000?l0o`0000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo00D0o`000000o`000?l0oooo
000000050?ooo`00103oool010000000003o0000o`000?nj0?ooo`80003o
00<0oooo0000003oool0103oool000@0oooo00<000000000o`000?l0^`3o
ool20000o`030?ooo`000000oooo00@0oooo00040?ooo`03000000000?l0
003o0080o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000030000o`3oool0000000D0oooo00040?ooo`03000000000?l0003o
00<0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool30?l0
0080003o00<000000?ooo`3oool00`3oool000@0oooo00<000000000o`3o
00000`3o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`0000<0003o0000003oool0103oool000@0oooo00<000000000o`3oool0
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
0P000?l00`000000oooo0?ooo`030?ooo`00103oool00`000000003o0?oo
o`2l0?ooo`80003o00<000000?ooo`3oool00`3oool000@0oooo00<00000
0000o`3oool0_03oool20000o`030000003oool0oooo00<0oooo00040?oo
o`03000000000?l0oooo0080o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l00080003o00<000000?ooo`3oool00`3oool000@0
oooo00<000000000o`3o00000`3o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`<0o`000P000?l00`000000oooo0?ooo`030?ooo`00
103oool00`000000003o0?l000030?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo0`3o00020000o`030000003oool0oooo00<0oooo
00040?ooo`03000000000?l0oooo0080o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l00080003o00<000000?ooo`3oool00`3o
ool000@0oooo00<000000000o`3oool0_@3oool00`000?l000000?ooo`04
0?ooo`00103oool00`000000003o0?ooo`2m0?ooo`030000o`000000oooo
00@0oooo00030?ooo`040000o`000000003o0?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000030?ooo`000?l00000
00D0oooo00030?ooo`030000o`000000oooo00@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l000030000o`000000oooo00@0
oooo00030?ooo`030000o`000000oooo00@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l000030000o`000000oooo00@0oooo
00030?ooo`040000o`000000oooo0?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000030?ooo`000?l0000000D0oooo
00030?ooo`030000o`000000oooo0;h0oooo00<0003o0000003oool0103o
ool000<0oooo00<0003o0000003oool0_P3oool00`000?l000000?ooo`04
0?ooo`000`3oool010000?l000000?ooo`3oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00000`3oool0003o00000005
0?ooo`000`3oool00`000?l000000?ooo`040?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00000`000?l000000?ooo`040?oo
o`000`3oool00`000?l000000?ooo`040?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00000`000?l000000?ooo`040?ooo`00
0`3oool010000?l000000000o`3oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00000`3oool0003o000000050?ooo`00
103oool00`000000003o0?ooo`2m0?ooo`030000o`000000oooo00@0oooo
00040?ooo`03000000000?l0oooo0;d0oooo00<0003o0000003oool0103o
ool000@0oooo00<000000000o`3oool00P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`000P000?l00`000000oooo0?ooo`03
0?ooo`00103oool00`000000003o0?l000030?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo0`3o00020000o`030000003oool0oooo
00<0oooo00040?ooo`03000000000?l0o`0000<0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool30?l00080003o00<000000?ooo`3o
ool00`3oool000@0oooo00<000000000o`3oool00P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`000P000?l00`000000oooo
0?ooo`030?ooo`00103oool00`000000003o0?ooo`2l0?ooo`80003o00<0
00000?ooo`3oool00`3oool000@0oooo00<000000000o`3oool0_03oool2
0000o`030000003oool0oooo00<0oooo00040?ooo`03000000000?l0oooo
0080o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
0080003o00<000000?ooo`3oool00`3oool000@0oooo00<000000000o`3o
00000`3o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`<0
o`000P000?l00`000000oooo0?ooo`030?ooo`00103oool00`000000003o
0000o`030?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
0`3o00020000o`030000003oool0oooo00<0oooo00040?ooo`030000003o
ool0003o0080o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000030000o`3oool0000000D0oooo00040?ooo`03000000000?l0
003o0;/0oooo0P000?l00`3oool000000?ooo`040?ooo`00103oool01000
0000003o0000o`000?nj0?ooo`80003o00<0oooo0000003oool0103oool0
00@0oooo00D000000?ooo`000?l0003o0?l000040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`050?l000000?l0003o0?ooo`0000001@3o
ool000@0oooo00@000000?ooo`000?l0003o0P3o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`80o`000P000?l00`3oool000000?oo
o`040?ooo`00103oool010000000oooo0000o`000?l20?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo00H0o`000000o`000?l0003o
0?ooo`0000050?ooo`00103oool01@000000oooo0000o`000?l0o`0000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P000?l20?ooo`03
0000003oool0oooo00<0oooo00040?ooo`040000003oool0oooo0000okT0
oooo0P000?l20?ooo`030000003oool0oooo00<0oooo00040?ooo`030000
003oool0oooo0080003o^03oool20000o`80oooo00<000000?ooo`3oool0
0`3oool000@0oooo00D000000?ooo`3oool00?l00000o`040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`050000o`00o`00oooo0?ooo`00
00001@3oool000@0oooo00<000000?ooo`00o`000P000?l00`00o`00oooo
0?ooo`040?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool20000o`800?l0
00<0oooo0000003oool0103oool000@0oooo00<000000?ooo`00o`000`00
0?l20?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`80003o0P00
o`000`3oool000000?ooo`040?ooo`00103oool010000000oooo0?ooo`00
o`020000o`<0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000<0oooo0P00
0?l01000o`00oooo0?ooo`0000050?ooo`00103oool010000000oooo0?oo
o`3oool20000okH0oooo0P000?l30?ooo`030000003oool0oooo00<0oooo
00040?ooo`030000003oool0oooo0080oooo00<0003o0?ooo`3oool0]03o
ool00`000?l0oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo0004
0?ooo`030000003oool0oooo00800?l00P000?l20?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00020?ooo`80003o0P00o`020?ooo`030000003oool0
oooo00<0oooo00040?ooo`030000003oool00?l000<00?l000<0003o0?oo
o`3o00000`3o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l000030?ooo`000?l00?l0
00<00?l000<0oooo0000003oool0103oool000@0oooo00<000000?ooo`00
o`000`00o`020000o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020000o`@0
0?l000<0oooo0000003oool0103oool000@0oooo00<000000?ooo`3oool0
0P00o`020?ooo`040000o`3oool0o`000?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`0000@0oooo0000o`3oool0oooo0P00o`020?ooo`030000003oool0oooo
00<0oooo00040?ooo`030000003oool0oooo00@0oooo0P000?n`0?ooo`80
003o1P3oool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo
0?ooo`050?ooo`030000o`3oool0oooo0:h0oooo00<0003o0?ooo`3oool0
1@3oool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo0?oo
o`02003o00<0oooo0P000?l00`3o0000oooo0?ooo`020?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool00`3o0000003o0000o`030?ooo`800?l00P3oool00`000000oooo0?oo
o`030?ooo`00103oool00`000000oooo003o0003003o0080oooo00@0o`00
0000o`3o0000o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo0P3o000010000?l0o`000?oo
o`3oool4003o00030?ooo`000000oooo00@0oooo00040?ooo`030000003o
ool00?l000<00?l00P3oool0103o0000003o0000o`3o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool0103o0000003o0000o`3o00020?ooo`@00?l000<0oooo0000003o
ool0103oool000@0oooo00<000000?ooo`3oool00P00o`040?ooo`80003o
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P000?l40?ooo`800?l00P3oool00`000000oooo
0?ooo`030?ooo`00103oool00`000000oooo0?ooo`070?ooo`030000o`3o
ool0oooo0:X0oooo00<0003o0?ooo`3oool01`3oool00`000000oooo0?oo
o`030?ooo`00103oool00`000000oooo0?ooo`070?ooo`80003oZP3oool2
0000o`T0oooo00<000000?ooo`3oool00`3oool000@0oooo00<000000?oo
o`3oool00P00o`040?ooo`800?l000@0003o0?ooo`3oool0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0003
0?ooo`030000o`00o`000?l000@0oooo0P00o`020?ooo`030000003oool0
oooo00<0oooo00040?ooo`030000003oool00?l000<00?l00P3oool3003o
0080003o00<0oooo0?l0003o00000P3o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00000`3oool0003o0000o`03003o
0080oooo1000o`000`3oool000000?ooo`040?ooo`00103oool00`000000
oooo003o0003003o0080oooo1000o`000`000?l0oooo0?l000030?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00003
0?ooo`000?l00?l000<00?l00P3oool4003o00030?ooo`000000oooo00@0
oooo00040?ooo`030000003oool0oooo00800?l0103oool2003o00040?oo
o`000?l0003o0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0
oooo0P3o00040?ooo`80o`0000@0oooo0000o`000?l0oooo0P00o`040?oo
o`800?l00P3oool00`000000oooo0?ooo`030?ooo`00103oool00`000000
oooo0?ooo`0:0?ooo`030000o`3oool0oooo0:@0oooo00<0003o0?ooo`3o
ool02P3oool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo
0?ooo`0:0?ooo`80003oY03oool20000o``0oooo00<000000?ooo`3oool0
0`3oool000@0oooo00<000000?ooo`3oool00P00o`040?ooo`800?l00`3o
ool00`000?l0o`000?l000040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o000010000?l0oooo0?ooo`3oool2003o00@0oooo
0P00o`020?ooo`030000003oool0oooo00<0oooo00040?ooo`030000003o
ool00?l000<00?l00P3oool4003o0080oooo0P000?l20?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool20?l00080003o0P3o
ool4003o0080oooo1000o`000`3oool000000?ooo`040?ooo`00103oool0
0`000000oooo003o0003003o0080oooo1000o`020?ooo`040?l000000?l0
003o0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool0103o0000003o0000o`3o00020?ooo`@00?l00P3oool4003o00030?oo
o`000000oooo00@0oooo00040?ooo`030000003oool0oooo00800?l0103o
ool2003o00@0oooo0`000?l30?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000<0oooo0`000?l40?ooo`800?l0103oool2003o0080oooo00<0
00000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool03@3oool2
0000oih0oooo0P000?l?0?ooo`030000003oool0oooo00<0oooo00040?oo
o`030000003oool0oooo00h0oooo0P000?nL0?ooo`80003o403oool00`00
0000oooo0?ooo`030?ooo`00103oool00`000000oooo0?ooo`02003o00@0
oooo0P00o`040?ooo`800?l000@0oooo0000o`3oool0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`000P3oool010000?l0oooo003o0000o`04
0?ooo`800?l0103oool2003o0080oooo00<000000?ooo`3oool00`3oool0
00@0oooo00<000000?ooo`00o`000`00o`020?ooo`@00?l00P3oool4003o
0080003o103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l0
0080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P000?l4003o
0080oooo1000o`020?ooo`@00?l000<0oooo0000003oool0103oool000@0
oooo00<000000?ooo`00o`000`00o`020?ooo`@00?l00P3oool4003o0003
0?ooo`000?l0003o00<0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080
oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0
o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool30?l00080
003o00<0oooo003o0000o`000P00o`020?ooo`@00?l00P3oool4003o0003
0?ooo`000000oooo00@0oooo00040?ooo`030000003oool0oooo00800?l0
103oool2003o00@0oooo0P00o`020?ooo`<0003o00<0o`000?ooo`3oool0
0P3oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool0103o0000003o0000o`000?l20?ooo`80
0?l0103oool2003o00@0oooo0P00o`020?ooo`030000003oool0oooo00<0
oooo00040?ooo`030000003oool0oooo0140oooo0P000?nF0?ooo`80003o
4`3oool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo0?oo
o`0B0?ooo`80003oU03oool20000oa@0oooo00<000000?ooo`3oool00`3o
ool000@0oooo00<000000?ooo`3oool00P00o`040?ooo`800?l0103oool2
003o00@0oooo00@00?l00000o`000?l0003o0P3oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`000P3o
ool30000o`03003o003oool0oooo0080oooo0P00o`040?ooo`800?l0103o
ool2003o0080oooo00<000000?ooo`3oool00`3oool000@0oooo00<00000
0?ooo`00o`000`00o`020?ooo`@00?l00P3oool4003o0080oooo0P00o`03
0000o`030?ooo`3o0000o`000080o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o0000103oool0003o0000o`00
0?l2003o0080oooo1000o`020?ooo`@00?l00P3oool4003o00030?ooo`00
0000oooo00@0oooo00040?ooo`030000003oool00?l000<00?l00P3oool4
003o0080oooo1000o`020?ooo`@00?l00P000?l40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P000?l4
003o0080oooo1000o`020?ooo`@00?l00P3oool4003o00030?ooo`000000
oooo00@0oooo00040?ooo`030000003oool0oooo00800?l0103oool2003o
00@0oooo0P00o`040?ooo`800?l00P3oool20000o`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00020000
o`80oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo0P00o`020?oo
o`030000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo01H0
oooo0`000?n:0?ooo`<0003o603oool00`000000oooo0?ooo`030?ooo`00
103oool00`000000oooo0?ooo`0G0?ooo`80003oRP3oool20000oaT0oooo
00<000000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool00P00
o`040?ooo`800?l0103oool2003o00@0oooo0P00o`040?ooo`80003o103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P00
0?l40?ooo`800?l0103oool2003o00@0oooo0P00o`040?ooo`800?l00P3o
ool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo003o0003
003o0080oooo1000o`020?ooo`@00?l00P3oool4003o0080oooo0P00o`03
0000o`030?ooo`3o0000o`000080o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`0000@0oooo0000o`000?l0003o0P00o`020?ooo`@00?l00P3o
ool4003o0080oooo1000o`020?ooo`@00?l000<0oooo0000003oool0103o
ool000@0oooo00<000000?ooo`00o`000`00o`020?ooo`@00?l00P3oool4
003o0080oooo1000o`020?ooo`800?l010000?l40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l000@0003o0P00o`020?ooo`@00?l00P3oool4
003o0080oooo1000o`020?ooo`@00?l000<0oooo0000003oool0103oool0
00@0oooo00<000000?ooo`3oool00P00o`040?ooo`800?l0103oool2003o
00@0oooo0P00o`040?ooo`800?l000@0oooo0000o`000?l0003o0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00030000o`030?ooo`00o`00
0?l000@0oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo0P00o`02
0?ooo`030000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo
01`0oooo10000?ml0?ooo`@0003o7P3oool00`000000oooo0?ooo`030?oo
o`00103oool00`000000oooo0?ooo`0M0?ooo`<0003oO03oool30000oal0
oooo00<000000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool0
0P00o`040?ooo`800?l0103oool2003o00@0oooo0P00o`040?ooo`800?l0
103oool00`00o`00003o0000o`030?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000<0oooo
0P000?l00`00o`00oooo0?ooo`020?ooo`800?l0103oool2003o00@0oooo
0P00o`040?ooo`800?l0103oool2003o0080oooo00<000000?ooo`3oool0
0`3oool000@0oooo00<000000?ooo`00o`000`00o`020?ooo`@00?l00P3o
ool4003o0080oooo1000o`020?ooo`@00?l00P3oool3003o00<0003o103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000`000?l3003o0080oooo1000o`020?ooo`@00?l00P3o
ool4003o0080oooo1000o`020?ooo`@00?l000<0oooo0000003oool0103o
ool000@0oooo00<000000?ooo`00o`000`00o`020?ooo`@00?l00P3oool4
003o0080oooo1000o`020?ooo`@00?l00P3oool3003o00@0003o0`3o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`<0o`0010000?l3003o0080oooo1000o`020?ooo`@00?l00P3oool4
003o0080oooo1000o`020?ooo`@00?l000<0oooo0000003oool0103oool0
00@0oooo00<000000?ooo`3oool00P00o`040?ooo`800?l0103oool2003o
00@0oooo0P00o`040?ooo`800?l0103oool2003o0080oooo0`000?l00`3o
0000oooo0?ooo`020?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`040?l000000?l0003o0000o`80oooo0P00o`04
0?ooo`800?l0103oool2003o00@0oooo0P00o`040?ooo`800?l0103oool2
003o0080oooo00<000000?ooo`3oool00`3oool000@0oooo00<000000?oo
o`3oool08`3oool40000ofh0oooo10000?lU0?ooo`030000003oool0oooo
00<0oooo00040?ooo`030000003oool0oooo02@0oooo1@000?mZ0?ooo`D0
003o9P3oool00`000000oooo0?ooo`030?ooo`00103oool00`000000oooo
0?ooo`02003o00@0oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo
0P00o`040?ooo`800?l0103oool2003o00@0003o0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0003o0P00o`040?ooo`800?l0
103oool2003o00@0oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo
0P00o`020?ooo`030000003oool0oooo00<0oooo00040?ooo`030000003o
ool00?l000<00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l00P3o
ool4003o0080oooo1000o`020?ooo`@00?l000@0oooo0000o`000?l0003o
0P3o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo
103o00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`00
0P3oool40?l00080oooo103o00020?ooo`@0o`000P3oool20?l000<0003o
00<0oooo003o0000o`000P00o`020?ooo`@00?l00P3oool4003o0080oooo
1000o`020?ooo`@00?l00P3oool4003o0080oooo1000o`000`3oool00000
0?ooo`040?ooo`00103oool00`000000oooo003o0003003o0080oooo1000
o`020?ooo`@00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l00P3o
ool4003o0080oooo10000?l20?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40000o`80oooo1000o`020?ooo`@00?l00P3oool4003o0080oooo1000
o`020?ooo`@00?l00P3oool4003o0080oooo1000o`000`3oool000000?oo
o`040?ooo`00103oool00`000000oooo0?ooo`02003o00@0oooo0P00o`04
0?ooo`800?l0103oool2003o00@0oooo0P00o`040?ooo`800?l0103oool2
003o00@0oooo1@000?l00`3oool0o`000?l000040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0004
0?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool2
0?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o0000
0`3oool0003o0000o`030000o`@0oooo0P00o`040?ooo`800?l0103oool2
003o00@0oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo0P00o`02
0?ooo`030000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo
02`0oooo1@000?mJ0?ooo`D0003o;P3oool00`000000oooo0?ooo`030?oo
o`00103oool00`000000oooo0?ooo`0^0?ooo`D0003oEP3oool50000oc00
oooo00<000000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool0
0P00o`040?ooo`800?l0103oool2003o00@0oooo0P00o`040?ooo`800?l0
103oool2003o00@0oooo0P00o`040?ooo`800?l0103oool50000o`030?oo
o`3o0000o`0000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00
103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo
0P3o00000`3oool0003o0000o`030000o`@0oooo0P00o`040?ooo`800?l0
103oool2003o00@0oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo
0P00o`040?ooo`800?l00P3oool00`000000oooo0?ooo`030?ooo`00103o
ool00`000000oooo003o0003003o0080oooo1000o`020?ooo`@00?l00P3o
ool4003o0080oooo1000o`020?ooo`@00?l00P3oool4003o0080oooo1000
o`020?ooo`<00?l01P000?l00`3o0000oooo0?ooo`040?l00080oooo103o
00020?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`000P3o
ool40?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o
00020?ooo`@0o`000P3oool00`3o0000003o0000o`040000o`<00?l00P3o
ool4003o0080oooo1000o`020?ooo`@00?l00P3oool4003o0080oooo1000
o`020?ooo`@00?l00P3oool4003o0080oooo1000o`000`3oool000000?oo
o`040?ooo`00103oool00`000000oooo003o0003003o0080oooo1000o`02
0?ooo`@00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l00P3oool4
003o0080oooo1000o`020?ooo`@00?l000<0oooo0000o`000?l010000?l0
0`3oool0o`000?l000020?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0002
0?ooo`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`0000<0oooo
0000o`000?l010000?l00`3oool00?l0003o0002003o0080oooo1000o`02
0?ooo`@00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l00P3oool4
003o0080oooo1000o`020?ooo`@00?l000<0oooo0000003oool0103oool0
00@0oooo00<000000?ooo`3oool00P00o`040?ooo`800?l0103oool2003o
00@0oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo0P00o`040?oo
o`800?l0103oool2003o00@0oooo00<0o`000000o`000?l00`000?l20?l0
00@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?oo
o`80o`00103oool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l0
00@0oooo0P3o00040?ooo`80o`001@000?l00`3o0000oooo0?ooo`020?oo
o`800?l0103oool2003o00@0oooo0P00o`040?ooo`800?l0103oool2003o
00@0oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo0P00o`020?oo
o`030000003oool0oooo00<0oooo00040?ooo`030000003oool0oooo03T0
oooo1@000?m00?ooo`D0003o>`3oool00`000000oooo0?ooo`030?ooo`00
103oool00`000000oooo0?ooo`0k0?ooo`D0003o?03oool50000ocd0oooo
00<000000?ooo`3oool00`3oool000@0oooo00<000000?ooo`3oool00P00
o`040?ooo`800?l0103oool2003o00@0oooo0P00o`040?ooo`800?l0103o
ool2003o00@0oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo0P00
o`040?ooo`03003o00000?l0003o00@0003o00<00?l00?ooo`3oool00P3o
ool20?l000@0oooo0P3o00040?ooo`80o`00103oool20?l000@0oooo0P3o
00040?ooo`80o`00103oool20?l000@0oooo0P3o00040?ooo`03003o0000
0?l0003o00@0003o00<00?l00?ooo`3oool00P3oool2003o00@0oooo0P00
o`040?ooo`800?l0103oool2003o00@0oooo0P00o`040?ooo`800?l0103o
ool2003o00@0oooo0P00o`040?ooo`800?l0103oool2003o0080oooo00<0
00000?ooo`3oool00`3oool000@0oooo00<000000?ooo`00o`000`00o`02
0?ooo`@00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l00P3oool4
003o0080oooo1000o`020?ooo`@00?l00P3oool4003o0080oooo1000o`02
0?ooo`@00?l020000?l40?l00080oooo103o00020?ooo`@0o`000P3oool4
0?l00080oooo103o00020?ooo`@0o`000P3oool40?l00080oooo103o0008
0000o`@00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l00P3oool4
003o0080oooo1000o`020?ooo`@00?l00P3oool4003o0080oooo1000o`02
0?ooo`@00?l00P3oool4003o00030?ooo`000000oooo00@0oooo00040?oo
o`030000003oool00?l000<00?l00P3oool4003o0080oooo1000o`020?oo
o`@00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l00P3oool4003o
0080oooo1000o`020?ooo`@00?l00P3oool4003o0080oooo00<00?l00000
o`000?l020000?l00`3oool0o`000?l000020?l00080oooo103o00020?oo
o`@0o`000P3oool40?l00080oooo103o00020?ooo`@0o`0000<0oooo0000
o`000?l020000?l00`00o`00oooo0?ooo`04003o0080oooo1000o`020?oo
o`@00?l00P3oool4003o0080oooo1000o`020?ooo`@00?l00P3oool4003o
0080oooo1000o`020?ooo`@00?l00P3oool4003o0080oooo1000o`000`3o
ool000000?ooo`040?ooo`00103oool00`000000oooo0?ooo`02003o00@0
oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo0P00o`040?ooo`80
0?l0103oool2003o00@0oooo0P00o`040?ooo`800?l0103oool2003o00@0
oooo0P00o`040?ooo`800?l00P3oool:0000o`@0oooo0P3o00040?ooo`80
o`00103oool20?l000@0oooo0P3o00040?ooo`X0003o0P3oool2003o00@0
oooo0P00o`040?ooo`800?l0103oool2003o00@0oooo0P00o`040?ooo`80
0?l0103oool2003o00@0oooo0P00o`040?ooo`800?l0103oool2003o00@0
oooo0P00o`040?ooo`800?l00P3oool00`000000oooo0?ooo`030?ooo`00
103oool00`000000oooo0?ooo`1;0?ooo`l0003o203oool?0000odd0oooo
00<000000?ooo`3oool00`3oool000@0oooo`P0000050?ooo`00H03oool:
0000of40oooo003;0?ooo`00b`3oool00</0oooo0000\
\>"], "Graphics",
    Evaluatable->False,
    ImageSize->{203, 203},
    ImageMargins->{{0, 0}, {0, 0}},
    ImageRegion->{{0, 1}, {0, 1}}],
  "    \n\t\t",
  StyleBox["Figure 2.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "  ",
  Cell[BoxData[
      \(Circle\  \[TildeTilde] \ \[Rho]\ Square\  = \ \(\[Rho]*4\  = \ 
          3.171875\)\)]],
  "  "
}], "Text"],

Cell[TextData[{
  StyleBox["Monte Carlo Method for ",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  Cell[BoxData[
      StyleBox["\[Pi]",
        FontWeight->"Bold",
        FontColor->RGBColor[0, 0, 1]]]],
  "\n\n\tMonte Carlo methods can be thought of as statistical simulation \
methods that utilize a sequences of random numbers to perform the simulation. \
 The name \"Monte Carlo'' was coined by ",
  ButtonBox["Nicholas Constantine Metropolis",
    ButtonData:>{
      URL[ "http://scienceworld.wolfram.com/biography/Metropolis.html"], 
      None},
    ButtonStyle->"Hyperlink"],
  " (1915-1999) and inspired by ",
  ButtonBox["Stanslaw Ulam",
    ButtonData:>{
      URL[ 
      "http://www-groups.dcs.st-and.ac.uk/~history/Mathematicians/Ulam.html"],
       None},
    ButtonStyle->"Hyperlink"],
  " (1909-1986), because of the similarity of statistical simulation to games \
of chance, and because Monte Carlo is a center for gambling and games of \
chance.  In a typical process one compute the number of points in a set ",
  StyleBox["A",
    FontFamily->"Courier New",
    FontWeight->"Bold"],
  " that lies inside box ",
  StyleBox["R",
    FontFamily->"Courier New",
    FontWeight->"Bold"],
  ".  The ratio of the number of points that fall inside ",
  StyleBox["A",
    FontFamily->"Courier New",
    FontWeight->"Bold"],
  " to the total number of points tried is equal to the ratio of the two \
areas (or volume in 3 dimensions).  The accuracy of the ratio ",
  Cell[BoxData[
      \(\[Rho]\)]],
  " depends on the number of points used, with more points leading to a more \
accurate value. "
}], "Text"],

Cell[TextData[{
  "\tA simple Monte Carlo simulation to approximate the value of  ",
  Cell[BoxData[
      \(\[Pi]\)]],
  "  could involve randomly selecting points  ",
  Cell[BoxData[
      \({\((x\_i, y\_i)\)}\_\(i = 1\)\%n\)]],
  "  in the unit square and determining the ratio  ",
  Cell[BoxData[
      \(\[Rho] = m\/n\)]],
  ",  where ",
  Cell[BoxData[
      \(m\)]],
  " is number of points that satisfy  ",
  Cell[BoxData[
      \(x\_i\%2 + y\_i\%2 \[LessEqual] 1\)]],
  ".  In a typical simulation of sample size ",
  Cell[BoxData[
      \(n = 1000\)]],
  " there were ",
  Cell[BoxData[
      \(787\)]],
  " points satisfying  ",
  Cell[BoxData[
      \(x\_i\%2 + y\_i\%2 \[LessEqual] 1\)]],
  ",  shown in Figure 3.  Using this data, we obtain \n\t\n\t",
  Cell[BoxData[
      \(\[Rho] = \(m\/n\  = \ \(787\/1000\  = \ 0.787\)\)\)]],
  "  and   ",
  Cell[BoxData[
      \(\[Pi]\  \[TildeTilde] \ \[Rho]*4\  = \ \(0.787\ *4\  = \ 3.148\)\)]],
  "  \n\t\n\t\t",
  Cell[GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40003W0000ib000`400?l0
0000o`00003oi`3oool00>L0oooo003W0?ooo`00i`3oool00>L0oooo003W
0?ooo`00L`3oool2000000@0oooo0P0000040?ooo`800000G@3oool50000
00@0oooo001b0?ooo`040000003oool0oooo000000P0oooo00@000000?oo
o`3oool00000GP3oool00`000000oooo0?ooo`040?ooo`00LP3oool01000
0000oooo0?ooo`00000;0?ooo`030000003oool0oooo05`0oooo00<00000
0?ooo`3oool0103oool00780oooo00@000000?ooo`3oool000002@3oool2
000005l0oooo00<000000?ooo`3oool0103oool00780oooo00@000000?oo
o`3oool000002@3oool00`000000oooo0?ooo`1N0?ooo`030000003oool0
oooo00@0oooo001c0?ooo`8000002P3oool3000005d0oooo0P0000060?oo
o`00503oool00`000000oooo0?ooo`3@0?ooo`00503oool00`000000oooo
0?ooo`3@0?ooo`00503oool00`000000oooo0?ooo`3@0?ooo`00503oool0
0`000000oooo0?ooo`0d0?ooo`80o`00VP3oool001@0oooo00<000000?oo
o`3oool0303oool20?l002D0oooo1@3o00180?ooo`80o`002P3oool20?l0
00`0oooo0P3o000d0?ooo`003`3oool800000080o`002@0000040?l001P0
00000P3o0009000000L0o`00A@0000050?l000L000001@3o000600000080
o`000P0000040?l002<000000P3o00000`000000o`000?l0000300000003
0000o`000000000000D00000000D0?ooo`030000003oool0o`0000<0o`00
203oool40?l001L0oooo103o00080?ooo`L0o`00:P3oool00`000000oooo
0?ooo`0G0?ooo`H0o`001P3oool60?l000D0oooo103o00000`3oool0o`00
0?l000020?l001P0oooo0P3o00080?ooo`L0o`000P3oool00`000?l00000
0?ooo`050?ooo`00503oool00`000000oooo0?l000030?l000L0oooo103o
000H0?ooo`@0o`002@3oool20?l000030?ooo`3o0000o`000100oooo0P3o
000E0?ooo`80o`00703oool50?l000L0oooo1@3o00060?ooo`@0o`000P3o
ool20?l001P0oooo103o00070?ooo`L0o`000P3oool00`000?l000000?oo
o`050?ooo`00503oool00`000000oooo0?l000030?l000H0oooo103o000I
0?ooo`@0o`002`3oool40?l000h0oooo103o000C0?ooo`@0o`005@3oool2
0?l000D0oooo0P3o000:0?ooo`80o`002@3oool20?l00080oooo0P3o000F
0?ooo`80o`0000<0oooo0?l0003o00000P3o00080?ooo`D0o`000`3oool0
0`000?l000000?ooo`050?ooo`00503oool00`000000oooo0?l000030?l0
00H0oooo103o000I0?ooo`@0o`002`3oool40?l000h0oooo103o00030?oo
o`80o`003P3oool40?l000X0oooo0P3o00080?ooo`@0o`007P3oool50?l0
01<0oooo103o00000`3oool0o`000?l000090?ooo`@0o`00103oool00`00
0?l000000?ooo`050?ooo`00503oool00`000000oooo0?ooo`020?l000P0
oooo0P3o00080?ooo`80o`004@3oool20?l000d0oooo103o00090?ooo`80
o`000`3oool20?l000<0oooo103o00060?ooo`80o`001P3oool20?l000<0
oooo0P3o00050?ooo`@0o`001`3oool40?l001h0oooo1`3o000A0?ooo`@0
o`002P3oool60?l000@0oooo00<0003o0000003oool01@3oool001@0oooo
00<000000?ooo`3oool04`3oool40?l00200oooo1@3o00060?ooo`@0o`00
1`3oool50?l000@0oooo103o00090?ooo`@0o`00103oool40?l000P0oooo
0P3o000P0?ooo`L0o`004@3oool40?l000D0oooo0P3o00000`3oool0o`00
0?l000040?l000D0oooo00<0003o0000003oool01@3oool001@0oooo00<0
00000?ooo`3oool00`3oool20?l000h0oooo1P3o00070?ooo`80o`005@3o
ool60?l000D0oooo103o00080?ooo`D0o`000`3oool40?l000T0oooo103o
00050?ooo`80o`00;@3oool50?l00180oooo103o00030?ooo`P0o`001`3o
ool00`000?l000000?ooo`050?ooo`00503oool00`000000oooo0?ooo`02
0?ooo`@0o`001@3oool20?l000D0oooo203o00050?ooo`@0o`005@3oool5
0?l000H0oooo0P3o000:0?ooo`@0o`00103oool20?l000/0oooo0P3o000g
0?ooo`80o`004`3oool40?l000<0oooo1`3o00080?ooo`030000o`000000
oooo00D0oooo000D0?ooo`040000003oool0oooo0?ooo`D0o`00103oool4
0?l000<0oooo103o00000`3oool0o`000?l000020?l000D0oooo103o000G
0?ooo`80o`00503oool20?l001L0oooo0P3o00020?ooo`80o`000P3oool2
0?l00400oooo0P3o00050?ooo`80o`0000<0oooo0?l0003o00002@3oool0
0`000?l000000?ooo`050?ooo`00503oool00`000000oooo0?ooo`050?l0
00@0oooo1@3o00030?ooo`@0o`000P3oool20?l000L0oooo103o000j0?oo
o`80o`00203oool<0?l000030?ooo`3o0000o`000540oooo00<0003o0000
003oool01@3oool001@0oooo00<000000?ooo`3oool01@3o00030?ooo`D0
o`001@3oool20?l000d0oooo103o000I0?ooo`80o`007@3oool40?l000L0
oooo403o000^0?ooo`80o`00103oool20?l001X0oooo00<0003o0000003o
ool01@3oool001@0oooo00@000000?ooo`3oool0oooo103o00030?ooo`@0
o`003@3oool20?l000H0oooo1@3o000G0?ooo`@0o`002P3oool20?l00100
oooo103o00080?ooo`80o`000P3oool60?l000030?ooo`3o0000o`000080
o`006`3oool20?l000h0oooo303o00020?ooo`80o`00103oool20?l000l0
oooo00<0003o0000003oool01@3oool001@0oooo00<000000?ooo`3oool0
0P3oool20?l000D0oooo0P3o000=0?ooo`@0o`001P3oool50?l001H0oooo
103o00090?ooo`@0o`003P3oool40?l000h0oooo103o00030?ooo`80o`00
6`3oool40?l000L0oooo0P3o00030?ooo`d0o`0000<0oooo0?l0003o0000
0P3o00020?ooo`H0o`00303oool00`000?l000000?ooo`050?ooo`00503o
ool00`000000oooo0?ooo`020?ooo`80o`00503oool40?l000L0oooo103o
000G0?ooo`80o`002P3oool40?l00080oooo0P3o00090?ooo`@0o`003`3o
ool40?l000D0oooo0P3o000I0?ooo`@0o`0000<0oooo0?l0003o00000`3o
ool40?l00080oooo303o00020?ooo`@0o`000P3oool70?l000P0oooo0P3o
00000`3oool0003o000000060?ooo`00503oool010000000oooo0?ooo`3o
ool40?l001@0oooo0P3o00090?ooo`80o`009@3oool20?l00080oooo103o
00030?ooo`80o`000`3oool40?l00100oooo0P3o00050?ooo`@0o`00103o
ool20?l001<0oooo0P3o00000`3oool0o`000?l000020?l00080oooo103o
00030?ooo`@0o`000P3oool60?l00080oooo0P3o00040?ooo`H0o`001`3o
ool40?l000030000o`000000oooo00D0oooo000D0?ooo`040000003oool0
oooo0?ooo`@0o`002@3oool20?l001T0oooo0P3o000T0?ooo`@0o`000P3o
ool60?l000030?ooo`3o0000o`0001P0oooo103o00030?ooo`@0o`00103o
ool20?l000X0oooo0P3o00030?ooo`@0o`000`3oool20?l00080oooo1P3o
00040?ooo`@0o`002`3oool20?l000P0oooo103o00000`000?l000000?oo
o`050?ooo`00503oool00`000000oooo0?ooo`020?ooo`80o`002@3oool4
0?l000L0oooo0P3o000>0?ooo`@0o`00903oool20?l000<0oooo1`3o0000
0`3oool0o`000?l0000H0?ooo`80o`00103oool40?l000<0oooo103o0008
0?ooo`@0o`000`3oool20?l000L0oooo1P3o00060?ooo`80o`00503oool2
0?l000060?ooo`3o0000o`000?ooo`000?l000001P3oool001@0oooo00<0
00000?ooo`3oool0303oool50?l000H0oooo103o00050?ooo`80o`001P3o
ool40?l00180oooo0P3o000F0?ooo`X0o`007P3oool20?l000@0oooo103o
00080?ooo`@0o`00303oool40?l00140oooo0P3o000:0?ooo`@0o`000`3o
ool00`000?l000000?ooo`050?ooo`00503oool00`000000oooo0?ooo`0<
0?ooo`@0o`001`3oool40?l000@0oooo103o00060?ooo`80o`003@3oool2
0?l000<0oooo103o000H0?ooo`L0o`001P3oool20?l001d0oooo0P3o0007
0?ooo`80o`0000<0oooo0?l0003o00003P3oool20?l00140oooo103o0009
0?ooo`@0o`000`3oool00`000?l000000?ooo`050?ooo`00503oool00`00
0000oooo0?ooo`0=0?ooo`80o`002@3oool20?l000D0oooo103o00060?oo
o`80o`00303oool40?l00080oooo103o00090?ooo`80o`003`3oool40?l0
00H0oooo103o000T0?ooo`@0o`00503oool20?l000P0oooo0P3o00030?oo
o`@0o`002P3oool20?l000<0oooo0P000?l00`000000oooo0?ooo`040?oo
o`00503oool00`000000oooo0?ooo`0P0?ooo`80o`001P3oool40?l000/0
oooo103o00030?ooo`80o`002@3oool40?l000d0oooo1@3o00020?ooo`80
o`000P3oool40?l00180oooo0P3o00080?ooo`80o`001P3oool40?l001<0
oooo103o00060?ooo`@0o`000`3oool20?l00100oooo0P000?l00`000000
oooo0?ooo`040?ooo`00503oool00`000000oooo0?ooo`0X0?ooo`@0o`00
303oool20?l000l0oooo103o000<0?ooo`H0o`0000<0oooo0?l0003o0000
0P3o00020?ooo`80o`004P3oool40?l000H0oooo1P3o00040?ooo`80o`00
1`3oool20?l000/0oooo103o00040?ooo`H0o`005@3oool20000o`030000
0000o`00oooo00@0oooo000D0?ooo`030000003oool0oooo01`0oooo0P3o
000;0?ooo`<0o`007P3oool20?l000d0oooo1@3o00020?ooo`@0o`0000<0
oooo0?l0003o00001P3oool40?l000P0oooo1@3o00060?ooo`L0o`002`3o
ool40?l000/0oooo0P3o00040?ooo`H0o`00203oool20?l000/0oooo00D0
o`000000o`000?l00000003o00050?ooo`00503oool00`000000oooo0?oo
o`0K0?ooo`@0o`002P3oool60?l001X0oooo0P3o000?0?ooo`80o`001@3o
ool20?l000030?ooo`3o0000o`000080o`00103oool60?l000H0oooo1@3o
00080?ooo`H0o`002`3oool40?l000L0oooo0P3o00080?ooo`H0o`001`3o
ool40?l000T0oooo0P3o00020000o`030000003oool0oooo00@0oooo000D
0?ooo`040000003oool0oooo0?ooo`80o`00603oool40?l000T0oooo203o
000C0?ooo`80o`000`3oool40?l001P0oooo103o00040?ooo`H0o`000`3o
ool20?l000030?ooo`3o0000o`000080o`00303oool20?l000d0oooo0P3o
00070?ooo`@0o`00203oool40?l000P0oooo103o00090?ooo`80o`000P00
0?l00`000000oooo0?ooo`040?ooo`00503oool00`000000oooo0?ooo`04
0?l001P0oooo0P3o00090?ooo`T0o`004@3oool50?l00080oooo103o000I
0?ooo`80o`001P3oool40?l000<0oooo103o00000`3oool0o`000?l0000U
0?ooo`@0o`005@3oool20?l000/0oooo00@0o`000000o`000?l000001P3o
ool001@0oooo00<000000?ooo`3oool0103o000<0?ooo`80o`005@3oool4
0?l00080oooo0P3o000A0?ooo`H0o`000`3oool20?l001X0oooo0P3o0006
0?ooo`@0o`000`3oool40?l002T0oooo0P3o000T0?ooo`80003o00<00000
0?ooo`3oool0103oool001@0oooo00@000000?ooo`3oool0oooo0P3o0000
0`3oool0o`000?l000090?ooo`@0o`005@3oool20?l000L0oooo0P3o0009
0?ooo`80o`000P3oool50?l001@0oooo0P3o00090?ooo`@0o`0000<0oooo
0?l0003o00000P3o00000`3oool0o`000?l000050?ooo`@0o`009@3oool2
0?l002L0oooo0P000?l00`000000oooo0?ooo`040?ooo`00503oool00`00
0000oooo0?ooo`030?ooo`@0o`00203oool40?l000`0oooo0P3o000?0?oo
o`@0o`001`3oool40?l00080oooo0P3o000E0?ooo`@0o`00203oool:0?l0
00030?ooo`3o0000o`0000D0oooo103o00090?ooo`80o`000`3oool20?l0
01<0oooo103o000D0?ooo`80o`00403oool20000o`030000003oool0oooo
00@0oooo000D0?ooo`030000003oool0oooo00<0oooo103o00090?ooo`80
o`00303oool40?l000h0oooo103o00070?ooo`@0o`006@3oool40?l000T0
oooo0P3o00000`3oool0o`000?l000080?l000@0oooo103o00080?ooo`T0
o`004P3oool40?l001<0oooo103o000:0?ooo`<0o`0000D0oooo0000o`00
0?l0003o000000060?ooo`00503oool00`000000oooo0?ooo`040?ooo`80
o`00603oool40?l000h0oooo103o00060?ooo`@0o`005@3oool20?l000@0
oooo0`3o00080?ooo`80o`000`3oool40?l000030?ooo`3o0000o`000080
o`001@3oool20?l000T0oooo2@3o000C0?ooo`80o`004`3oool50?l000T0
oooo1@3o00020000o`030?ooo`000000oooo00D0oooo000D0?ooo`030000
003oool0oooo01l0oooo0P3o000@0?ooo`80o`001P3oool40?l001D0oooo
103o00030?ooo`@0o`000`3oool20?l000030?ooo`3o0000o`000080o`00
203oool20?l00180oooo1`3o000Y0?ooo`@0o`002@3oool60?l00080003o
00<0oooo0000003oool01@3oool001@0oooo00<000000?ooo`3oool04@3o
ool20?l002@0oooo1P3o000E0?ooo`@0o`000`3oool40?l00080oooo203o
000O0?ooo`80o`00603oool20?l00180oooo0P3o000:0?ooo`D0o`0000D0
oooo0000o`000?l0oooo000000060?ooo`00503oool010000000oooo0?oo
o`3oool20?l000d0oooo103o000:0?ooo`80o`005P3oool60?l001L0oooo
0P3o00050?ooo`80o`000`3oool40?l000030?ooo`3o0000o`0000X0oooo
0`3o000/0?ooo`@0o`004P3oool20?l000X0oooo0P3o00020?ooo`050?l0
00000?l0003o0?ooo`0000001P3oool001@0oooo00<000000?ooo`3oool0
103o00090?ooo`80o`0000<0oooo0?l0003o00000P3o00090?ooo`@0o`00
5@3oool40?l002H0oooo0P3o000=0?ooo`D0o`00203oool20?l00240oooo
1P3o000?0?ooo`@0o`0000<0oooo0?l0003o00002@3oool01P3o0000003o
0000o`000?l0oooo000000H0oooo000D0?ooo`030000003oool0oooo00@0
o`00203oool40?l000030?ooo`3o0000o`0000@0o`001P3oool40?l001H0
oooo0P3o000K0?ooo`80o`006@3oool50?l000L0oooo103o000Q0?ooo`H0
o`003P3oool80?l000P0oooo00H0o`000000o`000?l0o`000?ooo`000006
0?ooo`00503oool010000000oooo0?ooo`3oool20?l000T0oooo103o0000
0`3oool0o`000?l000050?l000H0oooo0P3o000`0?ooo`80o`0000<0oooo
0?l0003o00000P3o00000`3oool0o`000?l0000F0?ooo`<0o`001`3oool5
0?l000d0oooo0P3o000D0?ooo`@0o`003`3oool20?l000030?ooo`3o0000
o`000080o`002@3oool20000o`80oooo00<000000?ooo`3oool0103oool0
01@0oooo00<000000?ooo`3oool0203oool20?l000<0oooo0P3o00030?oo
o`H0o`00603oool20?l001H0oooo0P3o00040?ooo`d0o`001P3oool20?l0
00P0oooo0P3o000=0?ooo`@0o`003@3oool40?l000L0oooo0P3o00040?oo
o`80o`001@3oool20?l000L0oooo0P3o000;0?ooo`80o`002P3oool20000
o`80oooo00<000000?ooo`3oool0103oool001@0oooo00<000000?ooo`3o
ool01P3oool50?l000T0oooo103o000G0?ooo`@0o`000`3oool20?l000l0
oooo103o00020?ooo`H0o`0000@0oooo0?l0003o0000oooo103o00050?oo
o`@0o`001P3oool40?l000d0oooo0P3o000>0?ooo`@0o`001P3oool40?l0
0080oooo103o000;0?ooo`D0o`002@3oool40?l000T0oooo0P000?l20?oo
o`030000003oool0oooo00@0oooo000D0?ooo`030000003oool0oooo00D0
oooo1P3o00030?ooo`80o`00103oool40?l000P0oooo0P3o000=0?ooo`@0
o`000P3oool60?l000D0oooo0P3o00050?ooo`@0o`000P3oool50?l000H0
oooo0P3o00060?ooo`@0o`001P3oool40?l001L0oooo0P3o00050?ooo`80
o`001`3oool40?l00080oooo103o00070?ooo`80o`0000<0oooo0?l0003o
00001P3o00070?ooo`@0o`00203oool30000o`80oooo00<000000?ooo`3o
ool0103oool001@0oooo00<000000?ooo`3oool01@3oool50?l000<0oooo
103o00020?ooo`@0o`00203oool40?l000d0oooo0P3o00030?ooo`L0o`00
0`3oool40?l000D0oooo0P3o00040?ooo`80o`001`3oool40?l000D0oooo
103o00060?ooo`@0o`003@3oool20?l000L0oooo103o000>0?ooo`80o`00
103oool20?l000L0oooo3@3o00070?ooo`80o`002@3oool20000o`<0oooo
00<000000?ooo`3oool0103oool001@0oooo00@000000?ooo`3oool0oooo
0P3o00030?ooo`80o`001@3oool40?l000030?ooo`3o0000o`000080o`00
2@3oool40?l001<0oooo1P3o00030?ooo`@0o`003@3oool20?l000D0oooo
103o00050?ooo`D0o`000`3oool60?l000`0oooo103o00000`3oool0o`00
0?l000030?ooo`@0o`005`3oool20?l000@0oooo103o00000`3oool0o`00
0?l000070?l00140oooo0P000?l30?ooo`030000003oool0oooo00@0oooo
000D0?ooo`030000003oool0oooo00@0o`00203oool40?l00080oooo103o
000:0?ooo`80o`005`3oool20?l000D0oooo0P3o000=0?ooo`@0o`001@3o
ool20?l000H0oooo1@3o00020?ooo`H0o`003@3oool80?l000<0oooo0P3o
00030?ooo`80o`004P3oool40?l000@0oooo0P3o00020?ooo`@0o`0000<0
oooo0?l0003o00000`3o00060?ooo`80o`00203oool20000o`<0oooo00<0
00000?ooo`3oool0103oool001@0oooo00<000000?ooo`3oool01P3o0005
0?ooo`@0o`000P3oool40?l001h0oooo0P3o000=0?ooo`80o`002`3oool4
0?l000`0oooo1@3o00030?ooo`@0o`00403oool20?l000030?ooo`3o0000
o`000080o`001`3oool40?l00140oooo103o00050?ooo`80o`000P3oool2
0?l000<0oooo103o00050?ooo`@0o`001P3oool01000o`00003o003o0000
o`020?ooo`030000003oool0oooo00@0oooo000D0?ooo`040000003oool0
oooo0?ooo`P0o`0000<0oooo0?l0003o00000`3o00020?ooo`@0o`007@3o
ool40?l000/0oooo103o000;0?ooo`80o`003@3oool40?l000D0oooo0P3o
000E0?ooo`80o`00203oool40?l00180oooo0P3o00050?ooo`P0o`0000<0
oooo0?l0003o00000P3o00060?ooo`@0o`001P3oool20000o`800?l00P3o
ool00`000000oooo0?ooo`040?ooo`00503oool00`000000oooo0?l00002
0?l000030?ooo`3o0000o`0000/0o`0000@0oooo0?l0003o0000o`005`3o
ool20?l000D0oooo103o00000`3oool0o`000?l000080?ooo`@0o`006`3o
ool20?l001X0oooo0P3o000;0?ooo`@0o`006@3oool<0?l000<0oooo0P3o
00030?ooo`80o`001`3oool20000o`05003o003oool0oooo0?ooo`000000
1P3oool001@0oooo00<000000?l0003o00000`3o00000`3oool0o`000?l0
00040?l000030?ooo`3o0000o`0000L0o`005P3oool40?l000D0oooo0P3o
00000`3oool0o`000?l000020?l000P0oooo0P3o000A0?ooo`80o`00603o
ool20?l000T0oooo1@3o000;0?ooo`80o`006`3oool20?l000030?ooo`3o
0000o`0000H0o`000P3oool40?l000H0oooo0P3o00030?ooo`80003o103o
ool00`000000oooo0?ooo`040?ooo`00503oool00`000000o`000?l00003
0?l000@0oooo0P3o00040?ooo`L0o`005P3oool40?l000P0oooo103o000J
0?ooo`@0o`000P3oool20?l00180oooo103o00070?ooo`H0o`002P3oool4
0?l001`0oooo103o00000`3oool0o`000?l000020?l00080oooo103o0005
0?ooo`@0o`000P3oool20000o`@0oooo00<000000?ooo`3oool0103oool0
01@0oooo00<000000?ooo`3o00000P3o000<0?ooo`80o`0000<0oooo0?l0
003o00000P3oool20?l000L0oooo0P3o00030?ooo`80o`001P3oool20?l0
00X0oooo0P3o000@0?ooo`80o`002@3oool40?l000030?ooo`3o0000o`00
0080o`001P3oool20?l000T0oooo103o00070?ooo`D0o`001P3oool20?l0
00<0oooo103o000L0?ooo`@0o`0000<0oooo0?l0003o00000P3o00030?oo
o`80o`000`3oool20?l000030?ooo`3o0000o`000080o`000P3oool00`00
0?l0oooo0?ooo`02003o00030?ooo`000000oooo00D0oooo000D0?ooo`03
0000003oool0oooo00D0oooo0P3o00030?ooo`80o`000`3oool20?l00080
oooo1@3o00050?ooo`@0o`0000<0oooo0?l0003o00000P3o000R0?ooo`@0
o`002@3oool20?l00080oooo103o00050?ooo`@0o`002@3oool20?l000P0
oooo103o00060?ooo`@0o`000`3oool20?l000L0oooo0P3o00050?ooo`80
o`00203oool20?l000@0oooo0P3o00030?ooo`80o`00203oool40?l00003
0?ooo`3o0000o`000080oooo0P000?l00`3oool00?l0003o0002003o0003
0000003oool0oooo00@0oooo000D0?ooo`030000003oool0oooo00@0oooo
103o00000`3oool0o`000?l000020?l000030?ooo`3o0000o`0000P0o`00
1@3oool40?l000030?ooo`3o0000o`000080o`00403oool20?l00100oooo
103o000>0?ooo`80o`001P3oool50?l000L0oooo0P3o00090?ooo`@0o`00
1P3oool40?l000/0oooo103o00030?ooo`@0o`001P3oool40?l00180oooo
103o00050?ooo`80003o00<0oooo003o0000o`000P00o`000`000000oooo
0?ooo`040?ooo`00503oool20?l000D0oooo103o00000`3oool0o`000?l0
00020?l000030?ooo`3o0000o`0000L0o`001`3oool20?l000<0oooo0P3o
000@0?ooo`@0o`00403oool20?l001P0oooo1@3o00000`3oool0o`000?l0
00020?ooo`@0o`002@3oool20?l000P0oooo0P3o000<0?ooo`@0o`000`3o
ool50?l000D0oooo103o00060?ooo`80o`000P3oool20?l000L0oooo0P3o
00000`3oool0o`000?l000030?ooo`80003o0P3oool3003o00030000003o
ool0oooo00@0oooo000C0?ooo`D0o`0000@0oooo0?l0003o0000oooo0P3o
00030?ooo`80o`000`3oool60?l00200oooo103o000Y0?ooo`X0o`0000<0
oooo0?l0003o00000P3o000R0?ooo`80o`0000<0oooo0?l0003o00000P3o
ool40?l000H0oooo0P3o00060?ooo`P0o`000P3oool20?l000@0oooo103o
00020?ooo`80003o0P3oool3003o00030000003oool0oooo00@0oooo000C
0?ooo`/0o`002P3oool20?l002<0oooo0P3o000H0?ooo`80o`00403oool5
0?l000030?ooo`3o0000o`0000<0o`0000<0oooo0?l0003o00007`3oool2
0?l000@0oooo103o00020?ooo`80o`003`3oool80?l000030?ooo`3o0000
o`000080o`000`3oool40?l00080oooo00<0003o0?ooo`3oool00P3oool2
003o00030000003oool0oooo00@0oooo000D0?ooo`/0o`004@3oool20?l0
01X0oooo103o000F0?ooo`@0o`00403oool20?l00080oooo1P3o000D0?oo
o`80o`002@3oool60?l000<0oooo103o00080?ooo`80o`002P3oool60?l0
0080oooo103o00040?ooo`80o`000P3oool20000o`H0oooo00<000000?oo
o`3oool0103oool001@0oooo00D000000?ooo`3o0000o`000?ooo`060?l0
0100oooo103o000I0?ooo`@0o`005P3oool40?l000X0oooo103o00060?oo
o`D0o`00503oool40?l000L0oooo1`3o00040?ooo`80o`00203oool40?l0
00/0oooo0P3o00050?ooo`<0o`00203oool20000o`H0oooo00<000000?oo
o`3oool0103oool001@0oooo00<000000?ooo`3oool01@3oool20?l00140
oooo103o00000`3oool0o`000?l000090?ooo`80o`00103oool20?l000H0
oooo0P3o000;0?ooo`80o`002`3oool20?l000X0oooo1P3o00060?ooo`80
o`005P3oool40?l000L0oooo1P3o00050?ooo`80o`001`3oool50?l00180
oooo103o00060?ooo`<0003o1P3oool00`000000oooo0?ooo`040?ooo`00
503oool00`000000oooo0?ooo`0=0?ooo`80o`002P3oool20?l000030?oo
o`3o0000o`000080o`001`3oool50?l000030?ooo`3o0000o`000080o`00
4@3oool40?l000X0oooo0P3o00050?ooo`80o`000`3oool60?l000h0oooo
0P3o000?0?ooo`80o`000P3oool20?l000D0oooo1@3o00040?ooo`@0o`00
00<0oooo0?l0003o00000`3oool40?l000<0oooo0P3o000>0?ooo`@0o`00
1P3oool20000o`L0oooo00<000000?ooo`3oool0103oool001@0oooo00<0
00000?ooo`3oool0303oool40?l000H0oooo0P3o0000103oool0o`000?l0
003oool40?l000L0oooo2P3o000A0?ooo`D0o`00203oool40?l000<0oooo
103o00030?ooo`@0o`003P3oool40?l00140oooo103o00050?ooo`@0o`00
103oool80?l000<0oooo0P3o00030?ooo`@0o`003@3oool30?l000L0oooo
0P000?l70?ooo`030000003oool0oooo00@0oooo000D0?ooo`030000003o
ool0oooo00`0oooo103o00050?ooo`L0o`0000<0oooo0?l0003o00000`3o
ool20?l000@0oooo1@3o00000`3oool0o`000?l0000C0?ooo`D0o`001`3o
ool40?l000<0oooo103o000?0?ooo`80o`0000@0oooo0?l0003o0000oooo
103o00070?ooo`80o`00203oool40?l000H0oooo0P3o00060?ooo`80o`00
00<0oooo0?l0003o00000P3o00080?ooo`@0o`00303oool40?l000L0oooo
0P000?l70?ooo`030000003oool0oooo00@0oooo000D0?ooo`80o`003P3o
ool20?l000H0oooo1`3o00050?ooo`@0o`001@3oool20?l001H0oooo1P3o
00080?ooo`80o`001@3oool20?l000l0oooo1`3o00000`3oool0o`000?l0
00070?ooo`@0o`00203oool20?l001<0oooo0P3o000:0?ooo`80o`003@3o
ool40?l000H0oooo00<0o`000000o`3oool00`3oool2003o0080oooo00<0
00000?ooo`3oool0103oool001<0oooo103o000E0?ooo`<0o`0000<0oooo
0?l0003o00001P3oool40?l001`0oooo1P3o000B0?ooo`80o`003@3oool7
0?l000X0oooo1@3o000>0?ooo`80o`006`3oool20?l000030?ooo`3o0000
o`0000P0oooo0P3o00060?ooo`040?l000000?l0003o0?l00080oooo1000
o`000`3oool000000?ooo`050?ooo`004`3oool40?l000D0oooo0P3o000=
0?ooo`@0o`002P3oool20?l001d0oooo103o000:0?ooo`<0o`001P3oool4
0?l000d0oooo0P3o00000`3oool0o`000?l0000<0?ooo`@0o`003@3oool4
0?l00080oooo0P3o000;0?ooo`80o`00203oool90?l000D0oooo0P3o0006
0?ooo`040?l000000?l0003o0?l00080oooo1000o`000`3oool000000?oo
o`050?ooo`00503oool20?l000D0oooo103o000<0?ooo`@0o`001@3oool2
0?l002<0oooo0P3o000:0?ooo`D0o`001@3oool40?l001T0oooo0P3o0004
0?ooo`80o`003P3oool40?l000030?ooo`3o0000o`000080o`002@3oool4
0?l000@0oooo3@3o00030?ooo`@0o`001P3oool00`000?l0o`000?ooo`03
0?ooo`800?l00P3oool00`000000oooo0?ooo`040?ooo`00503oool00`00
0000oooo0?ooo`040?ooo`@0o`002@3oool20?l00080oooo0P3o00050?oo
o`@0o`003@3oool20?l001l0oooo1@3o00060?ooo`80o`006@3oool40?l0
01@0oooo203o00090?ooo`@0o`000`3oool>0?l000<0oooo103o00050?oo
o`80003o2@3oool00`000000oooo0?ooo`040?ooo`00503oool00`000000
oooo0?ooo`050?ooo`80o`001P3oool20?l000030?ooo`3o0000o`000080
o`00203oool60?l000X0oooo103o000O0?ooo`<0o`008P3oool40?l001@0
oooo103o00000`3oool0o`000?l0000;0?ooo`80o`00103oool90?l00080
oooo0P3o00050?ooo`80o`001P3oool00`000?l0oooo0?ooo`080?ooo`03
0000003oool0oooo00@0oooo000D0?ooo`030000003oool0oooo00<0oooo
0`3o00060?ooo`P0o`002@3oool60?l000T0oooo103o00000`3oool0o`00
0?l000100?ooo`@0o`00403oool20?l000@0oooo0P3o000>0?ooo`80o`00
1P3oool20?l00080oooo1P3o000>0?ooo`80003o2P3oool00`000000oooo
0?ooo`040?ooo`00503oool00`000000oooo0?ooo`020?ooo`D0o`001@3o
ool40?l000030?ooo`3o0000o`0000`0oooo103o000:0?ooo`80o`0000<0
oooo0?l0003o00000P3o000O0?ooo`80o`002@3oool20?l00180oooo103o
000@0?ooo`@0o`004P3oool40?l000T0oooo1`3o000=0?ooo`030000o`3o
ool0oooo00T0oooo00<000000?ooo`3oool0103oool001@0oooo00<00000
0?ooo`3oool00P3oool50?l000H0oooo0P3o000A0?ooo`80o`003@3oool5
0?l001h0oooo103o00070?ooo`@0o`001@3oool20?l000X0oooo103o000@
0?ooo`@0o`00403oool60?l000L0oooo2@3o00020?ooo`80o`00203oool2
0000o`/0oooo00<000000?ooo`3oool0103oool001@0oooo00<000000?l0
003o00000`3oool30?l001H0oooo0P3o000A0?ooo`@0o`002@3oool20?l0
01@0oooo103o00070?ooo`@0o`00103oool40?l000T0oooo0`3o000B0?oo
o`80o`00403oool80?l000D0oooo2@3o00020?ooo`@0o`000`3oool20?l0
0080oooo0P000?l;0?ooo`030000003oool0oooo00@0oooo000D0?ooo`@0
o`005`3oool20?l000030?ooo`3o0000o`000080o`004@3oool20?l000T0
oooo103o000D0?ooo`80o`001`3oool40?l000@0oooo1@3o00080?ooo`@0
o`00503oool20?l000h0oooo103o00000`3oool0o`000?l000020?l000@0
oooo203o00030?ooo`@0o`000P3oool40?l000030?ooo`000?l0003o00/0
oooo00<000000?ooo`3oool0103oool001@0oooo103o000F0?ooo`P0o`00
703oool40?l000/0oooo0P3o000;0?ooo`80o`000P3oool40?l000@0oooo
1@3o00090?ooo`D0o`001@3oool20?l000@0oooo0P3o00000`3oool0o`00
0?l000020?ooo`@0o`003P3oool30?l000030?ooo`3o0000o`000080o`00
1@3oool40?l000L0oooo0`3o00020?ooo`@0o`0000<0oooo0000o`000?l0
2@3oool2003o00030000003oool0oooo00@0oooo000D0?ooo`030000003o
0000o`0000@0oooo103o000;0?ooo`80o`000P3oool70?l000h0oooo0P3o
000>0?ooo`80o`002`3oool40?l000T0oooo103o00000`3oool0o`000?l0
00020?l000@0oooo103o000;0?ooo`D0o`000`3oool40?l00080oooo1`3o
00000`3oool0o`000?l000020?l000h0oooo203o000@0?ooo`@0o`000P3o
ool20?l00080oooo00<0003o0?ooo`3oool01`3oool3003o00030000003o
ool0oooo00@0oooo000D0?ooo`030000003o0000o`0000<0oooo1P3o0009
0?ooo`@0o`000P3oool20?l000030?ooo`3o0000o`0000h0oooo103o000J
0?ooo`@0o`002@3oool40?l00080oooo0P3o00060?ooo`80o`003@3oool5
0?l00080oooo103o00020?ooo`L0o`000P3oool20?l000l0oooo203o000@
0?ooo`@0o`001@3oool20000o`T0oooo0`00o`000`000000oooo0?ooo`04
0?ooo`00503oool40?l00080oooo1P3o00090?ooo`@0o`005@3oool40?l0
01/0oooo0P3o000;0?ooo`80o`006`3oool40?l000<0oooo0P3o00040?oo
o`80o`0000<0oooo0?l0003o00005@3oool20?l00080oooo0P3o000B0?oo
o`80o`001P3oool20000o`03003o003oool0oooo00L0oooo0P00o`000`00
0000oooo0?ooo`040?ooo`00503oool40?l000<0oooo1P3o00090?ooo`80
o`005`3oool20?l000T0oooo0P3o000l0?ooo`80o`00<P3oool20?l00100
oooo00@0003o003o0000o`000?l02P3oool00`000000oooo0?ooo`040?oo
o`00503oool00`000000o`000?l000060?ooo`D0o`00:`3oool40?l001T0
oooo0P3o000O0?ooo`@0o`00<03oool40?l000h0oooo0P000?l3003o00L0
oooo0P00o`000`3oool000000?ooo`050?ooo`00503oool00`000000oooo
0?ooo`050?ooo`H0o`00:`3oool40?l000@0oooo0P3o000B0?ooo`@0o`00
7P3oool40?l002T0oooo0P3o00050?ooo`@0o`000`3oool20?l000T0oooo
00@0003o0?ooo`00o`000?l01`3oool4003o00030000003oool0oooo00@0
oooo000D0?ooo`030000003oool0oooo00D0oooo1@3o000]0?ooo`80o`00
103oool40?l000/0oooo0P3o00030?ooo`L0o`002`3oool40?l000h0oooo
0P3o000Y0?ooo`@0o`000`3oool40?l000<0oooo103o00070?ooo`80003o
2P3oool4003o00030000003oool0oooo00@0oooo000D0?ooo`030000003o
ool0oooo00H0oooo103o000c0?ooo`@0o`002P3oool40?l000030?ooo`3o
0000o`0000L0o`00103oool20?l000<0oooo1P3o000D0?ooo`80o`008P3o
ool40?l000<0oooo1P3o00000`3oool0o`000?l000030?l000H0oooo00<0
003o0?ooo`3oool0203oool4003o00030?ooo`000000oooo00D0oooo000D
0?ooo`030000003oool0oooo00H0oooo103o000B0?ooo`80o`00803oool4
0?l000T0oooo103o00000`3oool0o`000?l000070?l000<0oooo103o0002
0?ooo`H0o`00203oool20?l000T0oooo103o000R0?ooo`80o`001@3oool6
0?l000030?ooo`3o0000o`0000<0o`00103oool20000o`T0oooo1000o`02
0?ooo`030000003oool0oooo00@0oooo000D0?ooo`030000003oool0oooo
00L0oooo0P3o000B0?ooo`@0o`007`3oool40?l000X0oooo0P3o00030?oo
o`L0o`00103oool40?l000030?ooo`3o0000o`0000D0o`001`3oool40?l0
00P0oooo103o00000`3oool0o`000?l0000X0?ooo`@0o`000P3oool40?l0
00@0oooo00<0003o0?ooo`3oool01`3oool5003o0080oooo00<000000?oo
o`3oool0103oool001@0oooo00<000000?ooo`3oool06`3oool40?l00200
oooo0P3o000B0?ooo`@0o`001P3oool30?l000030?ooo`3o0000o`0000H0
o`0000<0oooo0?l0003o00000`3oool40?l000T0oooo0P3o00000`3oool0
o`000?l000020?l002D0oooo0P3o00000`3oool0o`000?l000040?ooo`80
o`00103oool20000o`P0oooo1@00o`030?ooo`030000003oool0oooo00@0
oooo000D0?ooo`030000003oool0oooo00`0oooo103o000<0?ooo`80o`00
=P3oool20?l000L0oooo103o0000103oool0o`000?l0003oool80?l000<0
oooo0P3o000=0?ooo`@0o`00903oool40?l000`0oooo0P000?l2003o00D0
oooo1@00o`040?ooo`030000003oool0oooo00@0oooo000D0?ooo`030000
003oool0oooo00/0oooo1P3o00130?ooo`80o`001`3oool50?l000@0oooo
0P3o00000`3oool0o`000?l000020?l001<0oooo103o000S0?ooo`D0o`00
2`3oool00`000?l00?l0003o0002003o00<0oooo1@00o`050?ooo`030000
003oool0oooo00@0oooo000D0?ooo`030000003oool0oooo00/0oooo1P3o
000X0?ooo`80o`00403oool60?l00080oooo103o00070?ooo`D0o`001@3o
ool40?l000H0oooo0P3o00040?ooo`80o`001P3oool40?l002@0oooo1@3o
00080?ooo`03003o00000?l0003o00@00?l00`3oool4003o00H0oooo00<0
00000?ooo`3oool0103oool001@0oooo00<000000?ooo`3oool0303oool4
0?l000H0oooo0P3o00030?ooo`80o`006`3oool40?l000h0oooo203o0000
0`3oool0o`000?l000030?l000L0oooo103o00040?ooo`@0o`001P3oool4
0?l00080oooo103o00060?ooo`80o`003@3oool20?l001L0oooo103o0007
0?ooo`800?l000<0003o003o003oool00P00o`050?ooo`800?l01`3oool0
0`000000oooo0?ooo`040?ooo`00503oool00`000000oooo0?ooo`0E0?oo
o`@0o`0000<0oooo0?l0003o00000P3o00050?ooo`80o`004`3oool40?l0
00h0oooo203o00020?ooo`D0o`001`3oool20?l000D0oooo103o00040?oo
o`H0o`000P3oool40?l001@0oooo103o000C0?ooo`80o`000P3oool20?l0
00P0oooo00@00?l00000o`000?l00?l04@3oool00`000000oooo0?ooo`04
0?ooo`00503oool00`000000oooo0?ooo`0?0?ooo`80o`00103oool40?l0
00030?ooo`3o0000o`000080o`00103oool50?l00100oooo1@3o000?0?oo
o`H0o`00103oool40?l000l0oooo0P3o00040?ooo`P0o`000P3oool40?l0
01<0oooo103o000B0?ooo`D0o`001@3oool20?l000@0oooo00<0003o003o
003oool00P3oool2003o00D0oooo0P00o`060?ooo`030000003oool0oooo
00@0oooo000D0?ooo`030000003oool0oooo00d0oooo1@3o00040?ooo`80
o`000P3oool40?l000@0oooo1P3o000?0?ooo`@0o`002`3oool20?l000h0
oooo0P3o000F0?ooo`P0o`000`3oool40?l00180oooo103o000B0?ooo`H0
o`000`3oool40?l00080oooo0P000?l30?ooo`@00?l00`3oool4003o00D0
oooo00<000000?ooo`3oool0103oool001@0oooo00<000000?ooo`3oool0
303oool60?l000@0oooo0P3o00020?ooo`@0o`001@3oool70?l000T0oooo
0P3o00030?ooo`80o`002`3oool40?l000T0oooo0`3o000J0?ooo`H0o`00
00@0oooo0?l0003o0000oooo103o000B0?ooo`D0o`0000<0oooo0?l0003o
00003`3oool50?l000<0oooo103o00020?ooo`030000o`3oool0oooo0080
oooo1000o`030?ooo`@00?l01@3oool00`000000oooo0?ooo`040?ooo`00
503oool00`000000oooo0?ooo`0:0?ooo`L0o`00103oool40?l00080oooo
0P3o00070?ooo`L0o`001`3oool40?l000l0oooo103o00060?ooo`L0o`00
6@3oool40?l00080oooo203o000C0?ooo`P0o`002P3oool20?l000@0oooo
0P3o00050?ooo`80o`000P3oool20000o`D0oooo0P00o`050?ooo`800?l0
1P3oool00`000000oooo0?ooo`040?ooo`00503oool00`000000o`000?l0
00090?ooo`H0o`001P3oool40?l000`0oooo1P3o00070?ooo`@0o`00403o
ool20?l000H0oooo203o000<0?ooo`80o`00303oool20?l000<0oooo203o
000;0?ooo`80o`001`3oool70?l000T0oooo103o000=0?ooo`80003o4`3o
ool2003o00030000003oool0oooo00@0oooo000D0?ooo`@0o`00203oool4
0?l000T0oooo0P3o000@0?ooo`80o`002@3oool20?l001T0oooo1`3o000<
0?ooo`@0o`004@3oool20?l00080oooo0P3o000;0?ooo`@0o`001`3oool5
0?l000X0oooo1@3o000<0?ooo`030000o`3oool0oooo0140oooo0`00o`00
0`000000oooo0?ooo`040?ooo`00503oool40?l000<0oooo0P3o00040?oo
o`80o`003@3oool20?l000`0oooo0P3o000V0?ooo`80o`00403oool40?l0
00H0oooo0P3o000J0?ooo`@0o`00203oool40?l000/0oooo103o000;0?oo
o`80003o4`3oool3003o00030000003oool0oooo00@0oooo000D0?ooo`@0
o`000P3oool40?l00140oooo103o000:0?ooo`H0o`003`3oool20?l000`0
oooo0P3o000G0?ooo`80o`000`3oool20?l000030?ooo`3o0000o`000080
o`006P3oool20?l000T0oooo103o000;0?ooo`@0o`002`3oool00`000?l0
oooo0?ooo`0B0?ooo`<00?l000<000000?ooo`3oool0103oool001@0oooo
00<000000?l0003o00000`3oool40?l00140oooo103o000:0?ooo`L0o`00
3@3oool40?l000X0oooo1P3o000H0?ooo`P0o`001P3oool20?l000`0oooo
0P3o000@0?ooo`@0o`002P3oool40?l000P0oooo0P3o00020000o``0oooo
0P00o`050?ooo`@00?l000<000000?ooo`3oool0103oool001@0oooo00<0
00000?ooo`3oool00`3oool40?l00080oooo0P3o000>0?ooo`80o`00103o
ool20?l000<0oooo0P3o00000`3oool0o`000?l000040?l000d0oooo103o
00090?ooo`P0o`002P3oool20?l00080oooo103o00050?ooo`@0o`0000<0
oooo0?l0003o00001P3oool40?l000X0oooo103o000:0?ooo`80o`000P3o
ool60?l000T0oooo0`3o00080?ooo`<0o`0000<0003o0?ooo`3oool02P3o
ool4003o00@0oooo1000o`000`000000oooo0?ooo`040?ooo`00503oool0
0`000000oooo0?ooo`040?ooo`80o`000P3oool40?l00180oooo103o0000
0`3oool0o`000?l000020?l000<0oooo0P3o000?0?ooo`<0o`00203oool9
0?l000T0oooo2P3o00050?ooo`80o`00203oool60?l000X0oooo103o0009
0?ooo`/0o`001`3oool50?l000P0oooo0P3o00020000o``0oooo1000o`05
0?ooo`800?l000<0oooo0000003oool01@3oool00080oooo0P0000040?oo
o`800000103oool2000000@0oooo00<000000?ooo`3oool0203oool70?l0
00l0oooo2@3o000D0?ooo`@0o`001`3oool80?l000X0oooo2P3o000>0?oo
o`H0o`00303oool20?l000X0oooo2P3o00070?ooo`H0o`002@3oool00`3o
0000003o0?ooo`0=0?ooo`800?l02@3oool00`000000oooo0?ooo`040?oo
o`0000D0oooo0000003oool0oooo000000080?ooo`040000003oool0oooo
000000<0oooo00<000000?ooo`3oool02@3oool70?l000<0oooo0P3o000:
0?ooo`@0o`0000<0oooo0?l0003o00005@3oool40?l000P0oooo1@3o000=
0?ooo`80o`000P3oool40?l000h0oooo1@3o000K0?ooo`80o`000P3oool2
0?l000<0oooo0P3o00050?ooo`D0o`002P3oool20000oa<0oooo0P00o`04
0?ooo`030000003oool0oooo00@0oooo00001@3oool000000?ooo`3oool0
000000/0oooo00@000000?ooo`3oool0oooo0`00000:0?ooo`H0o`000P3o
ool40?l000X0oooo0P3o000J0?ooo`80o`001P3oool20?l000<0oooo0P3o
00000`3oool0o`000?l0000C0?ooo`80o`00303oool40?l002@0oooo103o
00050?ooo`80o`002`3oool00`00o`00003o0000o`0B0?ooo`@00?l00`3o
ool00`000000oooo0?ooo`040?ooo`0000D0oooo0000003oool0oooo0000
00090?ooo`800000103oool00`000000oooo0?ooo`0:0?ooo`D0o`000`3o
ool40?l001/0oooo0P3o00070?ooo`80o`001`3oool40?l000@0oooo103o
00000`3oool0o`000?l0000>0?ooo`@0o`001@3oool20?l000D0oooo0P3o
000A0?ooo`@0o`00403oool40?l00140oooo00@00?l00000o`000?l0003o
4P3oool4003o00<0oooo00<000000?ooo`3oool0103oool000050?ooo`00
0000oooo0?ooo`0000002@3oool00`000000oooo0?ooo`030?ooo`030000
003oool0oooo00/0oooo0P3o00060?ooo`<0o`002@3oool20?l000l0oooo
103o00050?ooo`@0o`001P3oool40?l000@0oooo203o000=0?ooo`@0o`00
103oool40?l001H0oooo1P3o000?0?ooo`H0o`003`3oool30000o`03003o
003oool0oooo0140oooo0P00o`040?ooo`030000003oool0oooo00@0oooo
00020?ooo`8000002P3oool3000000<0oooo00<000000?ooo`3oool04`3o
ool40?l000L0oooo103o000>0?ooo`@0o`001@3oool40?l000D0oooo103o
00060?ooo`80o`0000<0oooo0?l0003o00000P3o000>0?ooo`80o`00103o
ool50?l000X0oooo0P3o000:0?ooo`L0o`003`3oool60?l000h0oooo0P00
0?l00`00o`00oooo0?ooo`0G0?ooo`03003o00000000oooo00D0oooo000D
0?ooo`030000003oool0oooo01<0oooo1@3o00060?ooo`@0o`003`3oool2
0?l000L0oooo0P3o00050?ooo`@0o`002`3oool20?l00080oooo0P3o000A
0?ooo`@0o`002P3oool40?l000X0oooo1P3o000A0?ooo`@0o`003@3oool2
0000o`d0oooo0P00o`040?ooo`800?l01@3oool2003o000300000000o`00
oooo00@0oooo000D0?ooo`030000003oool0oooo01@0oooo103o00070?oo
o`80o`00803oool40?l000h0oooo103o00040?ooo`80o`002`3oool20?l0
00/0oooo103o000=0?ooo`80o`002@3oool20?l000P0oooo0P3o000>0?oo
o`040000o`3oool0oooo0?ooo`800?l0203oool4003o0080oooo1000o`04
0?ooo`800?l000<00000003o003oool0103oool001@0oooo00<000000?oo
o`3oool02`3oool20?l000P0oooo0P3o000[0?ooo`80o`003`3oool40?l0
00<0oooo103o000C0?ooo`80o`000`3oool20?l00080oooo0P3o000D0?oo
o`@0o`000P3oool20?l00180oooo0P000?l20?ooo`@00?l01`3oool5003o
00030?ooo`00o`000?l000800?l00`3oool3003o00030000003oool0oooo
00@0oooo000D0?ooo`030000003oool0oooo00X0oooo103o000S0?ooo`80
o`00803oool40?l000<0oooo103o000B0?ooo`@0o`001@3oool40?l001<0
oooo103o00000`3oool0o`000?l000020?l000`0oooo0P3o00020?ooo`80
003o0`3oool4003o00L0oooo1@00o`020?ooo`800?l0103oool3003o0003
0000003oool0oooo00@0oooo000D0?ooo`030000003o0000o`0000X0oooo
103o00040?ooo`80o`00703oool40?l000L0oooo0P3o000=0?ooo`80o`00
1`3oool40?l000@0oooo0P3o000?0?ooo`80o`000P3oool40?l000030?oo
o`3o0000o`000080oooo103o000D0?ooo`80o`000P3oool40?l000P0oooo
0P3o00000`3oool0o`000?l000020?l000<0003o103oool2003o00T0oooo
0`00o`030?ooo`800?l01@3oool2003o00030000003oool0oooo00@0oooo
000D0?ooo`@0o`00203oool40?l000@0oooo1@3o00000`3oool0o`000?l0
00050?ooo`80o`00403oool40?l000H0oooo103o000;0?ooo`@0o`001`3o
ool20?l000`0oooo0P3o00070?ooo`@0o`000P3oool20?l000030?ooo`3o
0000o`000080o`000P3oool20?l00180oooo0P3o00060?ooo`80o`00203o
ool80?l00080003o5@3oool4003o00H0oooo00<000000?ooo`3oool0103o
ool001@0oooo103o00080?ooo`@0o`00103oool90?l000<0oooo103o000@
0?ooo`80o`001`3oool40?l000/0oooo103o000A0?ooo`80o`0000<0oooo
0?l0003o00000P3o00060?ooo`@0o`001@3oool40?l001D0oooo103o000?
0?ooo`@0o`0000<0oooo0?l0003o00000P000?lF0?ooo`@00?l01P3oool0
0`000000oooo0?ooo`040?ooo`00503oool00`000000o`000?l0000:0?oo
o`80o`001P3oool80?l00080oooo1@3o000J0?ooo`80o`003@3oool20?l0
0140oooo203o00070?ooo`80o`001`3oool20?l000T0oooo0P3o000;0?oo
o`@0o`00403oool20?l000@0oooo00<0003o0?ooo`3oool00P00o`0D0?oo
o`800?l01`3oool00`000000oooo0?ooo`040?ooo`00503oool00`000000
oooo0?ooo`0D0?ooo`80o`0000<0oooo0?l0003o00000P3oool50?l003d0
oooo103o00000`3oool0o`000?l0000:0?ooo`80o`002P3oool20?l000<0
oooo103o000;0?ooo`80o`004@3oool20?l000<0oooo0P000?l00`3oool0
0?l0003o0002003o0140oooo0P00o`090?ooo`030000003oool0oooo00@0
oooo000D0?ooo`030000003oool0oooo01L0oooo0P3o00020?ooo`@0o`00
5P3oool20?l000T0oooo0P3o000L0?ooo`80o`003@3oool40?l000P0oooo
103o00020?ooo`@0o`00303oool20?l000l0oooo103o00000`3oool0003o
0000o`020?ooo`@00?l01@3oool2003o00P0oooo1`00o`060?ooo`030000
003oool0oooo00@0oooo000D0?ooo`030000003oool0oooo0080oooo0P3o
000B0?ooo`@0o`000P3oool20?l001D0oooo1@3o00070?ooo`@0o`000P3o
ool20?l002H0oooo103o00030?ooo`80o`000`3oool40?l000<0oooo0P3o
000<0?ooo`@0o`003P3oool40?l000<0003o0`3oool2003o00D0oooo1000
o`060?ooo`T00?l01@3oool00`000000oooo0?ooo`040?ooo`00503oool0
10000000oooo0?ooo`3oool40?l00140oooo103o000H0?ooo`H0o`001`3o
ool90?l00100oooo0P3o00020?ooo`80o`00403oool20?l000<0oooo103o
00030?ooo`80o`004P3oool40?l000T0oooo0P3o00030?ooo`@0o`000P00
0?l;0?ooo`@00?l01P3oool9003o00D0oooo00<000000?ooo`3oool0103o
ool001@0oooo00<000000?ooo`3oool01@3o000B0?ooo`80o`004P3oool2
0?l000D0oooo1@3o00090?ooo`P0o`003`3oool80?l001@0oooo103o0005
0?ooo`80o`004@3oool20?l000T0oooo103o00020?ooo`<0o`000P000?l=
0?ooo`@00?l01P3oool2003o00<0oooo0P00o`030?ooo`800?l000<0oooo
0000003oool01@3oool001@0oooo1`3o000N0?ooo`80o`001P3oool40?l0
00<0oooo103o000<0?ooo`H0o`00403oool80?l00140oooo0P3o00020?oo
o`80o`001@3oool40?l001/0oooo103o00030?ooo`030?l000000?l0003o
00d0oooo1P00o`0>0?ooo`@00?l000<000000?ooo`3oool0103oool001<0
oooo1`3o000N0?ooo`H0o`000`3oool40?l00080oooo103o000>0?ooo`80
o`002P3oool20?l000P0oooo0P3o0000103oool0o`000?l0003o000A0?oo
o`@0o`00203oool40?l001X0oooo103o00040?ooo`<0003o103oool2003o
00H0oooo1`00o`0>0?ooo`@00?l000<000000?ooo`3oool0103oool001<0
oooo1P3o000O0?ooo`L0o`000`3oool20?l00080oooo1@3o000A0?ooo`80
o`001P3oool40?l000T0oooo103o000A0?ooo`@0o`002@3oool20?l001X0
oooo103o00050?ooo`80003o103oool4003o00D0oooo1P00o`0@0?ooo`80
0?l000<0oooo0000003oool01@3oool001@0oooo0P3o00020?ooo`80o`00
7`3oool80?l000D0oooo103o000A0?ooo`@0o`001@3oool40?l000T0oooo
103o000=0?ooo`80o`000P3oool40?l00200oooo0P3o00030?ooo`@0o`00
103oool20000o`D0oooo1000o`000`3oool00?l0003o00020?ooo`H00?l0
4`3oool00`000000oooo0?ooo`040?ooo`00503oool00`000000oooo0?oo
o`040?l00240oooo1P3o00040?ooo`@0o`000P3oool20?l000d0oooo1@3o
00050?ooo`80o`002`3oool20?l000d0oooo103o00000`3oool0o`000?l0
00030?l000h0oooo0P3o000>0?ooo`@0o`000`3oool20?l000@0oooo0P00
0?l70?ooo`800?l000<0oooo003o0000o`000P00o`000`3oool00?l0003o
0003003o00d0oooo0P00o`040?ooo`03003o00000000oooo00D0oooo000D
0?ooo`030000003oool0oooo00@0o`008`3oool50?l000<0oooo103o0000
0`3oool0o`000?l000020?l000d0oooo103o000Q0?ooo`@0o`000P3oool4
0?l000d0oooo103o000=0?ooo`@0o`00203oool30000o`X0oooo1000o`02
0?ooo`800?l03P3oool4003o0080oooo0P00o`000`0000000?l00?ooo`04
0?ooo`00503oool010000000oooo0?ooo`3oool20?l000@0oooo0P3o000O
0?ooo`@0o`00103oool20?l00080oooo103o000>0?ooo`80o`008`3oool2
0?l000@0oooo0P3o00040?ooo`80o`00203oool40?l000h0oooo0P3o0009
0?ooo`80003o303oool3003o00/0oooo0P00o`050?ooo`@00?l00P3oool2
003o000300000000o`00oooo00@0oooo000D0?ooo`040000003oool0o`00
0?l000D0oooo103o00000`3oool0o`000?l0000;0?ooo`80o`003`3oool2
0?l000@0oooo103o00020?ooo`80o`003P3oool40?l00140oooo0P3o000?
0?ooo`80o`002@3oool60?l000H0oooo0P3o000I0?ooo`80003o3@3oool4
003o00T0oooo1000o`050?ooo`800?l00`3oool2003o000300000000o`00
oooo00@0oooo000D0?ooo`030000003o0000o`000080o`00103oool80?l0
00T0oooo103o000<0?ooo`80o`001P3oool40?l000T0oooo0P3o00070?oo
o`@0o`00403oool40?l000H0oooo0P3o00050?ooo`@0o`00203oool70?l0
00/0oooo0P3o000B0?ooo`80003o3P3oool4003o00T0oooo1000o`0:0?oo
o`800?l000<00000003o003oool0103oool001@0oooo1@3o00050?ooo`80
o`0000<0oooo0?l0003o00000P3o00090?ooo`@0o`002`3oool40?l000H0
oooo0P3o00090?ooo`@0o`001`3oool20?l000D0oooo0P3o000:0?ooo`@0
o`001@3oool40?l000@0oooo103o00090?ooo`H0o`002P3oool40?l00100
oooo0`000?l?0?ooo`800?l02`3oool2003o00`0oooo00<00?l00000003o
ool01@3oool001<0oooo1@3o000:0?ooo`80o`00203oool20?l000030?oo
o`3o0000o`0000D0oooo0P3o00050?ooo`@0o`00403oool50?l000d0oooo
103o000:0?ooo`80o`001P3oool40?l000D0oooo0P3o000;0?ooo`@0o`00
2`3oool40?l000l0oooo0`000?l/0?ooo`030000003oool0oooo00@0oooo
000C0?ooo`@0o`00503oool40?l000H0oooo103o00050?ooo`80o`004@3o
ool40?l000h0oooo103o000C0?ooo`80o`004`3oool40?l000`0oooo0P3o
000?0?ooo`<0003o4`3oool2003o0180oooo0P00o`040?ooo`030000003o
ool0oooo00@0oooo000D0?ooo`80o`005@3oool50?l000D0oooo103o000I
0?ooo`80o`003P3oool40?l001<0oooo103o00020?ooo`80o`002P3oool2
0?l00080oooo0`3o000N0?ooo`80003o2P3oool2003o00L0oooo1000o`0:
0?ooo`800?l0103oool4003o00<0oooo00<000000?ooo`3oool0103oool0
01@0oooo00<000000?ooo`3oool05@3oool50?l000D0oooo103o00040?oo
o`80o`002@3oool20?l000H0oooo0P3o000>0?ooo`@0o`00503oool40?l0
00030?ooo`3o0000o`000080o`00203oool80?l00080oooo0P3o000I0?oo
o`80003o2P3oool4003o00H0oooo1000o`040?ooo`800?l00`3oool4003o
00<0oooo1000o`030?ooo`030000003oool0oooo00@0oooo000D0?ooo`03
0000003oool0oooo01H0oooo1@3o00040?ooo`@0o`000`3oool60?l000D0
oooo103o00040?ooo`@0o`003@3oool40?l000L0oooo0P3o000<0?ooo`80
o`0000<0oooo0?l0003o00000`3o00080?ooo`P0o`0000<0oooo0?l0003o
00000P3o00030?ooo`80o`000P3oool40?l000P0oooo0P3o00020?ooo`80
003o2`3oool4003o00L0oooo0P00o`040?ooo`@00?l00P3oool4003o00@0
oooo0P00o`040?ooo`030000003oool0oooo00@0oooo000D0?ooo`030000
003oool0oooo00D0oooo0P3o000@0?ooo`@0o`001@3oool20?l000@0oooo
1`3o00040?ooo`@0o`00103oool40?l000h0oooo0P3o00070?ooo`@0o`00
3@3oool50?l000X0oooo0P3o00020?ooo`80o`000P3oool40?l00080oooo
2P3o00030?ooo`80o`0000<0oooo0?l0003o00000P3o00030000o``0oooo
0P00o`0>0?ooo`@00?l00`3oool2003o00030?ooo`00o`000?l000P0oooo
00<000000?ooo`3oool0103oool001@0oooo00<000000?ooo`3oool0103o
ool40?l00100oooo0P3o00040?ooo`80o`001`3oool60?l00080oooo0P3o
00000`3oool0o`000?l000060?ooo`80o`00603oool40?l000d0oooo103o
000D0?ooo`80o`000`3oool:0?l00080oooo1`3o00030000o`D0oooo0P00
o`050?ooo`@00?l000<0oooo003o0000o`002`3oool2003o00030?ooo`00
o`000?l000<0oooo1000o`070?ooo`030000003oool0oooo00@0oooo000D
0?ooo`030000003oool0oooo00@0oooo103o000E0?ooo`@0o`0000<0oooo
0?l0003o00001@3oool40?l000030?ooo`3o0000o`000080o`008@3oool4
0?l000l0oooo0P3o000K0?ooo`80o`000P3oool40?l000<0oooo103o0000
0`3oool0o`000000o`020000o`80oooo0P00o`000`3oool00?l0003o0002
003o00@0oooo2000o`0<0?ooo`@00?l00P3oool6003o00D0oooo00<00000
0?ooo`3oool0103oool001@0oooo00<000000?ooo`3oool01@3oool20?l0
01H0oooo203o00040?ooo`T0o`00803oool50?l001<0oooo0P3o00050?oo
o`80o`00703oool20?l000<0oooo0P000?l20?ooo`P00?l01@3oool2003o
00030?ooo`00o`000?l000@00?l000<0oooo003o0000o`001`3oool4003o
00<0oooo1P00o`030?ooo`03003o00000000oooo00D0oooo000D0?ooo`03
0000003oool0oooo01h0oooo0P3o00000`3oool0o`000?l000020?l000@0
oooo1@3o00000`3oool0o`000?l000090?ooo`80o`005@3oool50?l001<0
oooo103o00030?ooo`@0o`007`3oool20000o`<0oooo1000o`000`3oool0
0?l0003o000:0?ooo`T00?l01`3oool2003o00H0oooo1@00o`001@3oool0
0?l0003o000000000?l000D0oooo000D0?ooo`030000003oool0oooo00<0
oooo0P3o000:0?ooo`80o`004@3oool20?l000H0oooo0`3o000<0?ooo`@0
o`00503oool40?l001@0oooo103o00030?ooo`L0o`006P3oool30000o`<0
oooo1000o`0?0?ooo`P00?l0403oool4003o00050?ooo`00o`000?l00000
0000o`001@3oool001@0oooo00<000000?ooo`3oool00P3oool40?l000P0
oooo103o000M0?ooo`80o`00203oool40?l001D0oooo0P3o000F0?ooo`@0
o`000`3oool70?l001P0oooo10000?l30?ooo`@00?l03`3oool4003o0003
0?ooo`00o`000?l00180oooo0P00o`001@3oool00?l0003o0000o`000000
00H0oooo000D0?ooo`030000003oool0oooo0080oooo103o00080?ooo`@0
o`00703oool40?l000P0oooo0P3o000^0?ooo`D0o`000`3oool60?l000`0
oooo0P3o00090?ooo`<0003o0P3oool2003o0080oooo0P00o`0A0?ooo`80
0?l0603oool4003o00030000003oool0oooo00@0oooo000D0?ooo`030000
003oool0oooo00<0oooo0P3o00090?ooo`H0o`00603oool60?l000L0oooo
103o000/0?ooo`H0o`000`3oool50?l000`0oooo103o00080?ooo`80003o
00<00?l00?ooo`00o`000`00o`0D0?ooo`800?l03`3oool2003o00L0oooo
1000o`000`000000oooo0?ooo`040?ooo`00503oool00`000000oooo0?oo
o`0?0?ooo`/0o`004@3oool60?l000<0oooo0P3o00030?ooo`@0o`00:03o
ool20?l00080oooo1@3o00050?ooo`80o`003P3oool40?l00080oooo0P3o
00030?ooo`80003o1`00o`0C0?ooo`@00?l01@3oool2003o00H0oooo1000
o`070?ooo`800?l000<0oooo0000003oool01@3oool001@0oooo00<00000
0?ooo`3oool0103oool20?l000/0oooo2P3o00020?ooo`80o`00303oool4
0?l000@0oooo103o00030?ooo`80o`0000<0oooo0?l0003o00004`3oool2
0?l00100oooo1@3o00000`3oool0o`000?l0000H0?ooo`80o`000P3oool4
0?l000040?ooo`000?l0003o0000o`<00?l000<0oooo003o0000o`00503o
ool4003o00@0oooo1000o`050?ooo`@00?l02P3oool00`000000oooo0?oo
o`040?ooo`00503oool00`000000oooo0?ooo`030?ooo`@0o`00103oool2
0?l000@0oooo2P3o00000`3oool0o`000?l000020?l000D0oooo0P3o0005
0?ooo`80o`001@3oool40?l000D0oooo103o000A0?ooo`@0o`003P3oool7
0?l001h0oooo103o00030000o`030?ooo`00o`000?l001T0oooo0P00o`05
0?ooo`@00?l01P3oool2003o00030?ooo`00o`000?l000P0oooo00<00000
0?ooo`3oool0103oool001@0oooo00<000000?ooo`3oool00`3oool40?l0
00<0oooo103o00040?ooo`P0o`000P3oool40?l000@0oooo103o000<0?oo
o`80o`001P3oool40?l00140oooo103o000=0?ooo`P0o`007`3oool20?l0
00<0003o9@3oool2003o00T0oooo1000o`070?ooo`030000003oool0oooo
00@0oooo000D0?ooo`030000003oool0oooo00@0oooo0P3o0000103oool0
o`000?l0003oool40?l000L0oooo0P3o00060?ooo`80o`001@3oool40?l0
00X0oooo0P3o00090?ooo`80o`00403oool20?l000030?ooo`3o0000o`00
00h0oooo203o000P0?ooo`<0003o00<00?l00?ooo`3oool0;P3oool4003o
00@0oooo0P00o`000`3oool000000?ooo`050?ooo`00503oool00`000000
o`000?l000060?ooo`@0o`0000<0oooo0?l0003o00000P3o000F0?ooo`80
o`002P3oool40?l001T0oooo103o000A0?ooo`80o`0000<0oooo0?l0003o
00000P3o00020?ooo`80o`006P3oool40000o`<00?l07`3oool2003o00l0
oooo0P00o`040?ooo`@00?l000<000000?ooo`3oool0103oool001@0oooo
1@3o00040?ooo`@0o`000P3oool40?l00240oooo103o00080?ooo`80o`00
3`3oool40?l001D0oooo0P3o00020?ooo`@0o`00603oool40000o`@00?l0
2@3oool2003o01<0oooo1000o`0A0?ooo`800?l000<0oooo003o0000o`00
0P00o`000`000000oooo0?ooo`040?ooo`00503oool60?l000@0oooo0P3o
00030?ooo`@0o`001`3oool20?l000D0oooo0P3o000?0?ooo`80o`0000<0
oooo0?l0003o00001`3oool50?l000d0oooo103o000J0?ooo`@0o`00303o
ool20?l000T0oooo0`000?l20?ooo`<00?l02@3oool4003o0180oooo1000
o`0@0?ooo`@00?l000D0oooo003o0000o`00oooo000000060?ooo`00503o
ool00`000000o`000?l000030?l000X0oooo0P3o00070?ooo`H0o`0000<0
oooo0?l0003o00000P3o00070?ooo`80o`00103oool40?l000P0oooo1P3o
000;0?ooo`H0o`006`3oool20?l000`0oooo103o00070?ooo`<0003o00<0
0?l00?ooo`3oool0303oool4003o01<0oooo0P00o`0A0?ooo`@00?l0103o
ool00`000000oooo0?ooo`040?ooo`00503oool00`000000oooo0?ooo`02
0?l001@0oooo2`3o00060?ooo`@0o`000`3oool40?l000P0oooo1@3o0002
0?ooo`80o`001`3oool80?l00080oooo0P3o00070?ooo`80o`006`3oool5
0?l000@0oooo00@0o`000000o`000?l0003o0`00o`0>0?ooo`800?l00`3o
ool2003o02<0oooo0P00o`050?ooo`030000003oool0oooo00@0oooo000D
0?ooo`030000003oool0oooo00D0oooo0P3o000@0?ooo`H0o`0000<0oooo
0?l0003o00001`3oool40?l000@0oooo0P3o000:0?ooo`80o`000P3oool5
0?l000H0oooo203o00000`3oool0o`000?l000020?l000D0oooo103o000K
0?ooo`@0o`000`3oool0103o0000003o0000o`000?l4003o00D0oooo0P00
o`0;0?ooo`@00?l0:@3oool00`000000oooo0?ooo`040?ooo`00503oool0
0`000000oooo0?ooo`040?ooo`@0o`004P3oool20?l000`0oooo0P3o000D
0?ooo`H0o`001`3oool60?l00080oooo103o00050?ooo`D0o`006`3oool2
0?l000@0oooo0`000?l00`3o0000oooo003o0003003o00<0oooo1000o`0:
0?ooo`@00?l0:@3oool00`000000oooo0?ooo`040?ooo`00503oool00`00
0000oooo0?ooo`040?ooo`@0o`004@3oool40?l00240oooo1@3o000;0?oo
o`80o`00103oool20?l000<0oooo0P3o00020?ooo`D0o`005@3oool20?l0
00P0oooo0`000?l00`3o0000oooo0?ooo`04003o00<0oooo1000o`0;0?oo
o`800?l0:P3oool00`000000oooo0?ooo`040?ooo`00503oool00`000000
oooo0?ooo`050?ooo`80o`004P3oool40?l000D0oooo0P3o000?0?ooo`80
o`002P3oool20?l001L0oooo103o00020?ooo`@0o`002@3oool20?l000P0
oooo1@3o00060?ooo`<0003o1@3oool2003o00D0oooo0P00o`0Z0?ooo`80
0?l01P3oool2003o00@0oooo00<000000?ooo`3oool0103oool001@0oooo
00<000000?ooo`3oool06P3oool20?l000D0oooo103o000=0?ooo`@0o`00
8P3oool40?l000<0oooo103o00070?ooo`@0o`001P3oool60?l000D0oooo
0`000?lB0?ooo`800?l00`3oool2003o01l0oooo1000o`040?ooo`@00?l0
0`3oool00`000000oooo0?ooo`040?ooo`00503oool00`000000oooo0?oo
o`090?ooo`80o`00503oool80?l000/0oooo103o000S0?ooo`80o`001@3o
ool40?l000<0oooo1`3o00060?ooo`D0o`00103oool40000oa80oooo1000
o`000`3oool00?l0003o0002003o01h0oooo1000o`040?ooo`@00?l00P3o
ool00`00o`0000000?ooo`050?ooo`00503oool00`000000oooo0?ooo`02
0?l000H0oooo1P3o00080?ooo`80o`001@3oool;0?l000/0oooo0P3o000@
0?ooo`80o`006@3oool40?l00080oooo1`3o00080?ooo`80o`001@3oool4
0000oa40oooo1P00o`000`3oool00?l0003o0002003o0080oooo0P00o`08
0?ooo`800?l02`3oool2003o00@0oooo0P00o`060?ooo`800?l00P3oool2
003o000300000000o`00oooo00@0oooo000D0?ooo`030000003oool0o`00
00<0o`001@3oool70?l000H0oooo103o00030?ooo`H0o`0000<0oooo0?l0
003o00000`3o000<0?ooo`80o`003P3oool40?l000T0oooo0P3o000>0?oo
o`80o`000P3oool70?l000P0oooo0P3o00050?ooo`<0003o4P3oool6003o
00030?ooo`00o`000?l000800?l00P3oool4003o00H0oooo1000o`090?oo
o`@00?l03`3oool2003o000300000000o`00oooo00@0oooo000D0?ooo`03
0000003oool0o`0000<0o`001P3oool60?l000H0oooo103o00030?ooo`/0
o`00303oool40?l000030?ooo`3o0000o`0000X0oooo103o00080?ooo`@0
o`00403oool70?l000P0oooo103o00020?ooo`@0003o4`3oool4003o00<0
oooo1000o`020?ooo`@00?l01P3oool4003o00H0oooo0P00o`000`3oool0
0?l0003o0002003o0100oooo00<00?l00000003oool01@3oool001@0oooo
00<000000?ooo`3oool00P3o000:0?ooo`80o`00203oool20?l000D0oooo
1P3o00000`3oool0o`000?l0000=0?ooo`P0o`002P3oool20?l000T0oooo
103o000@0?ooo`H0o`002@3oool40?l000030?ooo`000?l0003o0080003o
4`3oool4003o00D0oooo0P00o`040?ooo`800?l0203oool2003o00H0oooo
1000o`000`3oool00?l0003o000B0?ooo`030000003oool0oooo00@0oooo
000D0?ooo`030000003oool0oooo00H0oooo0P3o00020?ooo`80o`00503o
ool20?l00180oooo1`3o000F0?ooo`80o`002@3oool20?l000@0oooo0P3o
00000`3oool0o`000?l000040?l000T0oooo0P3o0000103oool0003o0000
o`000?lE0?ooo`@00?l03`3oool2003o00D0oooo0`00o`040?ooo`@00?l0
5@3oool00`000000oooo0?ooo`040?ooo`00503oool20?l000H0oooo203o
000X0?ooo`D0o`007@3oool20?l00080oooo2P3o00020?ooo`@0o`002P3o
ool40000o`800?l05@3oool2003o00l0oooo1000o`030?ooo`D00?l0103o
ool2003o01H0oooo00<000000?ooo`3oool0103oool001<0oooo103o0005
0?ooo`P0o`008P3oool20?l000@0oooo103o000M0?ooo`@0o`0000<0oooo
0?l0003o00002@3o00020?ooo`80o`00103oool20?l000@0oooo10000?l4
003o02D0oooo1000o`030?ooo`D00?l03@3oool2003o00030?ooo`00o`00
0?l000X0oooo00<000000?ooo`3oool0103oool001<0oooo103o00060?oo
o`80o`000P3oool20?l00280oooo103o00040?ooo`80o`004@3oool20?l0
00/0oooo103o00020?ooo`/0o`001P3oool40?l00080oooo0`000?l20?oo
o`@00?l02`3oool2003o01T0oooo0P00o`050?ooo`@00?l0303oool7003o
00T0oooo00<000000?ooo`3oool0103oool001@0oooo0P3o000A0?ooo`80
o`00703oool40?l000L0oooo0P3o000=0?ooo`@0o`002`3oool20?l000H0
oooo0P3o00020?ooo`@0o`00103oool60?l000@0003o103oool2003o00/0
oooo1000o`090?ooo`800?l05@3oool2003o00/0oooo2@00o`090?ooo`03
0000003oool0oooo00@0oooo000D0?ooo`030000003oool0oooo00l0oooo
103o000L0?ooo`80o`001`3oool40?l000`0oooo103o000H0?ooo`80o`00
103oool50?l000D0003o00<0oooo003o0000o`003P3oool6003o00L0oooo
1000o`0P0?ooo`H00?l000<0oooo003o0000o`002P3oool00`000000oooo
0?ooo`040?ooo`00503oool00`000000oooo0?ooo`0?0?ooo`@0o`009@3o
ool40?l000d0oooo0P3o000O0?ooo`@0o`0010000?l00`3o0000oooo003o
0003003o00/0oooo2@00o`060?ooo`@00?l0603oool2003o00H0oooo1P00
o`0=0?ooo`030000003oool0oooo00@0oooo000D0?ooo`030000003oool0
oooo0100oooo0P3o000@0?ooo`80o`00403oool20?l000<0oooo0P3o0000
0`3oool0o`000?l0000<0?ooo`80o`007`3oool20?l000<0003o2000o`02
0?ooo`800?l01P3oool:003o00L0oooo0P00o`0H0?ooo`@00?l01P3oool6
003o00`0oooo00<000000?ooo`3oool0103oool001@0oooo00<000000?oo
o`3oool08@3oool40?l000h0oooo1P3o00020?ooo`@0o`002P3oool40?l0
01d0oooo1@000?l8003o0080oooo1000o`000`3oool00?l0003o00020?oo
o`D00?l00P3oool2003o00X0oooo0P00o`0@0?ooo`800?l0103oool4003o
00P0oooo1000o`0<0?ooo`030000003oool0oooo00@0oooo000D0?ooo`03
0000003oool0oooo0240oooo103o000>0?ooo`L0o`0000<0oooo0?l0003o
00000P3o00090?ooo`D0o`003@3oool20?l000d0oooo1@000?l00`3oool0
0?l0003o0004003o00@0oooo2000o`020?ooo`800?l00`3oool4003o00P0
oooo1000o`0>0?ooo`H00?l00P3oool2003o00X0oooo0P00o`0=0?ooo`03
0000003oool0oooo00@0oooo000D0?ooo`030000003oool0oooo0280oooo
0P3o000@0?ooo`H0o`000P3oool20?l000X0oooo103o000;0?ooo`H0o`00
1@3oool20?l000040?ooo`3o0000o`000?ooo`<0003o1@3oool4003o00H0
oooo0P00o`000`3oool00?l0003o0002003o00L0oooo1000o`080?ooo`@0
0?l03P3oool7003o00<0oooo0P00o`0G0?ooo`030000003oool0oooo00@0
oooo000D0?ooo`030000003oool0oooo01d0oooo0P3o000H0?ooo`80o`00
0P3oool40?l000X0oooo0`3o000:0?ooo`L0o`00103oool50?l000@0003o
503oool2003o00T0oooo0P00o`0:0?ooo`800?l0403oool6003o0080oooo
1000o`050?ooo`800?l00P3oool2003o00/0oooo00<000000?ooo`3oool0
103oool001@0oooo00<000000?ooo`3oool0703oool40?l001/0oooo103o
000:0?ooo`@0o`002@3oool60?l000D0oooo0`3o00050000oa80oooo0P00
o`0]0?ooo`800?l00`3oool4003o00@0oooo2000o`0:0?ooo`030000003o
ool0oooo00@0oooo000D0?ooo`030000003oool0oooo01<0oooo0P3o0007
0?ooo`@0o`002`3oool20?l000l0oooo0P3o000;0?ooo`@0o`002P3oool2
0?l000T0oooo1@000?lC0?ooo`@00?l00P3oool2003o02h0oooo0P00o`04
0?ooo`T00?l02P3oool00`000000oooo0?ooo`040?ooo`00503oool00`00
0000oooo0?ooo`0@0?ooo`H0o`001`3oool40?l000P0oooo1@3o00070?oo
o`80o`004`3oool20?l000L0oooo0P3o000<0?ooo`@0003o5@3oool4003o
00030?ooo`00o`000?l000800?l0403oool2003o00`0oooo0P00o`0C0?oo
o`@00?l00P3oool2003o00/0oooo00<000000?ooo`3oool0103oool001@0
oooo00<000000?ooo`3oool03`3oool70?l000L0oooo103o00070?ooo`H0
o`00103oool60?l001X0oooo103o000:0?ooo`<0003o00<00?l00?ooo`3o
ool05@3oool2003o0080oooo1000o`0?0?ooo`@00?l01@3oool2003o00<0
oooo1000o`0C0?ooo`800?l0203oool2003o00H0oooo00<000000?ooo`3o
ool0103oool001@0oooo00<000000?ooo`3oool03`3oool60?l000T0oooo
0P3o00070?ooo`H0o`00103oool90?l001<0oooo0P3o00030?ooo`@0o`00
1`3oool50000o`<00?l06@3oool4003o00L0oooo0P00o`070?ooo`@00?l0
103oool4003o0080oooo1000o`060?ooo`800?l0503oool4003o00D0oooo
00<000000?ooo`3oool0103oool001@0oooo00<000000?ooo`3oool02`3o
ool20?l000<0oooo0P3o000E0?ooo`@0o`001P3oool:0?l00140oooo103o
00030?ooo`80o`001P3oool60000o`@00?l06@3oool4003o00H0oooo1000
o`070?ooo`800?l0103oool5003o00<0oooo0P00o`060?ooo`@00?l02`3o
ool2003o00H0oooo1000o`020?ooo`800?l000<0oooo0000003oool01@3o
ool001@0oooo00<000000?ooo`3oool02P3oool40?l000@0oooo0P3o000D
0?ooo`80o`00203oool20?l000<0oooo1@3o000@0?ooo`@0o`002@3oool5
0000o`@0oooo0P00o`060?ooo`800?l02P3oool2003o00L0oooo1000o`05
0?ooo`@00?l03@3oool4003o00`0oooo1000o`0:0?ooo`@00?l01P3oool2
003o0080oooo1000o`000`000000oooo0?ooo`040?ooo`00503oool00`00
0000oooo0?ooo`040?ooo`80o`00103oool40?l000<0oooo103o000?0?oo
o`80o`003P3oool20?l00080oooo1@3o000>0?ooo`@0o`00203oool50000
o`d0oooo1000o`080?ooo`@00?l01`3oool4003o00D0oooo0P00o`0?0?oo
o`800?l03P3oool2003o00/0oooo1000o`0:0?ooo`@00?l000<000000?oo
o`3oool0103oool001@0oooo00<000000?ooo`3oool00`3oool40?l000@0
oooo0P3o00040?ooo`@0o`002P3oool20?l00080oooo103o00070?ooo`80
o`000`3oool40?l000030?ooo`3o0000o`0000<0o`003P3oool40?l000D0
oooo1P000?l?0?ooo`@00?l0203oool4003o00H0oooo1@00o`000`3oool0
0?l0003o000N0?ooo`800?l04@3oool2003o00`0oooo0P00o`000`3oool0
00000?ooo`050?ooo`00503oool00`000000oooo0?ooo`030?ooo`@0o`00
2`3oool20?l000X0oooo103o00000`3oool0o`000?l000030?l000D0oooo
103o00020?ooo`T0o`00403oool20?l000@0oooo1P000?lB0?ooo`800?l0
2P3oool2003o00H0oooo1@00o`000`3oool00?l0003o0002003o00H0oooo
0P00o`0D0?ooo`@00?l03@3oool2003o00`0oooo0P00o`040?ooo`030000
003oool0oooo00@0oooo000D0?ooo`030000003oool0oooo00@0oooo0P3o
000H0?ooo`@0o`000P3oool40?l000D0oooo103o00030?ooo`80o`0000<0
oooo0?l0003o00000P3o000E0?ooo`D0003o0P00o`0W0?ooo`@00?l00P3o
ool4003o00D0oooo1000o`0C0?ooo`@00?l02@3oool2003o00030?ooo`00
o`000?l000800?l02P3oool4003o00<0oooo00<000000?ooo`3oool0103o
ool001@0oooo00<000000?ooo`3oool02@3oool20?l001@0oooo0P3o0004
0?ooo`80o`001`3oool20?l000H0oooo103o000D0?ooo`D0003o00<0oooo
003o0000o`000P00o`0W0?ooo`800?l00`3oool3003o00D0oooo1@00o`0D
0?ooo`800?l02@3oool8003o00H0oooo0P00o`020?ooo`@00?l00`3oool0
0`000000oooo0?ooo`040?ooo`00503oool00`000000oooo0?ooo`080?oo
o`D0o`00:@3oool40?l000h0oooo0P3o00000`3oool0003o0000o`040000
o`<0oooo1000o`0[0?ooo`@00?l01@3oool4003o0200oooo1000o`000`3o
ool00?l0003o00060?ooo`@00?l00P3oool2003o00@0oooo00<000000?oo
o`3oool0103oool001@0oooo00<000000?ooo`3oool0203oool60?l001T0
oooo0P3o000>0?ooo`80o`003P3oool20?l000H0003o1P3oool2003o00X0
oooo0P00o`0F0?ooo`800?l0203oool5003o00D0oooo0P00o`0;0?ooo`80
0?l05@3oool2003o00X0oooo1@00o`070?ooo`030000003oool0oooo00@0
oooo000D0?ooo`030000003oool0oooo00T0oooo1@3o000H0?ooo`@0o`00
6`3oool20?l000D0003o503oool4003o00<0oooo0P00o`040?ooo`800?l0
2@3oool4003o00P0oooo1@00o`0@0?ooo`@00?l08@3oool5003o00H0oooo
00<000000?ooo`3oool0103oool001@0oooo00<000000?ooo`3oool02`3o
ool20?l001T0oooo103o000J0?ooo`H0003o5P3oool4003o0080oooo1000
o`020?ooo`@00?l0203oool4003o00T0oooo1000o`0@0?ooo`@00?l08P3o
ool4003o00H0oooo00<000000?ooo`3oool0103oool001@0oooo00<00000
0?ooo`3oool06`3oool20?l000X0oooo0P3o00030?ooo`80o`00503oool6
0000o`800?l05`3oool2003o00<0oooo1000o`020?ooo`@00?l02@3oool2
003o00/0oooo0P00o`0B0?ooo`800?l08P3oool4003o00L0oooo00<00000
0?ooo`3oool0103oool001@0oooo00<000000?ooo`3oool06P3oool40?l0
00d0oooo103o000A0?ooo`D0003o1000o`0G0?ooo`@00?l00`3oool2003o
00@0oooo0P00o`1?0?ooo`@00?l01`3oool00`000000oooo0?ooo`040?oo
o`00503oool00`000000oooo0?ooo`0J0?ooo`@0o`001P3oool20?l000D0
oooo103o000>0?ooo`H0003o1@00o`030?ooo`800?l01`3oool2003o00X0
oooo1000o`0n0?ooo`800?l06`3oool4003o00H0oooo00<000000?ooo`3o
ool0103oool001@0oooo00<000000?ooo`3oool06`3oool20?l000H0oooo
1P3o00030?ooo`80o`002P3oool90000o`030?ooo`00o`000?l000@00?l0
0P3oool4003o00D0oooo1000o`020?ooo`800?l01P3oool2003o01@0oooo
0P00o`0>0?ooo`800?l0603oool4003o01/0oooo1000o`050?ooo`030000
003oool0oooo00@0oooo000D0?ooo`030000003oool0oooo02<0oooo1`3o
000<0?ooo`P0003o1@3oool4003o00<0oooo1000o`050?ooo`T00?l0103o
ool4003o00L0oooo0P00o`090?ooo`@00?l0303oool4003o00<0oooo0P00
o`050?ooo`800?l02`3oool4003o00@0oooo0P00o`050?ooo`800?l03P3o
ool4003o00D0oooo00<000000?ooo`3oool0103oool001@0oooo00<00000
0?ooo`3oool0503oool20?l000h0oooo1P3o00070?ooo`P0003o2`3oool2
003o00D0oooo0P00o`070?ooo`P00?l0103oool4003o00H0oooo1000o`08
0?ooo`@00?l02`3oool5003o0080oooo1000o`030?ooo`@00?l02`3oool2
003o00@0oooo1@00o`020?ooo`@00?l02`3oool2003o00030?ooo`00o`00
0?l000H0oooo00<000000?ooo`3oool0103oool001@0oooo00<000000?oo
o`3oool04`3oool40?l00100oooo0P3o00060?ooo`P0003o00<00?l00?oo
o`3oool02@3oool4003o00h0oooo1P00o`000`3oool00?l0003o00030?oo
o`800?l0103oool2003o00030?ooo`00o`000?l000800?l02@3oool2003o
00/0oooo1@00o`030?ooo`@00?l00`3oool4003o0140oooo1P00o`000`3o
ool00?l0003o0002003o00X0oooo1000o`080?ooo`030000003oool0oooo
00@0oooo000D0?ooo`030000003oool0oooo01<0oooo103o000C0?ooo`P0
003o0`3oool4003o00X0oooo1000o`0?0?ooo`800?l00`3oool4003o00L0
oooo1000o`000`3oool00?l0003o000G0?ooo`D00?l00`3oool5003o00<0
oooo0P00o`0>0?ooo`800?l00`3oool5003o0080oooo0P00o`0;0?ooo`@0
0?l0203oool00`000000oooo0?ooo`040?ooo`00503oool00`000000oooo
0?ooo`0D0?ooo`80o`00103oool20?l000T0oooo2`000?l30?ooo`H00?l0
00<0oooo003o0000o`001P3oool5003o01@0oooo1000o`070?ooo`@00?l0
6`3oool3003o00@0oooo1P00o`0A0?ooo`@00?l0103oool2003o0140oooo
0P00o`090?ooo`030000003oool0oooo00@0oooo000D0?ooo`030000003o
ool0oooo0080oooo0`3o00060?ooo`80o`00303oool40?l000<0oooo2`00
0?l70?ooo`H00?l000<0oooo003o0000o`000P00o`030?ooo`L00?l02@3o
ool2003o00X0oooo0P00o`090?ooo`800?l02`3oool2003o01L0oooo1@00
o`0@0?ooo`D00?l08P3oool00`000000oooo0?ooo`040?ooo`00503oool0
10000000oooo0?ooo`3oool50?l000@0oooo103o000;0?ooo`80o`002`00
0?l;0?ooo`D00?l00`3oool4003o0080oooo1`00o`060?ooo`800?l000<0
oooo003o0000o`000`00o`020?ooo`800?l06`3oool4003o01P0oooo0P00
o`0A0?ooo`@00?l0503oool3003o00`0oooo00<000000?ooo`3oool0103o
ool000d0oooo1@0000020?ooo`040000003o0000o`000?ooo`D0o`00103o
ool40?l000H0oooo3@000?l@0?ooo`H00?l00`3oool2003o00<0oooo1@00
o`070?ooo`h00?l06P3oool4003o02`0oooo0P00o`0:0?ooo`800?l01`3o
ool6003o00030?ooo`00o`000?l000P0oooo00<000000?ooo`3oool0103o
ool000l0oooo00<000000?ooo`3oool00P3oool40?l000040?ooo`3o0000
o`000?l000D0oooo4P000?l60?ooo`800?l03P3oool5003o00T0oooo0P00
o`080?ooo`D00?l000<0oooo003o0000o`001`00o`0K0?ooo`800?l0>03o
ool4003o00D0oooo2`00o`070?ooo`030000003oool0oooo00@0oooo000?
0?ooo`050000003oool0oooo0?ooo`000?l0c@0000060?ooo`003`3oool0
10000000oooo0?ooo`3oool?0000oaH0oooo1000o`0V0?ooo`800?l0HP3o
ool2003o00L0oooo0P00o`050?ooo`800?l03`3oool000l0oooo00<00000
0?ooo`3oool00P3oool00`000000oooo0?ooo`0R0?ooo`800?l0[03oool0
00h0oooo0P0000040?ooo`030000003oool0oooo0=00oooo000D0?ooo`03
0000003oool0oooo0=00oooo000D0?ooo`030000003oool0oooo0=00oooo
003W0?ooo`00i`3oool00>L0oooo003W0?ooo`00\
\>"], "Graphics",
    Evaluatable->False,
    ImageSize->{231, 231},
    ImageMargins->{{0, 0}, {0, 0}},
    ImageRegion->{{0, 1}, {0, 1}}],
  "  \n\t\t",
  StyleBox["Figure 3.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "  ",
  Cell[BoxData[
      \(\[Pi]\  \[TildeTilde] \ \[Rho]*4\  = \ \(0.787\ *4\  = \ 3.148\)\)]],
  "   \n"
}], "Text"],

Cell[TextData[{
  "\tEvery time a Monte Carlo simulation is made using the same sample size \
",
  Cell[BoxData[
      \(n\)]],
  " it will come up with a slightly different value.  The values converge \
very slowly of the order  ",
  Cell[BoxData[
      RowBox[{
        StyleBox["O",
          FontWeight->"Bold"], \((n\^\(\(-1\)/2\))\)}]]],
  ".  This property is a consequence of the Central Limit Theorem. "
}], "Text"],

Cell[TextData[{
  StyleBox["Proof",
    FontFamily->"New Century Schlbk",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  "  ",
  StyleBox[ButtonBox["Monte Carlo Pi",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/MonteCarloPiProof.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  "  "
}], "Text"],

Cell[TextData[{
  StyleBox["Remark.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  Another interesting simulation for approximating  ",
  Cell[BoxData[
      \(\[Pi]\)]],
  "  is known as ",
  ButtonBox["Buffon's Needle problem",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/BuffonsNeedleProblem.html"], None},
    ButtonStyle->"Hyperlink"],
  ".  The reader can find many references to it in books, articles and on the \
internet.  "
}], "Text"],

Cell[TextData[{
  StyleBox["Computer Programs",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  "  ",
  StyleBox[ButtonBox["Monte Carlo Pi ",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/MonteCarloPiProg.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  " "
}], "Text"],

Cell[TextData[StyleBox["Mathematica Subroutine (Monte Carlo Pi).",
  FontWeight->"Bold",
  FontColor->RGBColor[0.500008, 0, 0.996109]]], "Text"],

Cell[BoxData[{
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(MonteCarloPi[n0_]\  := \ 
        Module[{\ d, i\ }, \[IndentingNewLine]n = 
            n0; \ \[IndentingNewLine]Pin = \(Pout = {}\); \ \
\[IndentingNewLine]For[i = 1, 
            i \[LessEqual] n, \(i++\), \[IndentingNewLine]X = 
              Random[]; \ \[IndentingNewLine]Y = 
              Random[]; \ \[IndentingNewLine]d\  = \ 
              X\^2 + Y\^2; \ \[IndentingNewLine]If[\ d \[LessEqual] 1, \ 
              Pin = Append[Pin, {X, Y}], \ \[IndentingNewLine]\(Pout = 
                  Append[Pout, {X, Y}];\)\ ];\ ]; \ \[IndentingNewLine]m = 
            Length[Pin]; \ \[IndentingNewLine]k = 
            Length[Pout]; \ \[IndentingNewLine]\[Rho] = 
            m\/n; \ \[IndentingNewLine]approx\  = \ \[Rho]*4.0; \ \
\[IndentingNewLine]Return[approx];\ ];\)\ \)}], "Input"],

Cell[TextData[{
  StyleBox["Example 1.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Use Monte Carlo simulation to approximate the number  ",
  Cell[BoxData[
      \(\[Pi]\)]],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 1.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell["\<\
The following additions to the subroutine include print and graphics \
statements for the answer. \
\>", "Text"],

Cell[BoxData[
    \(\(MonteCarloResults[n0_] := 
        Module[{}, \[IndentingNewLine]MonteCarloPi[
            n0]; \[IndentingNewLine]Pin = 
            Map[Point, Pin]; \ \[IndentingNewLine]DOTSin = 
            Graphics[{Red, PointSize[0.02], 
                Pin}\ ]; \ \[IndentingNewLine]Pout = 
            Map[Point, Pout]; \ \[IndentingNewLine]DOTSout = 
            Graphics[{Green, PointSize[0.02], 
                Pout}\ ]; \ \[IndentingNewLine]circle\  = \ 
            Graphics[{Blue, Thickness[0.01], 
                Circle[{0, 0}, 
                  1, {0, \[Pi]\/2}]}]; \ \[IndentingNewLine]line\  = \ 
            Graphics[{Line[{{1, 0}, {1, 1}, {0, 
                      1}}]}]; \ \[IndentingNewLine]Show[DOTSin, DOTSout, 
            circle, line, Axes \[Rule] True, 
            Ticks \[Rule] {Range[0, 1, 0.5], Range[0, 1, 0.5]}, 
            AspectRatio \[Rule] 
              1]; \ \[IndentingNewLine]Print["\<Points Generated  n = \>", \ 
            n]; \ \[IndentingNewLine]Print["\<   Inside Points  m = \>", \ 
            m]; \ \[IndentingNewLine]Print["\<  Outside Points  k = \>", \ 
            k]; \ \[IndentingNewLine]Print["\<Approximation to  \[Pi] \
\[TildeTilde] \>", \ 
            approx]; \ \[IndentingNewLine]Print[\*"\"\<Order of error \!\(\
\[Pi]\/\@n\) \[TildeTilde] \>\"", \ \[Pi] 
               1.0\/\@n]; \ \[IndentingNewLine]Print["\<         \
|\[Pi]-approx| \[TildeTilde] \>", Abs[\[Pi] - approx]\ ];\ ];\)\)], "Input"],

Cell[TextData[{
  "Explore what happens with  ",
  Cell[BoxData[
      RowBox[{\(n = 100\), ",", "400", ",", "1600", ",", "6400", ",", "  ", 
        RowBox[{
          StyleBox["and",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], "  ", "10000"}]}]]],
  "  points. "
}], "Text"],

Cell[BoxData[
    \(\(MonteCarloResults[100];\)\)], "Input"],

Cell[BoxData[
    \(\(MonteCarloResults[400];\)\)], "Input"],

Cell[BoxData[
    \(\(MonteCarloResults[1600];\)\)], "Input"],

Cell[BoxData[
    \(\(MonteCarloResults[6400];\)\)], "Input"],

Cell[BoxData[
    \(\(MonteCarloResults[10000];\)\)], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Area Under a Curve",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "\n\n\tMonte Carlo simulation can be used to approximate the area  ",
  Cell[BoxData[
      StyleBox["A",
        FontWeight->"Bold"]]],
  " under a curve  ",
  Cell[BoxData[
      \(y = f \((x)\)\)]],
  "  for  ",
  Cell[BoxData[
      \(a \[LessEqual] x \[LessEqual] b\)]],
  ".  First, we must determine the rectangular box ",
  Cell[BoxData[
      StyleBox["R",
        FontWeight->"Bold"]]],
  " containing ",
  Cell[BoxData[
      StyleBox["A",
        FontWeight->"Bold"]]],
  " as follows. \n\t\n\t\t",
  Cell[BoxData[
      RowBox[{
        StyleBox["R",
          FontWeight->"Bold"], "=", 
        RowBox[{"{", 
          RowBox[{\((x, y)\), ":", " ", 
            RowBox[{"a", "\[LessEqual]", "x", "\[LessEqual]", 
              RowBox[{"b", "  ", 
                StyleBox["and",
                  FontFamily->"Courier New",
                  FontSize->12,
                  FontWeight->"Plain",
                  FontSlant->"Plain",
                  FontColor->GrayLevel[0],
                  FontVariations->{"Underline"->False,
                  "StrikeThrough"->False}], "   ", "0"}], "\[LessEqual]", "y",
               "\[LessEqual]", "d"}]}], "}"}]}]]],
  "  where  ",
  Cell[BoxData[
      \(d = max\+\(a \[LessEqual] x \[LessEqual] b\)\ f \((x)\)\)]],
  ".  \n\t\t\nSecond, randomly pick points  ",
  Cell[BoxData[
      \({\((x\_i, y\_i)\)}\_\(i = 1\)\%n\)]],
  "  in ",
  Cell[BoxData[
      StyleBox["R",
        FontWeight->"Bold"]]],
  ", where ",
  Cell[BoxData[
      RowBox[{\(x\_i\), "  ", 
        StyleBox["and",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "  ", \(y\_i\)}]]],
  " are chosen from independent uniformly distributed random variables over  \
",
  Cell[BoxData[
      RowBox[{\([a, b]\), "  ", 
        RowBox[{
          StyleBox["and",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], "  ", "[", \(0, d\), "]"}]}]]],
  ", respectively.   Third, calculate the ratio ",
  Cell[BoxData[
      \(\[Rho]\)]],
  " as follows:\n\n\t\t ",
  Cell[BoxData[
      \(\[Rho] = m\/n\)]],
  ", where ",
  Cell[BoxData[
      \(m\)]],
  " is number of points that lie in  ",
  Cell[BoxData[
      StyleBox["A",
        FontWeight->"Bold"]]],
  ".  \n\nThe area is computed using the approximation,  ",
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["area",
            FontFamily->"Times New Roman"], " ", 
          StyleBox["A",
            FontWeight->"Bold"]}], " ", "\[TildeTilde]", " ", 
        RowBox[{"\[Rho]", "*", 
          StyleBox["area",
            FontFamily->"Times New Roman"], " ", 
          StyleBox["R",
            FontWeight->"Bold"]}]}]]],
  ",  and we can use the formula  \n\n\t\t",
  Cell[BoxData[
      RowBox[{
        RowBox[{
          StyleBox["area",
            FontFamily->"Times New Roman"], " ", 
          StyleBox["A",
            FontWeight->"Bold"]}], "  ", "\[TildeTilde]", 
        "  ", \(\[Rho]*\((b - a)\)*d\)}]]],
  ".     \n\t\nAn \"estimate\" for the accuracy of the above computation is\n\
\t\n\t\t",
  Cell[BoxData[
      RowBox[{" ", 
        RowBox[{
          RowBox[{"\[CapitalDelta]", " ", 
            StyleBox["A",
              FontWeight->"Bold"]}], "  ", "\[TildeTilde]", 
          "  ", \(\((b - a)\)*d*\ \@\(\(\[Rho] - \[Rho]\^2\)\/n\)\)}]}]]],
  ".  "
}], "Text"],

Cell[TextData[{
  StyleBox["Algorithm Monte Carlo Simulation.",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  "  Given that   ",
  Cell[BoxData[
      \(0 \[LessEqual] f \((x)\)\)]],
  "  for  ",
  Cell[BoxData[
      \(a \[LessEqual] x \[LessEqual] b\)]],
  ".  Use Monte Carlo simulation to approximate the integral  \n\n\t\t",
  Cell[BoxData[
      RowBox[{\(Area\ under\ the\ curve\), "  ", "=", "  ", 
        RowBox[{
          StyleBox[
            SubsuperscriptBox["\[Integral]", 
              StyleBox["a",
                FontSize->10], 
              StyleBox["b",
                FontSize->10]],
            FontSize->18], 
          StyleBox[" ",
            FontSize->18], \(f \((x)\) \[DifferentialD]x\)}]}]]],
  ".  "
}], "Text"],

Cell[TextData[StyleBox["Mathematica Subroutine (Monte Carlo Simulation).",
  FontWeight->"Bold",
  FontColor->RGBColor[0.500008, 0, 0.996109]]], "Text"],

Cell[BoxData[{
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(MonteCarloSimulation[n0_]\  := \ 
        Module[{i, Pin = \(Pout = {}\)\ }, \[IndentingNewLine]n = 
            n0; \[IndentingNewLine]For[i = 1, 
            i \[LessEqual] n, \(i++\), \[IndentingNewLine]X = 
              a + \((b - a)\) Random[]; \[IndentingNewLine]Y = 
              d*Random[]; \[IndentingNewLine]If[\ 
              Y \[LessEqual] f[X], \ \[IndentingNewLine]Pin = 
                Append[Pin, {X, Y}], \ \[IndentingNewLine]\(Pout = 
                  Append[Pout, {X, Y}];\)\ ];\ ]; \[IndentingNewLine]m\  = \ 
            Length[Pin]; \[IndentingNewLine]k\  = \ 
            Length[Pout]; \[IndentingNewLine]\[Rho]\  = \ 
            m\/n; \ \[IndentingNewLine]BoxArea\  = \ \((b - a)\)*
              d\ ; \[IndentingNewLine]Area = 
            N[\ \[Rho]*
                BoxArea\ ]; \[IndentingNewLine]\[CapitalDelta]Area\  = \ 
            N[BoxArea\ \@\(\(\[Rho] - \[Rho]\^2\)\/n\)]; \
\[IndentingNewLine]DOTSin = 
            Graphics[{Red, PointSize[0.01], 
                Map[Point, Pin]}\ ]; \[IndentingNewLine]DOTSout = 
            Graphics[{Green, PointSize[0.01], 
                Map[Point, Pout]}\ ]; \[IndentingNewLine]Show[graph, rect, 
            DOTSin, DOTSout, Axes \[Rule] True, 
            DisplayFunction \[Rule] $DisplayFunction]; \
\[IndentingNewLine]Print["\<To find the area under the curve\>"]; \ \
\[IndentingNewLine]Print["\<y = \>", f[x], "\<  over the interval  [\>", 
            a, "\<,\>", 
            b, "\<]\>"\ ]; \[IndentingNewLine]Print["\<Points  generated    n \
= \>", \ n\ ]; \[IndentingNewLine]Print["\<Points  under curve  m = \>", \ 
            m]; \[IndentingNewLine]Print["\<Points  above curve  k = \>", \ 
            k\ ]; \[IndentingNewLine]Print[\*"\"\<The ratio \[Rho] = \!\(m\/n\
\) = \>\"", m, "\</\>", 
            n\ ]; \[IndentingNewLine]Print["\<          \[Rho] = \>", \[Rho], \
"\< = \>", N[\[Rho]]\ ]; \[IndentingNewLine]Print["\<   BoxArea  = \>", 
            BoxArea\ ]; \[IndentingNewLine]Print["\<Area under curve \>"]; \ \
\[IndentingNewLine]Print["\<\[Rho] * BoxArea = \>", \[Rho], "\<*\>", 
            BoxArea, "\< = \>", 
            N[\ \[Rho]*
                BoxArea\ ]]; \ \[IndentingNewLine]Print["\<\>"]; \ \
\[IndentingNewLine]Print["\<Monte Carlo Approximation\>"]; \ \
\[IndentingNewLine]Print["\<The area under the curve  A \[TildeTilde] \>", \ 
            Area\ ]; \[IndentingNewLine]Print["\<Estimate for the error   \
\[CapitalDelta]A \[TildeTilde] \>", \[CapitalDelta]Area\ ]; \
\[IndentingNewLine]Return[{n, Area}];];\)\)}], "Input"],

Cell[TextData[{
  StyleBox["Caveat.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  The above subroutine is for pedagogical purposes.  The standard \
implementation of Monte Carlo integration is done by selecting points only in \
the domain of the function, for a one dimensional integral we would use \
random numbers to select points ",
  Cell[BoxData[
      \({x\_i}\_\(i = 1\)\%n\)]],
  " in the interval ",
  Cell[BoxData[
      \(a \[LessEqual] x \[LessEqual] b\)]],
  " and then use the approximation \n\n\t\t",
  Cell[BoxData[
      \(\[Integral]\_a\%b\ 
          f[x] \[DifferentialD]x\ \  \[TildeTilde] \ \((b - 
              a)\) \(1\/n\) \(\[Sum]\+\(i = 1\)\%n\ f[x\_i]\)\)]],
  ".\n\nThis idea will be developed in the module ",
  ButtonBox["Monte Carlo integration",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/MonteCarloMod.html"], 
      None},
    ButtonStyle->"Hyperlink"],
  ". "
}], "Text"],

Cell[TextData[{
  StyleBox["Example 2.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Use Monte Carlo simulation ",
  "to approximate",
  " the integral  ",
  Cell[BoxData[
      \(\[Integral]\_0\%2\ \(\@\(4 - x\^2\)\) \[DifferentialD]x\)]]
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 2.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell["\<\
Set up the function and the rectangular box enclosing the area. \
\>", "Text"],

Cell[BoxData[{
    \(\(f[x_] = \@\(4 - x\^2\);\)\ \), "\[IndentingNewLine]", 
    \(\(a = 0;\)\ \), "\[IndentingNewLine]", 
    \(\(b = 2;\)\ \), "\[IndentingNewLine]", 
    \(\(c = 0;\)\ \), "\[IndentingNewLine]", 
    \(\(h = \(b - a\)\/100.0;\)\ \ \), "\[IndentingNewLine]", 
    \(\(pts = Table[{x, f[x]}, {x, a, b, h}];\)\ \), "\[IndentingNewLine]", 
    \(\(Y = \(Transpose[pts]\)\_\(\(\[LeftDoubleBracket]\)\(2\)\(\
\[RightDoubleBracket]\)\);\)\ \), "\[IndentingNewLine]", 
    \(\(d = Max[Y];\)\ \), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(rect\  = \ 
        Graphics[{Brown, Thickness[0.005], 
            Line[{{a, c}, {b, c}, {b, d}, {a, d}, {a, 
                  c}}]}];\)\ \), "\[IndentingNewLine]", 
    \(\(graph = 
        ListPlot[pts, PlotStyle \[Rule] {Thickness[0.005], Blue}, 
          PlotJoined \[Rule] True, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(Show[graph, rect, 
        DisplayFunction \[Rule] $DisplayFunction];\)\), \
"\[IndentingNewLine]", 
    \(\(Print["\<To find the area under the curve\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<y = \>", f[x], "\<  over the interval [a,b] = [\>", 
        a, "\<,\>", b, "\<]\>"\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<It appears that a rectangle containing the area is\>"];\)\ \
\), "\[IndentingNewLine]", 
    \(\(Print["\<R = {(x,y}:  \>", a, "\< \[LessEqual] x \[LessEqual] \>", 
        b, "\<  and  \>", c, "\< \[LessEqual] y \[LessEqual] \>", 
        d, "\< }\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<If this is correct, then Mathematica will proceed using\>"];\
\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<a = \>", a\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<b = \>", b\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<c = \>", c\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<d = \>", d\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<If not, then enter the correct value(s) of a, b, d.\>"];\)\ \
\), "\[IndentingNewLine]", 
    \(\(Print["\<Then invoke the subroutine 'MonteCarloSimulation'\>"];\)\ \
\)}], "Input"],

Cell[TextData[{
  "Explore what happens with  ",
  Cell[BoxData[
      RowBox[{\(n = 100\), ",", "1000", ",", " ", 
        RowBox[{
          StyleBox["and",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], "  ", "10000"}]}]]],
  "  points. "
}], "Text"],

Cell[BoxData[
    \(\(val1 = MonteCarloSimulation[100];\)\)], "Input"],

Cell[BoxData[
    \(\(val2 = MonteCarloSimulation[1000];\)\)], "Input"],

Cell[BoxData[
    \(\(val3 = MonteCarloSimulation[10000];\)\)], "Input"],

Cell[TextData[{
  "We are done.  \n\n",
  StyleBox["Aside.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  The analytic value of the integral can be found."
}], "Text"],

Cell[BoxData[{
    \(\(f[x_] = \@\(4 - x\^2\);\)\ \), "\[IndentingNewLine]", 
    \(\(F[
          x_]\  = \ \[Integral]f[
              x] \[DifferentialD]x;\)\ \), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`FilledPlot`\>"];\)\), "\[IndentingNewLine]", 
    \(\(FilledPlot[f[x], {x, a, b}, PlotStyle \[Rule] Blue, 
        Fills \[Rule] \ Cyan, PlotRange \[Rule] {{a, b}, {0, 2}}, 
        Ticks \[Rule] {Range[0, 2, 1], Range[0, 2, 1]}, 
        AspectRatio \[Rule] 1];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<F[x] = \[Integral](\>", 
        f[x], "\<)\[DifferentialD]x\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<F[x] = \>", F[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a\%b, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = F[\>", b, "\<] - F[\>", 
        a, "\<]\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a\%b, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = (\>", F[b]\ , "\<) - (\>", 
        F[a]\ , "\<)\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Final answer\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a\%b, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = \>", 
        F[b]\  - \ F[a]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a\%b, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = \>", 
        N[F[b]\  - \ F[a]]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The approximations obtained with Monte Carlo \
simulation:\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Using n = \>", 
        val1\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\), "\< \
   area \[TildeTilde] \>", 
        val1\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)\ \
];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Using n = \>", 
        val2\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\), "\< \
  area \[TildeTilde] \>", 
        val2\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)\ \
];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Using n = \>", 
        val3\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\), "\< \
 area \[TildeTilde] \>", 
        val3\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)\ \
];\)\)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 3.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Use Monte Carlo simulation ",
  "to approximate",
  " the integral  ",
  Cell[BoxData[
      \(\[Integral]\_0\%2\( 4\/\(1 + x\^2\)\) \[DifferentialD]x\)]]
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 3.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell["\<\
Set up the function and the rectangular box enclosing the area. \
\>", "Text"],

Cell[BoxData[{
    \(\(f[x_] = 4\/\(1 + x\^2\);\)\ \), "\[IndentingNewLine]", 
    \(\(a = 0;\)\ \), "\[IndentingNewLine]", 
    \(\(b = 1;\)\ \), "\[IndentingNewLine]", 
    \(\(c = 0;\)\ \), "\[IndentingNewLine]", 
    \(\(h = \(b - a\)\/100.0;\)\ \ \), "\[IndentingNewLine]", 
    \(\(pts = Table[{x, f[x]}, {x, a, b, h}];\)\ \), "\[IndentingNewLine]", 
    \(\(Y = \(Transpose[pts]\)\_\(\(\[LeftDoubleBracket]\)\(2\)\(\
\[RightDoubleBracket]\)\);\)\ \), "\[IndentingNewLine]", 
    \(\(d = Max[Y];\)\ \), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(rect\  = \ 
        Graphics[{Brown, Thickness[0.005], 
            Line[{{a, c}, {b, c}, {b, d}, {a, d}, {a, 
                  c}}]}];\)\ \), "\[IndentingNewLine]", 
    \(\(graph = 
        ListPlot[pts, PlotStyle \[Rule] {Thickness[0.005], Blue}, 
          PlotJoined \[Rule] True, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(Show[graph, rect, 
        DisplayFunction \[Rule] $DisplayFunction];\)\), \
"\[IndentingNewLine]", 
    \(\(Print["\<To find the area under the curve\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<y = \>", f[x], "\<  over the interval [a,b] = [\>", 
        a, "\<,\>", b, "\<]\>"\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<It appears that a rectangle containing the area is\>"];\)\ \
\), "\[IndentingNewLine]", 
    \(\(Print["\<R = {(x,y}:  \>", a, "\< \[LessEqual] x \[LessEqual] \>", 
        b, "\<  and  \>", c, "\< \[LessEqual] y \[LessEqual] \>", 
        d, "\< }\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<If this is correct, then Mathematica will proceed using\>"];\
\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<a = \>", a\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<b = \>", b\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<c = \>", c\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<d = \>", d\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<If not, then enter the correct value(s) of a, b, d.\>"];\)\ \
\), "\[IndentingNewLine]", 
    \(\(Print["\<Then invoke the subroutine 'MonteCarloSimulation'\>"];\)\ \
\)}], "Input"],

Cell[TextData[{
  "Explore what happens with  ",
  Cell[BoxData[
      RowBox[{\(n = 100\), ",", "1000", ",", " ", 
        RowBox[{
          StyleBox["and",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], "  ", "10000"}]}]]],
  "  points. "
}], "Text"],

Cell[BoxData[
    \(\(val1 = MonteCarloSimulation[100];\)\)], "Input"],

Cell[BoxData[
    \(\(val2 = MonteCarloSimulation[1000];\)\)], "Input"],

Cell[BoxData[
    \(\(val3 = MonteCarloSimulation[10000];\)\)], "Input"],

Cell[TextData[{
  "We are done.  \n\n",
  StyleBox["Aside.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  The analytic value of the integral can be found."
}], "Text"],

Cell[BoxData[{
    \(\(f[x_] = 4\/\(1 + x\^2\);\)\ \), "\[IndentingNewLine]", 
    \(\(F[
          x_]\  = \ \[Integral]f[
              x] \[DifferentialD]x;\)\ \), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`FilledPlot`\>"];\)\), "\[IndentingNewLine]", 
    \(\(FilledPlot[f[x], {x, a, b}, PlotStyle \[Rule] Blue, 
        Fills \[Rule] \ Cyan, PlotRange \[Rule] {{a, b}, {0, 4}}, 
        Ticks \[Rule] {Range[0, 1, 0.5], 
            Range[0, 4, 1]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<F[x] = \[Integral](\>", 
        f[x], "\<)\[DifferentialD]x\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<F[x] = \>", F[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a\%b, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = F[\>", b, "\<] - F[\>", 
        a, "\<]\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a\%b, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = (\>", F[b]\ , "\<) - (\>", 
        F[a]\ , "\<)\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Final answer\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a\%b, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = \>", 
        F[b]\  - \ F[a]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a\%b, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = \>", 
        N[F[b]\  - \ F[a]]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The approximations obtained with Monte Carlo \
simulation:\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Using n = \>", 
        val1\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\), "\< \
   area \[TildeTilde] \>", 
        val1\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)\ \
];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Using n = \>", 
        val2\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\), "\< \
  area \[TildeTilde] \>", 
        val2\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)\ \
];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Using n = \>", 
        val3\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\), "\< \
 area \[TildeTilde] \>", 
        val3\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)\ \
];\)\)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 4.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Use Monte Carlo simulation ",
  "to approximate",
  " the integral  ",
  Cell[BoxData[
      \(\[Integral]\_0\%1\( 6\/\@\(4 - x\^2\)\) \[DifferentialD]x\)]]
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 4.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell["\<\
Set up the function and the rectangular box enclosing the area. \
\>", "Text"],

Cell[BoxData[{
    \(\(f[x_] = 6\/\@\(4 - x\^2\);\)\ \), "\[IndentingNewLine]", 
    \(\(a = 0;\)\ \), "\[IndentingNewLine]", 
    \(\(b = 1;\)\ \), "\[IndentingNewLine]", 
    \(\(c = 0;\)\ \), "\[IndentingNewLine]", 
    \(\(h = \(b - a\)\/100.0;\)\ \ \), "\[IndentingNewLine]", 
    \(\(pts = Table[{x, f[x]}, {x, a, b, h}];\)\ \), "\[IndentingNewLine]", 
    \(\(Y = \(Transpose[pts]\)\_\(\(\[LeftDoubleBracket]\)\(2\)\(\
\[RightDoubleBracket]\)\);\)\ \), "\[IndentingNewLine]", 
    \(\(d = Max[Y];\)\ \), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(rect\  = \ 
        Graphics[{Brown, Thickness[0.005], 
            Line[{{a, c}, {b, c}, {b, d}, {a, d}, {a, 
                  c}}]}];\)\ \), "\[IndentingNewLine]", 
    \(\(graph = 
        ListPlot[pts, PlotStyle \[Rule] {Thickness[0.005], Blue}, 
          PlotJoined \[Rule] True, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(Show[graph, rect, PlotRange \[Rule] {{a, b}, {c, d}}, 
        DisplayFunction \[Rule] $DisplayFunction];\)\), \
"\[IndentingNewLine]", 
    \(\(Print["\<To find the area under the curve\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<y = \>", f[x], "\<  over the interval [a,b] = [\>", 
        a, "\<,\>", b, "\<]\>"\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<It appears that a rectangle containing the area is\>"];\)\ \
\), "\[IndentingNewLine]", 
    \(\(Print["\<R = {(x,y}:  \>", a, "\< \[LessEqual] x \[LessEqual] \>", 
        b, "\<  and  \>", c, "\< \[LessEqual] y \[LessEqual] \>", 
        d, "\< }\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<If this is correct, then Mathematica will proceed using\>"];\
\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<a = \>", a\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<b = \>", b\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<c = \>", c\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<d = \>", d\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<If not, then enter the correct value(s) of a, b, d.\>"];\)\ \
\), "\[IndentingNewLine]", 
    \(\(Print["\<Then invoke the subroutine 'MonteCarloSimulation'\>"];\)\ \
\)}], "Input"],

Cell[TextData[{
  "Explore what happens with  ",
  Cell[BoxData[
      RowBox[{\(n = 100\), ",", "1000", ",", " ", 
        RowBox[{
          StyleBox["and",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], "  ", "10000"}]}]]],
  "  points. "
}], "Text"],

Cell[BoxData[
    \(\(val1 = MonteCarloSimulation[100];\)\)], "Input"],

Cell[BoxData[
    \(\(val2 = MonteCarloSimulation[1000];\)\)], "Input"],

Cell[BoxData[
    \(\(val3 = MonteCarloSimulation[10000];\)\)], "Input"],

Cell[TextData[{
  "We are done.  \n\n",
  StyleBox["Aside.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  The analytic value of the integral can be found."
}], "Text"],

Cell[BoxData[{
    \(\(f[x_] = 6\/\@\(4 - x\^2\);\)\ \), "\[IndentingNewLine]", 
    \(\(F[
          x_]\  = \ \[Integral]f[
              x] \[DifferentialD]x;\)\ \), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`FilledPlot`\>"];\)\), "\[IndentingNewLine]", 
    \(\(FilledPlot[f[x], {x, a, b}, PlotStyle \[Rule] Blue, 
        Fills \[Rule] \ Cyan, PlotRange \[Rule] {{a, b}, {0, 4}}, 
        Ticks \[Rule] {Range[0, 1, 0.5], 
            Range[0, 4, 1]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<F[x] = \[Integral](\>", 
        f[x], "\<)\[DifferentialD]x\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<F[x] = \>", F[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a\%b, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = F[\>", b, "\<] - F[\>", 
        a, "\<]\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a\%b, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = (\>", F[b]\ , "\<) - (\>", 
        F[a]\ , "\<)\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Final answer\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a\%b, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = \>", 
        F[b]\  - \ F[a]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a\%b, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = \>", 
        N[F[b]\  - \ F[a]]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The approximations obtained with Monte Carlo \
simulation:\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Using n = \>", 
        val1\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\), "\< \
   area \[TildeTilde] \>", 
        val1\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)\ \
];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Using n = \>", 
        val2\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\), "\< \
  area \[TildeTilde] \>", 
        val2\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)\ \
];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Using n = \>", 
        val3\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\), "\< \
 area \[TildeTilde] \>", 
        val3\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)\ \
];\)\)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Question.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Which of the above three examples will give better results if the goal \
is to obtain a numerical approximation of  ",
  Cell[BoxData[
      \(\(\(\[Pi]\)\(.\)\)\)]]
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Answer.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[TextData[{
  "Consider the following ratios for examples 2, 3, 4. \n\n\t\t",
  Cell[BoxData[{
      \(\[Rho]\_1\  = \ \(\(area\ A\)\/\(area\ R\)\  = \ \[Pi]\/4\)\), "\n", 
      \(\[Rho]\_2\  = \ \(\(area\ A\)\/\(area\ R\)\  = \ \[Pi]\/4\)\ \), 
    "\n", 
      \(\[Rho]\_3\  = \ \(\(area\ A\)\/\(area\ R\)\  = \ \[Pi]\/\(2\ \
\@3\)\)\)}]],
  " \n\nThe \"estimate\" for the accuracy of the estimated areas will be \n\n\
\t\t",
  Cell[BoxData[
      RowBox[{" ", 
        RowBox[{
          RowBox[{
            RowBox[{"\[CapitalDelta]", " ", 
              StyleBox["A",
                FontWeight->"Bold"]}], "  ", "\[TildeTilde]", "\[Sigma]"}], 
          "  ", "=", 
          " ", \(\((b - a)\)*d*\ \@\(\(\[Rho] - \[Rho]\^2\)\/n\)\)}]}]]],
  ". "
}], "Text"],

Cell["\<\
Let's see how to use this formula for the results of examples 1, 2, and 3. \
\>", "Text"],

Cell[BoxData[{
    \(v\_1\  = \ 
      4; \ \[Rho]\_1\  = \ \[Pi]\/v\_1;\ \), "\[IndentingNewLine]", 
    \(v\_2\  = \ 
      4; \ \[Rho]\_2\  = \ \[Pi]\/v\_2;\ \), "\[IndentingNewLine]", 
    \(v\_3\  = \ 
      2\ \@3; \ \[Rho]\_3\  = \ \[Pi]\/v\_3;\ \), "\[IndentingNewLine]", 
    \(\(For[j = 1, 
        j \[LessEqual] 
          3, \(j++\), \ \[IndentingNewLine]\[Sigma]\_j\  = \ \(v\_j\) \@\(\(\
\[Rho]\_j - \[Rho]\_j\^2\)\/n\); \ \
\[IndentingNewLine]Print["\<\[Sigma]\>"\_j, "\< = \>", \[Sigma]\_j, "\< = \
\>", N[\[Sigma]\_j]\ ];\ ];\)\), "\[IndentingNewLine]", 
    \(\)}], "Input"],

Cell[TextData[{
  "Hence the simulation values in example 4 should be a little closer to  ",
  Cell[BoxData[
      \(\[Pi]\)]],
  "  than the simulation values in examples 2 and 3.  \n\n",
  StyleBox["Observation.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  Notice that ",
  Cell[BoxData[
      \(\[Sigma]\ \  = \ \((b - a)\)*
            d*\ \@\(\(\[Rho] - \[Rho]\^2\)\/n\) \[Rule] 0\)]],
  "  when  ",
  Cell[BoxData[
      \(\[Rho] \[Rule] 1\)]],
  ".  This is a consequence of  ",
  Cell[BoxData[
      RowBox[{
        StyleBox["area",
          FontFamily->"Times New Roman"], " ", 
        StyleBox["A",
          FontWeight->"Bold"]}]]],
  "  \"filling up\"  ",
  Cell[BoxData[
      RowBox[{
        StyleBox["area",
          FontFamily->"Times New Roman"], " ", 
        StyleBox["R",
          FontWeight->"Bold"]}]]],
  ".    "
}], "Text"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 5.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Use Monte Carlo simulation ",
  "to approximate",
  " the integral  ",
  Cell[BoxData[
      \(\[Integral]\_\(-3\)\%3\( 
              1\/\@\(2  \[Pi]\)\) \(\[ExponentialE]\^\(\(-x\^2\)/
                2\)\) \[DifferentialD]x\)]],
  ".  "
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 5.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell["\<\
Set up the function and the rectangular box enclosing the area. \
\>", "Text"],

Cell[BoxData[{
    \(\(f[
          x_] = \(1\/\@\(2  \[Pi]\)\) \[ExponentialE]\^\(\(-x\^2\)/2\);\)\ \
\), "\[IndentingNewLine]", 
    \(\(a = \(-3\);\)\ \), "\[IndentingNewLine]", 
    \(\(b = 3;\)\ \), "\[IndentingNewLine]", 
    \(\(c = 0;\)\ \), "\[IndentingNewLine]", 
    \(\(h = \(b - a\)\/100.0;\)\ \ \), "\[IndentingNewLine]", 
    \(\(pts = Table[{x, f[x]}, {x, a, b, h}];\)\ \), "\[IndentingNewLine]", 
    \(\(Y = \(Transpose[pts]\)\_\(\(\[LeftDoubleBracket]\)\(2\)\(\
\[RightDoubleBracket]\)\);\)\ \), "\[IndentingNewLine]", 
    \(\(d = Max[Y];\)\ \), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(rect\  = \ 
        Graphics[{Brown, Thickness[0.005], 
            Line[{{a, c}, {b, c}, {b, d}, {a, d}, {a, 
                  c}}]}];\)\ \), "\[IndentingNewLine]", 
    \(\(graph = 
        ListPlot[pts, PlotStyle \[Rule] {Thickness[0.005], Blue}, 
          PlotJoined \[Rule] True, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(Show[graph, rect, PlotRange \[Rule] {{a, b}, {c, d}}, 
        DisplayFunction \[Rule] $DisplayFunction];\)\), \
"\[IndentingNewLine]", 
    \(\(Print["\<To find the area under the curve\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<y = \>", f[x], "\<  over the interval [a,b] = [\>", 
        a, "\<,\>", b, "\<]\>"\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<It appears that a rectangle containing the area is\>"];\)\ \
\), "\[IndentingNewLine]", 
    \(\(Print["\<R = {(x,y}:  \>", a, "\< \[LessEqual] x \[LessEqual] \>", 
        b, "\<  and  \>", c, "\< \[LessEqual] y \[LessEqual] \>", 
        d, "\< }\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<If this is correct, then Mathematica will proceed using\>"];\
\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<a = \>", a\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<b = \>", b\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<c = \>", c\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<d = \>", d\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<If not, then enter the correct value(s) of a, b, d.\>"];\)\ \
\), "\[IndentingNewLine]", 
    \(\(Print["\<Then invoke the subroutine 'MonteCarloSimulation'\>"];\)\ \
\)}], "Input"],

Cell[TextData[{
  "Explore what happens with  ",
  Cell[BoxData[
      RowBox[{\(n = 100\), ",", "1000", ",", " ", 
        RowBox[{
          StyleBox["and",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], "  ", "10000"}]}]]],
  "  points. "
}], "Text"],

Cell[BoxData[
    \(\(val1 = MonteCarloSimulation[100];\)\)], "Input"],

Cell[BoxData[
    \(\(val2 = MonteCarloSimulation[1000];\)\)], "Input"],

Cell[BoxData[
    \(\(val3 = MonteCarloSimulation[10000];\)\)], "Input"],

Cell[TextData[{
  "We are done.  \n\n",
  StyleBox["Aside.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  The analytic value of the integral can be found."
}], "Text"],

Cell[BoxData[{
    \(\(f[
          x_] = \(1\/\@\(2  \[Pi]\)\) \[ExponentialE]\^\(\(-x\^2\)/2\);\)\ \
\), "\[IndentingNewLine]", 
    \(\(F[
          x_]\  = \ \[Integral]f[
              x] \[DifferentialD]x;\)\ \), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`FilledPlot`\>"];\)\), "\[IndentingNewLine]", 
    \(\(FilledPlot[f[x], {x, a, b}, PlotStyle \[Rule] Blue, 
        Fills \[Rule] \ Cyan, PlotRange \[Rule] {{a, b}, {0, d}}, 
        Ticks \[Rule] {Range[\(-3\), 3, 1], 
            Range[0, 1, 0.1]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<F[x] = \[Integral](\>", 
        f[x], "\<)\[DifferentialD]x\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<F[x] = \>", F[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a\%b, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = F[\>", b, "\<] - F[\>", 
        a, "\<]\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a\%b, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = (\>", F[b]\ , "\<) - (\>", 
        F[a]\ , "\<)\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Final answer\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a\%b, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = \>", 
        F[b]\  - \ F[a]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a\%b, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = \>", 
        N[F[b]\  - \ F[a]]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The approximations obtained with Monte Carlo \
simulation:\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Using n = \>", 
        val1\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\), "\< \
   area \[TildeTilde] \>", 
        val1\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)\ \
];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Using n = \>", 
        val2\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\), "\< \
  area \[TildeTilde] \>", 
        val2\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)\ \
];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Using n = \>", 
        val3\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\), "\< \
 area \[TildeTilde] \>", 
        val3\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)\ \
];\)\)}], "Input"],

Cell[TextData[{
  "We are done.  \n\n",
  StyleBox["Aside.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  This is the standard ",
  ButtonBox["normal distribution",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/NormalDistribution.html"], None},
    ButtonStyle->"Hyperlink"],
  " function.  Suppose that the interval of integration is ",
  Cell[BoxData[
      \(\([\(-\[Infinity]\), \[Infinity]]\)\)]],
  ". "
}], "Text"],

Cell[BoxData[{
    \(\(f[
          x_] = \(1\/\@\(2  \[Pi]\)\) \[ExponentialE]\^\(\(-x\^2\)/2\);\)\ \
\), "\[IndentingNewLine]", 
    \(\(F[
          x_]\  = \ \[Integral]f[
              x] \[DifferentialD]x;\)\ \), "\[IndentingNewLine]", 
    \(\(a1 = \(-\[Infinity]\);\)\), "\[IndentingNewLine]", 
    \(\(b1 = \[Infinity];\)\), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`FilledPlot`\>"];\)\), "\[IndentingNewLine]", 
    \(\(FilledPlot[f[x], {x, \(-10\), 10}, PlotStyle \[Rule] Blue, 
        Fills \[Rule] \ Cyan, 
        PlotRange \[Rule] {{\(-10\), 10}, {0, 1\/\@\(2  \[Pi]\)}}, 
        Ticks \[Rule] {Range[\(-10\), 10, 2], 
            Range[0, 1, 0.1]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<F[x] = \[Integral](\>", 
        f[x], "\<)\[DifferentialD]x\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<F[x] = \>", F[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a1\%b1, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = F[\>", b1, "\<] - F[\>", 
        a1, "\<]\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a1\%b1, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = (\>", F[b1]\ , "\<) - (\>", 
        F[a1]\ , "\<)\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Final answer\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<\[Integral]\>"\+a1\%b1, "\<(\>", 
        f[x], "\<)\[DifferentialD]x = \>", 
        F[b1]\  - \ F[a1]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<This is the Gaussian distribution.\>"];\)\)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Area of a region defined by inequalities.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "\n\n\tMonte Carlo simulation can be used to approximate the area of a \
region defined by a set of inequalities or constraints. "
}], "Text"],

Cell[TextData[StyleBox["Mathematica Subroutine (Monte Carlo Simulation).",
  FontWeight->"Bold",
  FontColor->RGBColor[0.500008, 0, 0.996109]]], "Text"],

Cell[BoxData[{
    \(\(Needs["\<Graphics`ImplicitPlot`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`InequalityGraphics`\>"];\)\), \
"\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(MonteCarloArea[n0_]\  := \ 
        Module[{i, Pin = \(Pout = {}\)\ }, \[IndentingNewLine]n = 
            n0; \[IndentingNewLine]For[i = 1, 
            i \[LessEqual] n, \(i++\), \[IndentingNewLine]X = 
              a + \((b - a)\) Random[]; \[IndentingNewLine]Y = 
              c + \((d - c)\)*Random[]; \[IndentingNewLine]If[\ 
              ReplaceAll[constraints[X, Y], 
                List \[Rule] And], \ \[IndentingNewLine]Pin = 
                Append[Pin, {X, Y}], \ \[IndentingNewLine]\(Pout = 
                  Append[Pout, {X, Y}];\)\ ];\ ]; \[IndentingNewLine]m\  = \ 
            Length[Pin]; \[IndentingNewLine]k\  = \ 
            Length[Pout]; \[IndentingNewLine]\[Rho]\  = \ 
            m\/n; \ \[IndentingNewLine]BoxArea\  = \ \((b - a)\)*\((d - 
                  c)\)\ ; \[IndentingNewLine]Area = 
            N[\ \[Rho]*
                BoxArea\ ]; \[IndentingNewLine]\[CapitalDelta]Area\  = \ 
            N[BoxArea\ \@\(\(\[Rho] - \[Rho]\^2\)\/n\)]; \
\[IndentingNewLine]DOTSin = 
            Graphics[{Red, PointSize[0.01], 
                Map[Point, Pin]}\ ]; \[IndentingNewLine]DOTSout = 
            Graphics[{Green, PointSize[0.01], 
                Map[Point, Pout]}\ ]; \[IndentingNewLine]domain\  = \ 
            InequalityPlot[\ constraints[x, y], \ {x, a, b}, \ {y, \ c, d}, 
              PlotRange \[Rule] All, 
              Ticks \[Rule] {Range[\(-5\), 5, 1], Range[\(-5\), 5, 1]}, 
              PlotStyle \[Rule] Blue, Fills \[Rule] White, 
              DisplayFunction \[Rule] Identity]; \[IndentingNewLine]Show[
            domain, rect, DOTSin, DOTSout, Axes \[Rule] True, 
            DisplayFunction \[Rule] $DisplayFunction]; \
\[IndentingNewLine]Print["\<To find the area satisfying the \
constraint(s)\>"]; \ \[IndentingNewLine]Print[
            TableForm[
              constraints[x, 
                y]]]; \ \ \[IndentingNewLine]Print["\<Points  generated       \
 n = \>", \ 
            n\ ]; \[IndentingNewLine]Print["\<Points inside the area   m = \
\>", \ m]; \[IndentingNewLine]Print["\<Points outside the area  k = \>", \ 
            
            k\ ]; \[IndentingNewLine]Print[\*"\"\<The ratio \[Rho] = \!\(m\/n\
\) = \>\"", m, "\</\>", 
            n\ ]; \[IndentingNewLine]Print["\<          \[Rho] = \>", \[Rho], \
"\< = \>", N[\[Rho]]\ ]; \[IndentingNewLine]Print["\<   BoxArea  = \>", 
            BoxArea\ ]; \[IndentingNewLine]Print["\<Calculation for the area \
\>"]; \ \[IndentingNewLine]Print["\<\[Rho] * BoxArea = \>", \[Rho], "\<*\>", 
            BoxArea, "\< = \>", 
            N[\ \[Rho]*
                BoxArea\ ]]; \ \[IndentingNewLine]Print["\<\>"]; \ \
\[IndentingNewLine]Print["\<Monte Carlo Approximation\>"]; \ \
\[IndentingNewLine]Print["\<The estimate for the area  A \[TildeTilde] \>", \ 
            Area\ ]; \[IndentingNewLine]Print["\<Estimate  for  the  error \
\[CapitalDelta]A \[TildeTilde] \>", \[CapitalDelta]Area\ ]; \
\[IndentingNewLine]Return[{n, Area}];];\)\)}], "Input"],

Cell[TextData[{
  StyleBox["Example 6.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Use Monte Carlo simulation ",
  "to approximate",
  " the area of the ",
  ButtonBox["cardioid",
    ButtonData:>{
      URL[ 
      "http://www-groups.dcs.st-and.ac.uk/~history/Curves/Cardioid.html"], 
      None},
    ButtonStyle->"Hyperlink"],
  " defined by the constraint \n\n\t\t",
  Cell[BoxData[
      \(\((x\^2 + y\^2 - 2  x)\)\^2 \[LessEqual] 4 \((x\^2 + 4  y\^2)\)\)]],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 6.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell["Set up the constraint for the cardioid.  ", "Text"],

Cell[BoxData[{
    \(\(constraints[x_, 
          y_] = {\((x\^2 + y\^2 - 2  x)\)\^2 \[LessEqual] 
            4 \((x\^2 + y\^2)\)}\ ;\)\ \), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`ImplicitPlot`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`InequalityGraphics`\>"];\)\), \
"\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(domain\  = \ 
        InequalityPlot[\ 
          constraints[x, y], \ {x, \(-1\), 4}, \ {y, \ \(-3\), 3}, 
          PlotRange \[Rule] All, 
          Ticks \[Rule] {Range[\(-1\), 4, 1], Range[\(-3\), 3, 1]}, 
          PlotStyle \[Rule] Green, 
          Fills \[Rule] Honeydew\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The area A defined by\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[TableForm[constraints[x, y]]];\)\ \ \)}], "Input"],

Cell["Set up the rectangular box enclosing the area. ", "Text"],

Cell[BoxData[{
    \(\(a = \(-\(1\/2\)\);\)\ \), "\n", 
    \(\(b = 4;\)\ \), "\n", 
    \(\(c = \(\(-3\)\ \@3\)\/2;\)\ \), "\n", 
    \(\(d = \(3\ \@3\)\/2;\)\ \), "\[IndentingNewLine]", 
    \(\(rect\  = \ 
        Graphics[{Brown, Thickness[0.005], 
            Line[{{a, c}, {b, c}, {b, d}, {a, d}, {a, 
                  c}}]}];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Show[domain, rect, 
        AspectRatio \[Rule] 2\/\@3];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<To find the area A we must have a rectalgle containing \
it.\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<R = {(x,y}:  \>", a, "\< \[LessEqual] x \[LessEqual] \>", 
        b, "\<  and  \>", c, "\< \[LessEqual] y \[LessEqual] \>", 
        d, "\< }\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<If this is correct, then Mathematica will proceed using \
it.\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<If not, then enter the correct value(s) of a, b, c, \
d.\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Then invoke the subroutine 'MonteCarloArea'\>"];\)\ \)}], \
"Input"],

Cell[TextData[{
  "Explore what happens with  ",
  Cell[BoxData[
      RowBox[{\(n = 100\), ",", "1000", ",", " ", 
        RowBox[{
          StyleBox["and",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], "  ", "10000"}]}]]],
  "  points. "
}], "Text"],

Cell[BoxData[
    \(\(val1 = MonteCarloArea[100];\)\)], "Input"],

Cell[BoxData[
    \(\(val2 = MonteCarloArea[1000];\)\)], "Input"],

Cell[BoxData[
    \(\(val3 = MonteCarloArea[10000];\)\)], "Input"],

Cell[TextData[{
  "We are done.  \n\n",
  StyleBox["Aside.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  The analytic value of the area can be found using polar coordinates. "
}], "Text"],

Cell[BoxData[{
    \(\(f\_1[r_] = r;\)\ \), "\[IndentingNewLine]", 
    \(\(f\_2[
          r_] = \[Integral]f\_1[
              r] \[DifferentialD]r;\)\ \), "\[IndentingNewLine]", 
    \(\(f\_3[\[Theta]_] = \[Integral]\_0\%\(2 \((1 + Cos[\[Theta]])\)\)f\_1[
              r] \[DifferentialD]r;\)\ \), "\[IndentingNewLine]", 
    \(\(f\_4[\[Theta]_] = \[Integral]f\_3[\[Theta]] \[DifferentialD]\[Theta];\
\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<Area  =  \!\(\[Integral]\_0\%\(2  \[Pi]\)\)(\!\(\
\[Integral]\_0\%\(2 \((1 + Cos[\[Theta]])\)\)\)r \[DifferentialD]r)\
\[DifferentialD]\[Theta]\>\""];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(f\_1\)[r] = \>\"", 
        f\_1[r]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(f\_2\)[r] = \
\[Integral]\!\(f\_1\)[r]\[DifferentialD]r\>\""];\)\ \), \
"\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(f\_2\)[r] = \>\"", 
        f\_2[r]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(\[Integral]\_0\%\(2 \((1 + Cos[\[Theta]])\)\)\)r \
\[DifferentialD]r = \!\(f\_2\)[2(1+Cos[\[Theta]])] - \
\!\(f\_2\)[0]\>\""];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(\[Integral]\_0\%\(2 \((1 + Cos[\[Theta]])\)\)\)r \
\[DifferentialD]r = \>\"", 
        f\_2[2 \((1 + Cos[\[Theta]])\)]\  - \ 
          f\_2[0]];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<Area  =  \!\(\[Integral]\_0\%\(2  \[Pi]\)\)(\>\"", \
\[Integral]\_0\%\(2 \((1 + Cos[\[Theta]])\)\)r\ \[DifferentialD]r, "\<)\
\[DifferentialD]\[Theta]\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(f\_3\)[\[Theta]] = \>\"", 
        f\_3[\[Theta]]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(f\_4\)[\[Theta]] = \[Integral]\!\(f\_3\)[\[Theta]]\
\[DifferentialD]\[Theta]\>\""];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(f\_4\)[\[Theta]] = \>\"", 
        f\_4[\[Theta]]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<Area  =  \!\(f\_4\)[2\[Pi]] - \!\(f\_4\)[0]\>\""];\)\), \
"\[IndentingNewLine]", 
    \(\(Print["\<Area  =  \>", 
        f\_4[2  \[Pi]]\  - \ f\_4[0]];\)\), "\[IndentingNewLine]", 
    \(\(InequalityPlot[\ 
        constraints[x, y], \ {x, \(-1\), 4}, \ {y, \ \(-3\), 3}, 
        PlotRange \[Rule] All, 
        Ticks \[Rule] {Range[\(-1\), 4, 1], Range[\(-3\), 3, 1]}, 
        PlotStyle \[Rule] Blue, 
        Fills \[Rule] Cyan\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<Area  =  \!\(\[Integral]\_0\%\(2  \[Pi]\)\)(\!\(\
\[Integral]\_0\%\(2 \((1 + Cos[\[Theta]])\)\)\)r \[DifferentialD]r)\
\[DifferentialD]\[Theta] = \>\"", \[Integral]\_0\%\(2  \
\[Pi]\)\((\[Integral]\_0\%\(2 \((1 + Cos[\[Theta]])\)\)r\ \
\[DifferentialD]r)\) \[DifferentialD]\[Theta], "\< = \>", 
        N[\[Integral]\_0\%\(2  \[Pi]\)\((\[Integral]\_0\%\(2 \((1 + Cos[\
\[Theta]])\)\)r\ \[DifferentialD]r)\) \[DifferentialD]\[Theta]]\ ];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<The approximations obtained with Monte Carlo \
simulation:\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Using n = \>", 
        val1\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\), "\< \
   area \[TildeTilde] \>", 
        val1\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)\ \
];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Using n = \>", 
        val2\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\), "\< \
  area \[TildeTilde] \>", 
        val2\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)\ \
];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Using n = \>", 
        val3\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\), "\< \
 area \[TildeTilde] \>", 
        val3\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)\ \
];\)\)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 7.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Use Monte Carlo simulation ",
  "to approximate",
  " the area of the region defined by the constraints \n\n\t\t",
  Cell[BoxData[{\(\(-\(5\/4\)\) - 3\/\(3 + x\^2\)\  \[LessEqual] \ 
        y\  \[LessEqual] \ 5\/4 + 3\/\(3 + x\^2\)\), "\[IndentingNewLine]", 
      StyleBox["and",
        FontFamily->"Times New Roman",
        FontSize->12,
        FontWeight->"Plain",
        FontSlant->"Plain",
        FontColor->GrayLevel[0],
        FontVariations->{"Underline"->False,
        "StrikeThrough"->False}], 
    "\[IndentingNewLine]", \(\(-\(1\/3\)\) - \(5\ y\^2\)\/6 + 
            y\^4\/6\  \[LessEqual] \ x\  \[LessEqual] \ 11\/3 - 2\/3\ \@2 | 
        y\( | \^\(3/2\)\)\)}]],
  "  "
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 7.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell["Set up the constraints for the region.  ", "Text"],

Cell[BoxData[{
    \(\(constraints[x_, 
          y_] = {\(-\(5\/4\)\) - 3\/\(3 + x\^2\) \[LessEqual] y \[LessEqual] 
            5\/4 + 3\/\(3 + x\^2\), \(-\(1\/3\)\) - \(5\ y\^2\)\/6 + 
              y\^4\/6 \[LessEqual] x \[LessEqual] 
            11\/3 - 2\/3\ \@2\ Abs[y]\^\(3/2\)}\ ;\)\ \), \
"\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`ImplicitPlot`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`InequalityGraphics`\>"];\)\), \
"\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(domain\  = \ 
        InequalityPlot[\ 
          constraints[x, y], \ {x, \(-3\), 4}, \ {y, \ \(-3\), 3}, 
          PlotRange \[Rule] All, 
          Ticks \[Rule] {Range[\(-5\), 5, 1], Range[\(-5\), 5, 1]}, 
          PlotStyle \[Rule] Green, 
          Fills \[Rule] Honeydew\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The Area A defined by\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[TableForm[constraints[x, y]]];\)\ \ \)}], "Input"],

Cell["Set up the rectangular box enclosing the area. ", "Text"],

Cell[BoxData[{
    \(\(a = \(-\(11\/8\)\);\)\), "\[IndentingNewLine]", 
    \(\(b = 11\/3;\)\), "\[IndentingNewLine]", 
    \(\(c = \(-\(9\/4\)\);\)\), "\[IndentingNewLine]", 
    \(\(d = 9\/4;\)\), "\[IndentingNewLine]", 
    \(\(rect\  = \ 
        Graphics[{Brown, Thickness[0.005], 
            Line[{{a, c}, {b, c}, {b, d}, {a, d}, {a, 
                  c}}]}];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Show[rect, domain, 
        Ticks \[Rule] {Range[\(-5\), 5, 1], 
            Range[\(-5\), 5, 1]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<To find the area of the region we must have a rectalgle \
containing the region.\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<R = {(x,y}:  \>", a, "\< \[LessEqual] x \[LessEqual] \>", 
        b, "\<  and  \>", c, "\< \[LessEqual] y \[LessEqual] \>", 
        d, "\< }\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<If this is correct, then Mathematica will proceed using\>"];\
\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<If not, then enter the correct value(s) of a, b, c, \
d.\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Then invoke the subroutine 'MonteCarloArea'\>"];\)\ \)}], \
"Input"],

Cell[TextData[{
  "Use Monte Carlo simulation  and explore what happens with  ",
  Cell[BoxData[
      RowBox[{\(n = 100\), ",", "1000", ",", " ", 
        RowBox[{
          StyleBox["and",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], "  ", "10000"}]}]]],
  "  points. "
}], "Text"],

Cell[BoxData[
    \(\(val1\  = \ MonteCarloArea[100];\)\)], "Input"],

Cell[BoxData[
    \(\(val2\  = \ MonteCarloArea[1000];\)\)], "Input"],

Cell[BoxData[
    \(\(val3\  = \ MonteCarloArea[10000];\)\)], "Input"],

Cell[TextData[{
  "We are done.  \n\n",
  StyleBox["Aside.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  The analytic value of the area can be found by splitting it up into \
three parts."
}], "Text"],

Cell[TextData[{
  "The curved portion at the top from ",
  Cell[BoxData[
      RowBox[{\((\(-1\), 2)\), "  ", 
        StyleBox["to",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "  ", \((1, 2)\)}]]],
  "  and the curved portion at the bottom from ",
  Cell[BoxData[
      RowBox[{\((\(-1\), 2)\), "  ", 
        StyleBox["to",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "  ", \((1, 2)\)}]]],
  "  are given by the following formulas."
}], "Text"],

Cell[BoxData[{
    \(\(f\_1[x_] = \(-\(5\/4\)\) - 
          3\/\(3 + x\^2\);\)\), "\[IndentingNewLine]", 
    \(\(f\_2[x_] = 5\/4 + 3\/\(3 + x\^2\);\)\), "\[IndentingNewLine]", 
    \(\(graph0 = 
        Plot[{\(-2\), 2}, {x, \(-1\), 1}, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(graph1 = 
        Plot[f\_1[x], {x, \(-1\), 1}, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(graph2 = 
        Plot[f\_2[x], {x, \(-1\), 1}, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(Show[graph0, graph1, graph2, 
        Ticks \[Rule] {Range[\(-5\), 5, 1], Range[\(-5\), 5, 1]}, 
        DisplayFunction \[Rule] $DisplayFunction];\)\), \
"\[IndentingNewLine]", 
    \(\(area\_1 = \[Integral]\_\(-1\)\%1\((f\_2[x] - 
                2)\) \[DifferentialD]x;\)\ \), "\n", 
    \(\(area\_2 = \[Integral]\_\(-1\)\%1\((\(-2\) - 
                f\_1[x])\) \[DifferentialD]x;\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<The area above y = 2, and below y = \!\(f\_2\)[x] = \
\>\"", f\_2[x], "\< is\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(area\_1\) = \>\"", \*"\"\<\!\(\[Integral]\_\(-1\)\%1\
\)(\!\(f\_2\)[x]-2)\[DifferentialD]x = \>\"", 
        area\_1];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<The area below y = 2, and above y = \!\(f\_1\)[x] = \
\>\"", f\_1[x], "\< is\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(area\_2\) = \>\"", \*"\"\<\!\(\[Integral]\_\(-1\)\%1\
\)(-2-\!\(f\_1\)[x])\[DifferentialD]x = \>\"", area\_2];\)\ \)}], "Input"],

Cell[TextData[{
  "The curved portion at the left from ",
  Cell[BoxData[
      RowBox[{\((\(-1\), \(-2\))\), "  ", 
        StyleBox["to",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "  ", \((\(-1\), 2)\)}]]],
  "  and the curved portion at the right from ",
  Cell[BoxData[
      RowBox[{\((1, \(-2\))\), "  ", 
        StyleBox["to",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "  ", \((1, 2)\)}]]],
  "  are given by the following formulas."
}], "Text"],

Cell[BoxData[{
    \(\(g\_1[y_] = \(-\(1\/3\)\) - \(5\ y\^2\)\/6 + 
          y\^4\/6;\)\ \), "\[IndentingNewLine]", 
    \(\(g\_2[y_] = 
        11\/3 - 2\/3\ \@2\ Abs[y]\^\(3/2\);\)\ \), "\[IndentingNewLine]", 
    \(\(area\_3\  = \ \[Integral]\_\(-2\)\%2\((g\_2[y] - 
                g\_1[y])\) \[DifferentialD]y;\)\ \), "\[IndentingNewLine]", 
    \(\(graph3 = 
        ParametricPlot[{g\_1[t], t}, {t, \(-2\), 2}, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(graph4 = 
        ParametricPlot[{g\_2[t], t}, {t, \(-2\), 2}, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(Show[graph0, graph3, graph4, 
        Ticks \[Rule] {Range[\(-5\), 5, 1], Range[\(-5\), 5, 1]}, 
        DisplayFunction \[Rule] $DisplayFunction];\)\), \
"\[IndentingNewLine]", 
    \(\(Print[\*"\"\<The area to the right of x = \!\(g\_1\)[x] = \>\"", \ 
        g\_1[x]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<that lies to the left of x = \!\(g\_2\)[x] = \>\"", \ 
        g\_2[x]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<and in the range -2 \[LessEqual] y \[LessEqual] 2  is\>"];\)\
\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(area\_3\) = \>\"", \*"\"\<\!\(\[Integral]\_\(-2\)\%2\
\)(\!\(g\_2\)[y]-\!\(g\_1\)[y])\[DifferentialD]y = \>\"", 
        area\_3];\)\ \)}], "Input"],

Cell[BoxData[{
    \(\(Show[graph1, graph2, graph3, graph4, 
        Ticks \[Rule] {Range[\(-5\), 5, 1], Range[\(-5\), 5, 1]}, 
        DisplayFunction \[Rule] $DisplayFunction];\)\), \
"\[IndentingNewLine]", 
    \(\(Print[\*"\"\<area = \
\!\(area\_1\)+\!\(area\_2\)+\!\(area\_3\)\>\""];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<area = \>", 
        area\_1 + area\_2 + area\_3\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<area = \>", 
        N[area\_1 + area\_2 + area\_3]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The approximations obtained with Monte Carlo \
simulation:\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Using n = \>", 
        val1\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\), "\< \
   area \[TildeTilde] \>", 
        val1\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)\ \
];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Using n = \>", 
        val2\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\), "\< \
  area \[TildeTilde] \>", 
        val2\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)\ \
];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Using n = \>", 
        val3\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\), "\< \
 area \[TildeTilde] \>", 
        val3\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)\ \
];\)\)}], "Input"]
}, Closed]],

Cell[TextData[StyleBox["Research Experience for Undergraduates",
  FontSize->14,
  FontWeight->"Bold",
  FontColor->RGBColor[0.500008, 0, 0.996109]]], "Text"],

Cell[TextData[{
  StyleBox[ButtonBox["Monte Carlo Pi",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/MonteCarloPiBib.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  "  Internet hyperlinks to web sites and a bibliography of articles.  "
}], "Text"],

Cell[TextData[StyleBox[ButtonBox["Return to the Numerical Analysis Project",
  ButtonData:>{
    URL[ "http://math.fullerton.edu/mathews/numerical.html"], None},
  ButtonStyle->"Hyperlink"],
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1],
  FontVariations->{"Underline"->True}]], "Text"]
},
FrontEndVersion->"5.2 for Microsoft Windows",
ScreenRectangle->{{0, 1024}, {0, 685}},
CellGrouping->Manual,
WindowSize->{1003, 616},
WindowMargins->{{0, Automatic}, {Automatic, 0}}
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 192, 5, 35, "Text"],
Cell[1971, 60, 1133, 38, 140, "Text"]
}, Closed]],
Cell[3119, 101, 18387, 318, 382, "Text"],
Cell[21509, 421, 25, 3, 52, "Text"],
Cell[21537, 426, 71688, 1194, 384, "Text"],
Cell[93228, 1622, 1639, 43, 149, "Text"],
Cell[94870, 1667, 57163, 961, 408, "Text"],
Cell[152036, 2630, 424, 12, 52, "Text"],
Cell[152463, 2644, 364, 13, 33, "Text"],
Cell[152830, 2659, 479, 14, 33, "Text"],
Cell[153312, 2675, 351, 12, 33, "Text"],
Cell[153666, 2689, 144, 2, 33, "Text"],
Cell[153813, 2693, 884, 15, 326, "Input"],
Cell[154700, 2710, 214, 8, 33, "Text"],

Cell[CellGroupData[{
Cell[154939, 2722, 101, 2, 33, "Text"],
Cell[155043, 2726, 122, 3, 33, "Text"],
Cell[155168, 2731, 1476, 26, 346, "Input"],
Cell[156647, 2759, 490, 14, 33, "Text"],
Cell[157140, 2775, 60, 1, 30, "Input"],
Cell[157203, 2778, 60, 1, 30, "Input"],
Cell[157266, 2781, 61, 1, 30, "Input"],
Cell[157330, 2784, 61, 1, 30, "Input"],
Cell[157394, 2787, 62, 1, 30, "Input"]
}, Closed]],
Cell[157471, 2791, 3802, 119, 374, "Text"],
Cell[161276, 2912, 776, 24, 78, "Text"],
Cell[162055, 2938, 152, 2, 33, "Text"],
Cell[162210, 2942, 2647, 44, 722, "Input"],
Cell[164860, 2988, 956, 25, 131, "Text"],
Cell[165819, 3015, 271, 9, 34, "Text"],

Cell[CellGroupData[{
Cell[166115, 3028, 101, 2, 33, "Text"],
Cell[166219, 3032, 88, 2, 33, "Text"],
Cell[166310, 3036, 2166, 40, 488, "Input"],
Cell[168479, 3078, 464, 14, 33, "Text"],
Cell[168946, 3094, 70, 1, 30, "Input"],
Cell[169019, 3097, 71, 1, 30, "Input"],
Cell[169093, 3100, 72, 1, 30, "Input"],
Cell[169168, 3103, 186, 6, 71, "Text"],
Cell[169357, 3111, 2311, 43, 453, "Input"]
}, Closed]],
Cell[171683, 3157, 271, 9, 34, "Text"],

Cell[CellGroupData[{
Cell[171979, 3170, 101, 2, 33, "Text"],
Cell[172083, 3174, 88, 2, 33, "Text"],
Cell[172174, 3178, 2167, 40, 498, "Input"],
Cell[174344, 3220, 464, 14, 33, "Text"],
Cell[174811, 3236, 70, 1, 30, "Input"],
Cell[174884, 3239, 71, 1, 30, "Input"],
Cell[174958, 3242, 72, 1, 30, "Input"],
Cell[175033, 3245, 186, 6, 71, "Text"],
Cell[175222, 3253, 2295, 43, 443, "Input"]
}, Closed]],
Cell[177532, 3299, 273, 9, 43, "Text"],

Cell[CellGroupData[{
Cell[177830, 3312, 101, 2, 33, "Text"],
Cell[177934, 3316, 88, 2, 33, "Text"],
Cell[178025, 3320, 2205, 40, 505, "Input"],
Cell[180233, 3362, 464, 14, 33, "Text"],
Cell[180700, 3378, 70, 1, 30, "Input"],
Cell[180773, 3381, 71, 1, 30, "Input"],
Cell[180847, 3384, 72, 1, 30, "Input"],
Cell[180922, 3387, 186, 6, 71, "Text"],
Cell[181111, 3395, 2297, 43, 450, "Input"]
}, Closed]],
Cell[183423, 3441, 281, 8, 30, "Text"],

Cell[CellGroupData[{
Cell[183729, 3453, 97, 2, 33, "Text"],
Cell[183829, 3457, 769, 20, 224, "Text"],
Cell[184601, 3479, 99, 2, 33, "Text"],
Cell[184703, 3483, 593, 13, 218, "Input"],
Cell[185299, 3498, 874, 30, 89, "Text"]
}, Closed]],
Cell[186188, 3531, 356, 12, 43, "Text"],

Cell[CellGroupData[{
Cell[186569, 3547, 101, 2, 33, "Text"],
Cell[186673, 3551, 88, 2, 33, "Text"],
Cell[186764, 3555, 2260, 42, 505, "Input"],
Cell[189027, 3599, 464, 14, 33, "Text"],
Cell[189494, 3615, 70, 1, 30, "Input"],
Cell[189567, 3618, 71, 1, 30, "Input"],
Cell[189641, 3621, 72, 1, 30, "Input"],
Cell[189716, 3624, 186, 6, 71, "Text"],
Cell[189905, 3632, 2352, 45, 450, "Input"],
Cell[192260, 3679, 453, 14, 71, "Text"],
Cell[192716, 3695, 1597, 29, 431, "Input"]
}, Closed]],
Cell[194328, 3727, 275, 6, 68, "Text"],
Cell[194606, 3735, 152, 2, 33, "Text"],
Cell[194761, 3739, 3232, 56, 802, "Input"],
Cell[197996, 3797, 503, 17, 71, "Text"],

Cell[CellGroupData[{
Cell[198524, 3818, 101, 2, 33, "Text"],
Cell[198628, 3822, 57, 0, 33, "Text"],
Cell[198688, 3824, 854, 16, 172, "Input"],
Cell[199545, 3842, 63, 0, 33, "Text"],
Cell[199611, 3844, 1081, 21, 307, "Input"],
Cell[200695, 3867, 464, 14, 33, "Text"],
Cell[201162, 3883, 64, 1, 30, "Input"],
Cell[201229, 3886, 65, 1, 30, "Input"],
Cell[201297, 3889, 66, 1, 30, "Input"],
Cell[201366, 3892, 207, 6, 71, "Text"],
Cell[201576, 3900, 3712, 69, 582, "Input"]
}, Closed]],
Cell[205303, 3972, 808, 21, 119, "Text"],

Cell[CellGroupData[{
Cell[206136, 3997, 101, 2, 33, "Text"],
Cell[206240, 4001, 56, 0, 33, "Text"],
Cell[206299, 4003, 1011, 19, 186, "Input"],
Cell[207313, 4024, 63, 0, 33, "Text"],
Cell[207379, 4026, 1174, 22, 285, "Input"],
Cell[208556, 4050, 496, 14, 33, "Text"],
Cell[209055, 4066, 68, 1, 30, "Input"],
Cell[209126, 4069, 69, 1, 30, "Input"],
Cell[209198, 4072, 70, 1, 30, "Input"],
Cell[209271, 4075, 220, 7, 71, "Text"],
Cell[209494, 4084, 847, 24, 33, "Text"],
Cell[210344, 4110, 1597, 29, 332, "Input"],
Cell[211944, 4141, 857, 24, 33, "Text"],
Cell[212804, 4167, 1357, 25, 267, "Input"],
Cell[214164, 4194, 1359, 27, 170, "Input"]
}, Closed]],
Cell[215538, 4224, 158, 3, 32, "Text"],
Cell[215699, 4229, 303, 8, 33, "Text"],
Cell[216005, 4239, 293, 6, 33, "Text"]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

