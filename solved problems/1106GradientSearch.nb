(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    104921,       2788]*)
(*NotebookOutlinePosition[    105614,       2812]*)
(*  CellTagsIndexPosition[    105570,       2808]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
  StyleBox["Module for the S",
    FontFamily->"New Century Schlbk",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["teepest Descent  or Gradient Method",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell[TextData[{
  StyleBox["Numerical Methods using ",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["Mathematica",
    FontSize->14,
    FontWeight->"Bold",
    FontSlant->"Italic",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[" ",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[" ",
    FontSize->14],
  StyleBox["\n",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0.250004, 0.250004]],
  StyleBox["Complementary software supplements for  ",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0.996109, 0]],
  StyleBox[" \n",
    FontSize->14],
  StyleBox[ButtonBox["Numerical Methods textbooks",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/numerical.html"], None},
    ButtonStyle->"Hyperlink"],
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  StyleBox["  ",
    FontSize->14],
  StyleBox["\n",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0.250004, 0.250004]],
  StyleBox[ButtonBox["John H. Mathews and Kurtis Fink, 2004",
    ButtonData:>{
      URL[ "http://www.ecs.fullerton.edu/~mathews/numerical.html"], None},
    ButtonStyle->"Hyperlink"],
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  StyleBox["  ",
    FontSize->14,
    FontColor->RGBColor[0.500008, 0, 0.996109]]
}], "Text"]
}, Closed]],

Cell[TextData[{
  StyleBox["Gradient and Newton\[CloseCurlyQuote]s Methods",
    FontFamily->"Times-Bold",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["\n\n\tNow we turn to the minimization of a function",
    FontFamily->"Times-Roman"],
  StyleBox[" ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{"f", 
        RowBox[{"(", 
          StyleBox[\(X\&\[RightVector]\),
            FontWeight->"Bold"], ")"}]}]]],
  StyleBox[" ",
    FontFamily->"RMTMI",
    FontSlant->"Italic"],
  StyleBox["of  ",
    FontFamily->"Times-Roman"],
  StyleBox["n",
    FontFamily->"Courier New"],
  StyleBox["  variables, where  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox[\(X\&\[RightVector]\),
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{"(", 
          RowBox[{\(x\_1\), 
            StyleBox[",",
              FontFamily->"Times New Roman",
              FontSize->12,
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontColor->GrayLevel[0],
              FontVariations->{"Underline"->False,
              "StrikeThrough"->False}], \(x\_2\), 
            StyleBox[",",
              FontFamily->"Times New Roman",
              FontSize->12,
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontColor->GrayLevel[0],
              FontVariations->{"Underline"->False,
              "StrikeThrough"->False}], "...", 
            StyleBox[",",
              FontFamily->"Times New Roman",
              FontSize->12,
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontColor->GrayLevel[0],
              FontVariations->{"Underline"->False,
              "StrikeThrough"->False}], \(x\_n\)}], ")"}]}]]],
  StyleBox["  and the partial derivatives of",
    FontFamily->"Times-Roman"],
  StyleBox[" ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{"f", 
        RowBox[{"(", 
          StyleBox[\(X\&\[RightVector]\),
            FontWeight->"Bold"], ")"}]}]]],
  StyleBox[" ",
    FontFamily->"RMTMI",
    FontSlant->"Italic"],
  StyleBox["are accessible.  ",
    FontFamily->"Times-Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["Steepest Descent or Gradient Method",
    FontFamily->"Times-Bold",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["\n",
    FontFamily->"Times-Roman"],
  StyleBox["\n",
    FontFamily->"Times-Bold",
    FontWeight->"Bold"],
  StyleBox["Definition (",
    FontFamily->"Times-Bold",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["Gradient",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/Gradient.html"], None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox[").",
    FontFamily->"Times-Bold",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  Let ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{"z", " ", "=", " ", 
        RowBox[{"f", 
          RowBox[{"(", 
            StyleBox[\(X\&\[RightVector]\),
              FontWeight->"Bold"], ")"}]}]}]]],
  StyleBox[" ",
    FontFamily->"RMTMI",
    FontSlant->"Italic"],
  StyleBox["be a function of ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      StyleBox[\(X\&\[RightVector]\),
        FontWeight->"Bold"]]],
  StyleBox[" ",
    FontFamily->"RMTMI",
    FontSlant->"Italic"],
  StyleBox["such that  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      FractionBox[
        RowBox[{\(\[PartialD]f\), 
          RowBox[{"(", 
            StyleBox[\(X\&\[RightVector]\),
              FontWeight->"Bold"], ")"}]}], \(\[PartialD]x\_k\)]]],
  StyleBox["  exists for  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{\(k = 1\), 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "2", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "...", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "n"}]]],
  ".",
  StyleBox["  The gradient of ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{"f", 
        RowBox[{"(", 
          StyleBox[\(X\&\[RightVector]\),
            FontWeight->"Bold"], ")"}]}]]],
  StyleBox[", denoted by  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{\(\[Del]f\), 
        RowBox[{"(", 
          StyleBox[\(X\&\[RightVector]\),
            FontWeight->"Bold"], ")"}]}]]],
  StyleBox[",  is the vector  \n\n(1)\t\t",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{\(\[Del]f\), 
          RowBox[{"(", 
            StyleBox[\(X\&\[RightVector]\),
              FontWeight->"Bold"], ")"}]}], " ", "=", " ", 
        RowBox[{"(", 
          RowBox[{
            FractionBox[
              RowBox[{\(\[PartialD]f\), 
                RowBox[{"(", 
                  StyleBox[\(X\&\[RightVector]\),
                    FontWeight->"Bold"], ")"}]}], \(\[PartialD]x\_1\)], 
            StyleBox[",",
              FontFamily->"Times New Roman",
              FontSize->12,
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontColor->GrayLevel[0],
              FontVariations->{"Underline"->False,
              "StrikeThrough"->False}], 
            FractionBox[
              RowBox[{\(\[PartialD]f\), 
                RowBox[{"(", 
                  StyleBox[\(X\&\[RightVector]\),
                    FontWeight->"Bold"], ")"}]}], \(\[PartialD]x\_2\)], 
            StyleBox[",",
              FontFamily->"Times New Roman",
              FontSize->12,
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontColor->GrayLevel[0],
              FontVariations->{"Underline"->False,
              "StrikeThrough"->False}], "...", 
            StyleBox[",",
              FontFamily->"Times New Roman",
              FontSize->12,
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontColor->GrayLevel[0],
              FontVariations->{"Underline"->False,
              "StrikeThrough"->False}], 
            FractionBox[
              RowBox[{\(\[PartialD]f\), 
                RowBox[{"(", 
                  StyleBox[\(X\&\[RightVector]\),
                    FontWeight->"Bold"], ")"}]}], \(\[PartialD]x\_n\)]}], 
          ")"}]}]]],
  ".  "
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Illustrations",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[TextData[{
  StyleBox["Find the gradient of  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      \(f \((x, y)\)\  = \ 
        5  x\^2 + x\^4 - 9\ x\^2\ y + 3\ y\^2 + 2\ y\^4 + \(1\/4\) x\)]]
}], "Text"],

Cell[BoxData[{
    \(\(f[x_, y_]\  = \ 
        5  x\^2 + x\^4 - 9\ x\^2\ y + 3\ y\^2 + 
          2\ y\^4 + \(1\/4\) x;\)\ \), "\[IndentingNewLine]", 
    \(\(f\_x[x_, y_]\  = 
        Together[\[PartialD]\_x\ f[x, y]];\)\ \), "\[IndentingNewLine]", 
    \(\(f\_y[x_, y_]\  = 
        Together[\[PartialD]\_y\ f[x, y]];\)\ \), "\[IndentingNewLine]", 
    \(\(\[Del]F[x_, y_]\  = {f\_x[x, y], 
          f\_y[x, y]};\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\< f[x,y] = \>", f[x, y]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(f\_x\)[x,y] = \>\"", 
        f\_x[x, y]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(f\_y\)[x,y] = \>\"", 
        f\_y[x, y]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\n\>", "\<The gradient is\>", "\<\n\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\[Del]F[x,y] = \
{\!\(f\_x\)[x,y],\!\(f\_y\)[x,y]}\>\""];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<\[Del]F[x,y] = \>", \[Del]F[x, 
            y]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\n\>", "\<At the point [3,2]\>"];\)\ \), \
"\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(f\_x\)[3,2] = \>\"", 
        f\_x[3, 2]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(f\_y\)[3,2] = \>\"", 
        f\_y[3, 2]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\[Del]F[3,2] = \
{\!\(f\_x\)[3,2],\!\(f\_y\)[3,2]}\>\""];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\[Del]F[3,2] = \>", \[Del]F[3, 2]];\)\ \)}], "Input"],

Cell[TextData[{
  StyleBox["Find the gradient of  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      \(f \((x, y)\)\  = \ \(x - y\)\/\(x\^2 + y\^2 + 2\)\)]]
}], "Text"],

Cell[BoxData[{
    \(\(f[x_, 
          y_]\  = \ \(x - y\)\/\(x\^2 + y\^2 + 2\);\)\ \), "\
\[IndentingNewLine]", 
    \(\(f\_x[x_, y_]\  = 
        Together[\[PartialD]\_x\ f[x, y]];\)\ \), "\[IndentingNewLine]", 
    \(\(f\_y[x_, y_]\  = 
        Together[\[PartialD]\_y\ f[x, y]];\)\ \), "\[IndentingNewLine]", 
    \(\(\[Del]F[x_, y_]\  = {f\_x[x, y], 
          f\_y[x, y]};\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\< f[x,y] = \>", f[x, y]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(f\_x\)[x,y] = \>\"", 
        f\_x[x, y]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(f\_y\)[x,y] = \>\"", 
        f\_y[x, y]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\n\>", "\<The gradient is\>", "\<\n\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\[Del]F[x,y] = \
{\!\(f\_x\)[x,y],\!\(f\_y\)[x,y]}\>\""];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<\[Del]F[x,y] = \>", \[Del]F[x, 
            y]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\n\>", "\<At the point [-3,-2]\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(f\_x\)[-3,-2] = \>\"", 
        f\_x[\(-3\), \(-2\)]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(f\_y\)[-3,-2] = \>\"", 
        f\_y[\(-3\), \(-2\)]];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\[Del]F[-3,-2] = {\!\(f\_x\)[-3,-2],\!\(f\_y\)[-3,-2]}\>\
\""];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\[Del]F[-3,-2] = \>", \[Del]F[\(-3\), \(-2\)]];\)\ \)}], \
"Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["\tRecall that the gradient vector in (1) points locally in the \
direction of the greatest rate of increase of ",
    FontFamily->"Times-Roman"],
  StyleBox[" ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{"f", 
        RowBox[{"(", 
          StyleBox[\(X\&\[RightVector]\),
            FontWeight->"Bold"], ")"}]}]]],
  StyleBox[".  Hence  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{\(-\ \[Del]f\), 
        RowBox[{"(", 
          StyleBox[\(X\&\[RightVector]\),
            FontWeight->"Bold"], ")"}]}]]],
  StyleBox["  points locally in the direction of greatest decrease ",
    FontFamily->"Times-Roman"],
  StyleBox[" ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{"f", 
        RowBox[{"(", 
          StyleBox[\(X\&\[RightVector]\),
            FontWeight->"Bold"], ")"}]}]]],
  StyleBox[".  Start at the point  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      StyleBox[\(P\&\[RightVector]\_0\),
        FontWeight->"Bold"]]],
  StyleBox["  and search along the line through  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      StyleBox[\(P\&\[RightVector]\_0\),
        FontWeight->"Bold"]]],
  " ",
  StyleBox[" in the direction  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox[\(S\&\[RightVector]\_0\),
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{\(-\ \[Del]f\), 
          RowBox[{
            RowBox[{"(", 
              StyleBox[\(P\&\[RightVector]\_0\),
                FontWeight->"Bold"], ")"}], "/", 
            RowBox[{"\[LeftDoubleBracketingBar]", 
              RowBox[{\(-\ \[Del]f\), 
                RowBox[{"(", 
                  StyleBox[\(P\&\[RightVector]\_0\),
                    FontWeight->"Bold"], ")"}]}], 
              "\[RightDoubleBracketingBar]"}]}]}]}]]],
  ".  ",
  StyleBox["You will arrive at a point  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      StyleBox[\(P\&\[RightVector]\_1\),
        FontWeight->"Bold"]]],
  StyleBox[",  where a local minimum occurs when the point ",
    FontFamily->"Times-Roman"],
  StyleBox[" ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      StyleBox[\(X\&\[RightVector]\),
        FontWeight->"Bold"]]],
  StyleBox["  is constrained to lie on the line  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox[\(X\&\[RightVector]\),
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{
          StyleBox[\(P\&\[RightVector]\_1\),
            FontWeight->"Bold"], 
          StyleBox[" ",
            FontWeight->"Bold"], "+", " ", 
          RowBox[{"\[Nu]", 
            StyleBox[\(S\&\[RightVector]\_0\),
              FontWeight->"Bold"]}]}]}]]],
  ".  ",
  StyleBox["Since partial derivatives are accessible, the minimization \
process can be executed using either the quadratic or cubic approximation \
method. ",
    FontFamily->"Times-Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["\tNext we compute  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{\(-\ \[Del]f\), 
        RowBox[{"(", 
          StyleBox[\(P\&\[RightVector]\_1\),
            FontWeight->"Bold"], ")"}]}]]],
  StyleBox["  and move in the search direction  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox[\(S\&\[RightVector]\_1\),
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{\(-\ \[Del]f\), 
          RowBox[{
            RowBox[{"(", 
              StyleBox[\(P\&\[RightVector]\_1\),
                FontWeight->"Bold"], ")"}], "/", 
            RowBox[{"\[LeftDoubleBracketingBar]", 
              RowBox[{\(-\ \[Del]f\), 
                RowBox[{"(", 
                  StyleBox[\(P\&\[RightVector]\_1\),
                    FontWeight->"Bold"], ")"}]}], 
              "\[RightDoubleBracketingBar]"}]}]}]}]]],
  ".  ",
  StyleBox["You will come to  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      StyleBox[\(P\&\[RightVector]\_2\),
        FontWeight->"Bold"]]],
  StyleBox[",  where a local minimum occurs when ",
    FontFamily->"Times-Roman"],
  StyleBox[" ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      StyleBox[\(X\&\[RightVector]\),
        FontWeight->"Bold"]]],
  StyleBox["  is constrained to lie on the line  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox[\(X\&\[RightVector]\),
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{
          StyleBox[\(P\&\[RightVector]\_1\),
            FontWeight->"Bold"], 
          StyleBox[" ",
            FontWeight->"Bold"], "+", " ", 
          RowBox[{"\[Nu]", 
            StyleBox[\(S\&\[RightVector]\_1\),
              FontWeight->"Bold"]}]}]}]]],
  ".  ",
  StyleBox["Iteration will produce a sequence,  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      SubsuperscriptBox[
        RowBox[{"{", 
          StyleBox[\(P\&\[RightVector]\_k\),
            FontWeight->"Bold"], "}"}], \(k = 0\), "\[Infinity]"]]],
  StyleBox[",  of points with the property\n\n\t\t",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{
        RowBox[{
          RowBox[{
            RowBox[{
              RowBox[{"f", 
                RowBox[{"(", 
                  StyleBox[\(P\&\[RightVector]\_0\),
                    FontWeight->"Bold"], ")"}]}], ">", 
              RowBox[{"f", 
                RowBox[{"(", 
                  StyleBox[\(P\&\[RightVector]\_1\),
                    FontWeight->"Bold"], ")"}]}], ">"}], "..."}], ">", 
          RowBox[{"f", 
            RowBox[{"(", 
              StyleBox[\(P\&\[RightVector]\_k\),
                FontWeight->"Bold"], ")"}]}], ">"}], "..."}]]],
  " \n",
  StyleBox["\nIf  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{" ", 
        RowBox[{
          RowBox[{\(lim\+\(k \[Rule] \[Infinity]\)\), "  ", 
            StyleBox[\(P\&\[RightVector]\_k\),
              FontWeight->"Bold"]}], " ", "=", 
          StyleBox["  ",
            FontFamily->"Times-Roman"], 
          StyleBox[\(P\&\[RightVector]\),
            FontWeight->"Bold"], 
          StyleBox[" ",
            FontFamily->"Times-Roman"]}]}]]],
  StyleBox["  then ",
    FontFamily->"Times-Roman"],
  StyleBox[" ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{"f", 
        RowBox[{"(", 
          StyleBox[\(P\&\[RightVector]\),
            FontWeight->"Bold"], ")"}]}]]],
  StyleBox["  will be a local minimum ",
    FontFamily->"Times-Roman"],
  StyleBox[" ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{"f", 
        RowBox[{"(", 
          StyleBox[\(X\&\[RightVector]\),
            FontWeight->"Bold"], ")"}]}]]],
  StyleBox[".  ",
    FontFamily->"Times-Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["Outline of the Gradient Method",
    FontFamily->"Times-Bold",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["\n\n\tSuppose that  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      StyleBox[\(P\&\[RightVector]\_k\),
        FontWeight->"Bold"]]],
  StyleBox["  has been obtained.  \n\t\n",
    FontFamily->"Times-Roman"],
  StyleBox["(i)",
    FontFamily->"Times-Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["\tEvaluate the gradient vector  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{\(\[Del]f\), 
        RowBox[{"(", 
          StyleBox[\(P\&\[RightVector]\_k\),
            FontWeight->"Bold"], ")"}]}]]],
  StyleBox[".  \n\n",
    FontFamily->"Times-Roman"],
  StyleBox["(ii)",
    FontFamily->"Times-Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["\tCompute the search direction  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox[\(S\&\[RightVector]\_k\),
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{\(-\ \[Del]f\), 
          RowBox[{
            RowBox[{"(", 
              StyleBox[\(P\&\[RightVector]\_k\),
                FontWeight->"Bold"], ")"}], "/", 
            RowBox[{"\[LeftDoubleBracketingBar]", 
              RowBox[{\(-\ \[Del]f\), 
                RowBox[{"(", 
                  StyleBox[\(P\&\[RightVector]\_k\),
                    FontWeight->"Bold"], ")"}]}], 
              "\[RightDoubleBracketingBar]"}]}]}]}]]],
  StyleBox[".  \n\n",
    FontFamily->"Times-Roman"],
  StyleBox["(iii)",
    FontFamily->"Times-Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["\tPerform a single parameter minimization of  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{\(\[CapitalPhi] \((\[Nu])\)\), " ", "=", " ", 
        RowBox[{"f", 
          RowBox[{"(", 
            RowBox[{
              StyleBox[\(P\&\[RightVector]\_k\),
                FontWeight->"Bold"], "+", " ", 
              RowBox[{"\[Nu]", 
                StyleBox[\(S\&\[RightVector]\_k\),
                  FontWeight->"Bold"]}]}], ")"}]}]}]]],
  StyleBox["  on the interval  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      \(\([0, b]\)\)]],
  StyleBox[",  where ",
    FontFamily->"Times-Roman"],
  StyleBox["b",
    FontFamily->"Courier New"],
  StyleBox[" is large.  \n\tThis will produce a value  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      \(\[Nu] = h\_min\)]],
  StyleBox["  where a local minimum for  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      \(\[CapitalPhi] \((\[Nu])\)\)]],
  StyleBox[".  The relation  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{\(\[CapitalPhi] \((h\_min)\)\), " ", "=", " ", 
        RowBox[{"f", 
          RowBox[{"(", 
            RowBox[{
              StyleBox[\(P\&\[RightVector]\_k\),
                FontWeight->"Bold"], "+", " ", 
              RowBox[{\(h\_min\), 
                StyleBox[\(S\&\[RightVector]\_k\),
                  FontWeight->"Bold"]}]}], ")"}]}]}]]],
  StyleBox["  \n\tshows that this is a minimum for  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{"f", 
        RowBox[{"(", 
          StyleBox[\(X\&\[RightVector]\),
            FontWeight->"Bold"], ")"}]}]]],
  StyleBox["  along the search line  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox[\(X\&\[RightVector]\),
          FontWeight->"Bold"], " ", "=", " ", 
        RowBox[{
          StyleBox[\(P\&\[RightVector]\_k\),
            FontWeight->"Bold"], 
          StyleBox[" ",
            FontWeight->"Bold"], "+", " ", 
          RowBox[{"\[Nu]", 
            StyleBox[\(S\&\[RightVector]\_k\),
              FontWeight->"Bold"]}]}]}]]],
  StyleBox[".\n\t\t\t\t\t\t\t\n",
    FontFamily->"Times-Roman"],
  StyleBox["(iv)",
    FontFamily->"Times-Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["\tConstruct the next point  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox[\(P\&\[RightVector]\_\(k + 1\)\),
          FontWeight->"Bold"], 
        StyleBox[
          RowBox[{
            StyleBox[" ",
              FontWeight->"Bold"], " "}]], "=", " ", 
        RowBox[{
          StyleBox[\(P\&\[RightVector]\_k\),
            FontWeight->"Bold"], 
          StyleBox[" ",
            FontWeight->"Bold"], "+", " ", 
          RowBox[{\(h\_min\), 
            StyleBox[\(S\&\[RightVector]\_k\),
              FontWeight->"Bold"]}]}]}]]],
  StyleBox[".\n\n",
    FontFamily->"Times-Roman"],
  StyleBox["(v)",
    FontFamily->"Times-Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["\tPerform the termination test for minimization, i.e. \n\tare the \
function values  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{"f", 
        RowBox[{"(", 
          StyleBox[\(P\&\[RightVector]\_k\),
            FontWeight->"Bold"], ")"}]}]]],
  "  ",
  StyleBox["and  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{"f", 
        RowBox[{"(", 
          StyleBox[\(P\&\[RightVector]\_\(k + 1\)\),
            FontWeight->"Bold"], ")"}]}]]],
  "  ",
  StyleBox["sufficiently close and the distance",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{"\[LeftDoubleBracketingBar]", 
        StyleBox[\(P\&\[RightVector]\_\(k + 1\) - P\&\[RightVector]\_k\),
          FontWeight->"Bold"], "\[RightDoubleBracketingBar]"}]]],
  StyleBox["small enough ?\n\nRepeat the process.",
    FontFamily->"Times-Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["Proof",
    FontFamily->"New Century Schlbk",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  "  ",
  StyleBox[ButtonBox["Gradient Search",
    ButtonData:>{
      URL[ "http://mathews.ecs.fullerton.edu/n2003/GradientSearchProof.html"],
       None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox[ButtonBox["Gradient Search",
    ButtonData:>{
      URL[ 
      "http://math.fullerton.edu/mathews/n2003/GradientSearchProof.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  "  "
}], "Text"],

Cell[TextData[{
  StyleBox["Algorithm ",
    FontFamily->"New Century Schlbk",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  StyleBox["(Steepest Descent  or Gradient Method",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  StyleBox[")",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  StyleBox[".",
    FontFamily->"New Century Schlbk",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  StyleBox["  ",
    FontFamily->"New Century Schlbk"],
  "To numerically approximate a local minimum of",
  StyleBox["  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{"f", 
        RowBox[{"(", 
          StyleBox[\(X\&\[RightVector]\),
            FontWeight->"Bold"], ")"}]}]]],
  ",  where  ",
  StyleBox["f",
    FontFamily->"Courier New"],
  "  is a continuous function of  ",
  StyleBox["n",
    FontFamily->"Courier New"],
  "  real variables and  ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(X\&\[RightVector]\),
          FontWeight->"Bold"], " ", "=", 
        " ", \((x\_1, x\_2, \[CenterEllipsis], x\_n)\)}]]],
  "  by starting with one point  ",
  Cell[BoxData[
      StyleBox[\(P\&\[RightVector]\_0\),
        FontWeight->"Bold"]]],
  "  and using the gradient method. "
}], "Text"],

Cell[TextData[{
  StyleBox["Computer Programs",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  "  ",
  StyleBox[ButtonBox["Gradient Search",
    ButtonData:>{
      URL[ "http://mathews.ecs.fullerton.edu/n2003/GradientSearchProg.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox[ButtonBox["Gradient Search",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/GradientSearchProg.html"],
       None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  "  "
}], "Text"],

Cell[TextData[{
  StyleBox["Program (Steepest Descent  or Gradient Method",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  StyleBox[").",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  "To numerically approximate a local minimum of",
  StyleBox["  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{"f", 
        RowBox[{"(", 
          StyleBox[\(X\&\[RightVector]\),
            FontWeight->"Bold"], ")"}]}]]],
  ",  where  ",
  StyleBox["f",
    FontFamily->"Courier New"],
  "  is a continuous function of  ",
  StyleBox["n",
    FontFamily->"Courier New"],
  "  real variables and  ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(X\&\[RightVector]\),
          FontWeight->"Bold"], " ", "=", 
        " ", \((x\_1, x\_2, \[CenterEllipsis], x\_n)\)}]]],
  "  by starting with one point  ",
  Cell[BoxData[
      StyleBox[\(P\&\[RightVector]\_0\),
        FontWeight->"Bold"]]],
  "  and using the gradient method.  If",
  StyleBox[" partial derivatives are accessible, the minimization process can \
be executed using either the quadratic or cubic approximation method.  For \
illustration purposes we use the quadratic approximation method for finding a \
minimum.  ",
    FontFamily->"Times-Roman"]
}], "Text"],

Cell[BoxData[{
    RowBox[{
      RowBox[{
        RowBox[{
          StyleBox["Qmin",
            FontColor->RGBColor[0, 0, 1]], 
          ":=", \(Module[{cond\  = \ 0, jmax\  = \ 15, 
              max\  = \ 60}, \[IndentingNewLine]Y\_0\  = \ 
              f[P\&\[RightVector]\_0]; \
\[IndentingNewLine]P\&\[RightVector]\_1\  = \ 
              P\&\[RightVector]\_0\  + \ 
                h\ \ S\&\[RightVector]\_0; \ \ \ \[IndentingNewLine]Y\_1\  = \
\ f[P\&\[RightVector]\_1]; \ \[IndentingNewLine]P\&\[RightVector]\_2\  = \ 
              P\&\[RightVector]\_0\  + \ 
                2\ h\ \ S\&\[RightVector]\_0; \[IndentingNewLine]Y\_2\  = \ 
              f[P\&\[RightVector]\_2]; \ \[IndentingNewLine]j\  = \ 
              0; \ \[IndentingNewLine]While[\ 
              j < jmax\ \  && \ \ cond \[Equal] 0, \ \[IndentingNewLine]If[\ 
                Y\_0 \[LessEqual] 
                  Y\_1, \[IndentingNewLine]Module[{}, \[IndentingNewLine]P\&\
\[RightVector]\_2\  = \ P\&\[RightVector]\_1; \ \[IndentingNewLine]Y\_2\  = \ 
                    Y\_1; \ \[IndentingNewLine]h\  = \ 
                    h\/2; \ \[IndentingNewLine]P\&\[RightVector]\_1\  = \ 
                    P\&\[RightVector]\_0\  + \ 
                      h\ \ S\&\[RightVector]\_0; \ \[IndentingNewLine]Y\_1\  \
= \ f[P\&\[RightVector]\_1];\ ], \[IndentingNewLine]\(Module[{}, \
\[IndentingNewLine]\(If[\ 
                        Y\_2 < 
                          Y\_1, \[IndentingNewLine]Module[{}, \
\[IndentingNewLine]P\&\[RightVector]\_1\  = \ P\&\[RightVector]\_2; \ 
                          Y\_1\  = \ Y\_2; \ \[IndentingNewLine]h\  = \ 
                            2\ h; \ \[IndentingNewLine]P\&\[RightVector]\_2\  \
= \ P\&\[RightVector]\_0\  + \ 
                              2\ h\ \ S\&\[RightVector]\_0; \ \
\[IndentingNewLine]Y\_2\  = \ 
                            f[P\&\[RightVector]\_2];\ ], \
\[IndentingNewLine]cond\  = \ \(-1\)];\)\ ];\)\ ]; \ \[IndentingNewLine]j\  = \
\ j + 1; \ If[\ h < \[Delta], \ 
                cond = 1\ ];\ \ ]; \ \[IndentingNewLine]H\_min\  = \ \(h \((4\
\ Y\_1 - 3\ Y\_0 - Y\_2)\)\)\/\(2 \((2\ Y\_1 - \ Y\_0 - Y\_2)\)\); \ \
\[IndentingNewLine]P\&\[RightVector]\_min\  = \ 
              P\&\[RightVector]\_0 + H\_min\ S\&\[RightVector]\_0; \ 
            Y\_min\  = \ 
              f[P\&\[RightVector]\_min]; \[IndentingNewLine]H\_0\  = \ 
              Abs[H\_min]; \ \[IndentingNewLine]H\_1\  = \ 
              Abs[H\_min - h]; \ \[IndentingNewLine]H\_2\  = \ 
              Abs[H\_min - 2\ h]; \ \[IndentingNewLine]If[\ H\_0 < h, \ 
              h = H\_0\ ]; \ \[IndentingNewLine]If[\ H\_1 < h, \ 
              h = H\_1\ ]; \ \[IndentingNewLine]If[\ H\_2 < h, \ 
              h = H\_2\ ]; \[IndentingNewLine]If[\ h \[Equal] 0, \ 
              h = H\_min\ ]; \ \[IndentingNewLine]If[\ h < \[Delta], \ 
              cond = 1\ ]; \ \[IndentingNewLine]e\_0\  = \ 
              Abs[Y\_0 - Y\_min]; \ \[IndentingNewLine]e\_1\  = \ 
              Abs[Y\_1 - Y\_min]; \ \[IndentingNewLine]e\_2\  = \ 
              Abs[Y\_2 - Y\_min]; \ \[IndentingNewLine]If[\ 
              e\_0 \[NotEqual] 0\  && \ e\_0 < Err, \ 
              Err = e\_0\ ]; \ \[IndentingNewLine]If[\ 
              e\_1 \[NotEqual] 0\  && \ e\_1 < Err, \ 
              Err = e\_1\ ]; \ \[IndentingNewLine]If[\ 
              e\_2 \[NotEqual] 0\  && \ e\_2 < Err, \ 
              Err = e\_2\ ]; \ \[IndentingNewLine]If[\ 
              e\_0 \[Equal] 0\  && \ e\_1 \[Equal] 0\  && \ 
                e\_2 \[Equal] 0, \ Err = 0\ ]; \ \[IndentingNewLine]If[\ 
              Err < \[Epsilon], \ cond = 2\ ];\ ]\)}], ";"}], " ", 
      "\[IndentingNewLine]"}], "\n", 
    RowBox[{
      RowBox[{
        RowBox[{\(GradSearch[X0_, \[Delta]_, \[Epsilon]_]\), ":=", 
          RowBox[{"Module", "[", 
            RowBox[{\({}\), ",", "\[IndentingNewLine]", 
              
              RowBox[{\(max\  = \ 60\), ";", 
                "\[IndentingNewLine]", \(P\&\[RightVector]\_0\  = \ N[X0]\), 
                ";", "\[IndentingNewLine]", \(Print["\<f[\>", 
                  PaddedForm[P\&\[RightVector]\_0, {13, 12}], "\<] = \>", 
                  PaddedForm[Y\_0, {13, 12}]\ ]\), ";", "  ", 
                "\[IndentingNewLine]", \(h\  = \ 1\), ";", 
                "\[IndentingNewLine]", \(Err\  = \ 1\), ";", 
                "\[IndentingNewLine]", \(count\  = \ 0\), ";", 
                "\[IndentingNewLine]", 
                RowBox[{"While", "[", " ", 
                  
                  RowBox[{\(count < 
                        max\ \ \  && \ \ \((h > \[Delta]\  || \ 
                          Err > \[Epsilon])\)\), ",", "\[IndentingNewLine]", 
                    RowBox[{
                      RowBox[{"Module", "[", 
                        RowBox[{\({}\), ",", "\[IndentingNewLine]", 
                          RowBox[{\(S\&\[RightVector]\_0\  = \ 
                              s[P\&\[RightVector]\_0]\), ";", 
                            "\[IndentingNewLine]", 
                            StyleBox["Qmin",
                              FontColor->RGBColor[0, 0, 1]], 
                            StyleBox[";",
                              FontColor->RGBColor[0, 0, 1]], " ", 
                            "\[IndentingNewLine]", \(P\&\[RightVector]\_0\  = \
\ P\&\[RightVector]\_min\), ";", "\[IndentingNewLine]", \(Y\_0\  = \ Y\_min\),
                             ";", "\[IndentingNewLine]", \(Print["\<f[\>", 
                              PaddedForm[
                                P\&\[RightVector]\_min, {13, 
                                  12}], "\<] = \>", 
                              PaddedForm[Y\_min, {13, 12}]\ ]\), ";", "  ", 
                            "\[IndentingNewLine]", \(count = count + j + 1\), 
                            ";"}]}], "]"}], ";"}]}], " ", "]"}], ";"}]}], " ",
             "]"}]}], ";"}], "  "}]}], "Input"],

Cell[TextData[{
  StyleBox["Example 1.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Use the gradient search method to find the minimum of   ",
  Cell[BoxData[
      \(f \((x, y)\)\  = \ x\^2 - 4  x + y\^2 - y - x\ y\)]],
  ".  "
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 1.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text",
  Evaluatable->False,
  AspectRatioFixed->False],

Cell[TextData[{
  "Enter the function  ",
  Cell[BoxData[
      \(f \((x, y)\)\  = \ x\^2 - 4  x + y\^2 - y - x\ y\)]],
  " and graph the surface ",
  Cell[BoxData[
      \(z\  = f \((x, y)\)\)]],
  ". "
}], "Text"],

Cell[BoxData[{
    \(\(Clear[f, x, y];\)\), "\[IndentingNewLine]", 
    \(\(f[{x_, y_}] = x\^2 - 4  x + y\^2 - y - x\ y;\)\ \ \), "\n", 
    \(\(Plot3D[f[{x, y}], {x, 2.5, 3.5}, {y, 1.5, 2.5}, 
        AxesLabel \[Rule] {"\<x\>", "\<y\>", "\<z\>"}, 
        ViewPoint \[Rule] {8, 5, 2}, 
        BoxRatios \[Rule] {1, 1, 1}];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<z = f[x,y] = \>", f[{x, y}]];\)\ \ \)}], "Input",
  AspectRatioFixed->False],

Cell[BoxData[{
    \(\(Needs["\<Graphics`Graphics3D`\>"];\)\ \ \), "\n", 
    \(\(ShadowPlot3D[f[{x, y}], {x, 2.5, 3.5}, {y, 1.5, 2.5}, 
        Axes \[Rule] True, AxesLabel \[Rule] {"\<x\>", "\<y\>", "\<z\>"}, 
        ViewPoint \[Rule] {3, \(-2\), 2}, 
        BoxRatios \[Rule] {1, 1, 1}];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<z = f[x,y] = \>", f[{x, y}]];\)\ \ \)}], "Input"],

Cell[BoxData[{
    \(\(ContourPlot[f[{x, y}], {x, 2.5, 3.5}, {y, 1.5, 2.5}, 
        PlotPoints \[Rule] 35, 
        ColorFunction \[Rule] Hue];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x,y] = \>", f[{x, y}]];\)\ \ \)}], "Input"],

Cell[TextData[StyleBox["Set up the formulas for the gradient and search \
direction.  Then perform the first iteration.",
  FontFamily->"Times-Roman"]], "Text"],

Cell[BoxData[{
    RowBox[{\(grad = {\[PartialD]\_x\ f[{x, y}], \[PartialD]\_y\ 
              f[{x, y}]};\), " "}], "\n", 
    RowBox[{\(g[{x_, y_}] = grad;\), " "}], "\n", 
    RowBox[{\(norm[V_] := N[\@\(V . V\)];\), " "}], "\n", 
    RowBox[{\(s[{x_, 
              y_}] = \(-\(g[{x, y}]\/\@\(g[{x, y}] . g[{x, y}]\)\)\);\), 
      " "}], "\n", 
    RowBox[{
      RowBox[{
        RowBox[{
          StyleBox[\(P\&\[RightVector]\_0\),
            FontWeight->"Bold"], "=", \({0.99, 1.01}\)}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    StyleBox[\(S\&\[RightVector]\_0\  = \ s[P\&\[RightVector]\_0];\),
      FontWeight->"Bold"], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<  f[\!\(X\&\[RightVector]\)] = \>\"", 
          f[{x, y}]];\), "  "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\< \[Del]f[\!\(X\&\[RightVector]\)] = \>\"", 
          g[{x, y}]];\), " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<   \!\(P\&\[RightVector]\_0\)  = \>\"", ",", 
            StyleBox[\(P\&\[RightVector]\_0\),
              FontWeight->"Bold"]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<\[Del]f[\!\(P\&\[RightVector]\_0\)] = \>\"", ",", 
            RowBox[{"g", "[", 
              StyleBox[\(P\&\[RightVector]\_0\),
                FontWeight->"Bold"], "]"}]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", \(Print["\<\>"];\), "\[IndentingNewLine]",
   
    RowBox[{\(Print[\*"\"\<   \!\(S\&\[RightVector]\_0\)  = -\[Del]f[\!\(P\&\
\[RightVector]\_0\)]/\[LeftDoubleBracketingBar]\[Del]f[\!\(P\&\[RightVector]\_\
0\)]\[RightDoubleBracketingBar]\>\""];\), " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<   \!\(S\&\[RightVector]\_0\)  = \>\"", ",", 
            RowBox[{"-", " ", 
              RowBox[{"g", "[", 
                StyleBox[\(P\&\[RightVector]\_0\),
                  FontWeight->"Bold"], "]"}]}], ",", "\"\</\>\"", ",", 
            SqrtBox[
              RowBox[{
                RowBox[{"g", "[", 
                  StyleBox[\(P\&\[RightVector]\_0\),
                    FontWeight->"Bold"], "]"}], ".", 
                RowBox[{"g", "[", 
                  StyleBox[\(P\&\[RightVector]\_0\),
                    FontWeight->"Bold"], "]"}]}]]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<   \!\(S\&\[RightVector]\_0\)  = \>\"", ",", 
            RowBox[{"s", "[", 
              StyleBox[\(P\&\[RightVector]\_0\),
                FontWeight->"Bold"], "]"}]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print["\<\>"];\), " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<        f[\!\(X\&\[RightVector]\)] = \>\"", 
          g[{x, y}]];\), " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<f[\!\(P\&\[RightVector]\_0\) + \[Nu] \!\(S\&\
\[RightVector]\_0\)] = f[\>\"", 
          P\&\[RightVector]\_0 + \[Nu]\ S\&\[RightVector]\_0, "\<]\>"];\), 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{
          "\"\<f[\!\(P\&\[RightVector]\_0\) + \[Nu] \
\!\(S\&\[RightVector]\_0\)] = \>\"", ",", 
            
            StyleBox[\(f[
                P\&\[RightVector]\_0 + \[Nu]\ S\&\[RightVector]\_0]\),
              FontWeight->"Bold"]}], 
          StyleBox[" ",
            FontWeight->"Bold"], "]"}], ";"}], " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{
          "\"\<f[\!\(P\&\[RightVector]\_0\) + \[Nu] \
\!\(S\&\[RightVector]\_0\)] = \>\"", ",", 
            RowBox[{"Expand", "[", 
              
              StyleBox[\(f[
                  P\&\[RightVector]\_0 + \[Nu]\ S\&\[RightVector]\_0]\),
                FontWeight->"Bold"], 
              StyleBox["]",
                FontWeight->"Bold"]}]}], 
          StyleBox[" ",
            FontWeight->"Bold"], "]"}], ";"}], " "}]}], "Input",
  AspectRatioFixed->False],

Cell[TextData[{
  StyleBox["The minimum of  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      StyleBox[\(f[P\&\[RightVector]\_0 + \[Nu]\ S\&\[RightVector]\_0]\),
        FontWeight->"Bold"]],
    AspectRatioFixed->False],
  StyleBox[" can be found using a quadratic interpolation search.  This is \
accomplished using the subroutine call  ",
    FontFamily->"Times-Roman"],
  StyleBox["Qmin",
    FontFamily->"Courier New"],
  ". "
}], "Text"],

Cell[BoxData[{
    RowBox[{\(h\  = \ 1;\), " "}], "\[IndentingNewLine]", 
    RowBox[{
      StyleBox[\(Qmin;\),
        FontColor->RGBColor[0, 0, 1]], " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{\(P\&\[RightVector]\_1\), " ", "=", " ", 
          StyleBox[\(P\&\[RightVector]\_0 + H\_min\ S\&\[RightVector]\_0\),
            FontWeight->"Bold"]}], 
        StyleBox[";",
          FontWeight->"Bold"]}], 
      StyleBox[" ",
        FontWeight->
          "Bold"]}], "\[IndentingNewLine]", \(Print["\<We seek the minimum of \
\>"];\), "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{"Print", "[", 
        RowBox[{
        "\"\<f[\!\(P\&\[RightVector]\_0\) + \[Nu] \!\(S\&\[RightVector]\_0\)] \
= \>\"", ",", 
          RowBox[{"Expand", "[", 
            
            StyleBox[\(f[
                P\&\[RightVector]\_0 + \[Nu]\ S\&\[RightVector]\_0]\),
              FontWeight->"Bold"], 
            StyleBox["]",
              FontWeight->"Bold"]}]}], 
        StyleBox[" ",
          FontWeight->"Bold"], "]"}], 
      ";"}], "\[IndentingNewLine]", \(Print["\<Along the search line.\>"];\), \
"\[IndentingNewLine]", \(Print["\<One iteration produuces\>"];\), "\
\[IndentingNewLine]", \(Print[\*"\"\<\[Nu] = \!\(H\_min\) = \>\"", 
        H\_min];\), "\[IndentingNewLine]", \(Print["\<\>"];\), "\
\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<\!\(P\&\[RightVector]\_0\)  = \>\"", ",", 
            StyleBox[\(P\&\[RightVector]\_0\),
              FontWeight->"Bold"]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<\!\(S\&\[RightVector]\_0\)  = \>\"", ",", 
            RowBox[{"s", "[", 
              StyleBox[\(P\&\[RightVector]\_0\),
                FontWeight->"Bold"], "]"}]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", \(Print["\<\>"];\), "\[IndentingNewLine]",
   
    RowBox[{\(Print[\*"\"\<\!\(P\&\[RightVector]\_1\)  =  \!\(P\&\
\[RightVector]\_0\) + \!\(H\_min\) \!\(S\&\[RightVector]\_0\)\>\""];\), 
      " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<\!\(P\&\[RightVector]\_1\)  = \>\"", 
          P\&\[RightVector]\_0, "\< + \>", H\_min\ , S\&\[RightVector]\_0];\),
       " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<\!\(P\&\[RightVector]\_1\)  = \>\"", 
          P\&\[RightVector]\_0, "\< + \>", H\_min\ S\&\[RightVector]\_0];\), 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<\!\(P\&\[RightVector]\_1\)  = \>\"", ",", 
            StyleBox[\(P\&\[RightVector]\_1\),
              FontWeight->"Bold"]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", \(Print["\<\>"];\), "\[IndentingNewLine]",
   
    RowBox[{\(Print["\<f[\>", 
          PaddedForm[P\&\[RightVector]\_1, {13, 12}], "\<] = \>", 
          PaddedForm[f[P\&\[RightVector]\_1], {13, 12}]\ ];\), 
      "  "}]}], "Input"],

Cell[TextData[{
  StyleBox["To perform a second iteration set  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox[\(\(P\& \[RightVector] \)\_0\),
          FontWeight->"Bold"], "=", 
        StyleBox[\(\(P\& \[RightVector] \)\_1\),
          FontWeight->"Bold"]}]]],
  StyleBox["  and follow the same steps.  ",
    FontFamily->"Times-Roman"]
}], "Text"],

Cell[BoxData[{
    RowBox[{
      RowBox[{
        RowBox[{
          StyleBox[\(P\&\[RightVector]\_0\),
            FontWeight->"Bold"], "=", \(P\&\[RightVector]\_1\)}], ";"}], 
      "  "}], "\[IndentingNewLine]", 
    RowBox[{
      StyleBox[\(S\&\[RightVector]\_0\  = \ s[P\&\[RightVector]\_0];\),
        FontWeight->"Bold"], 
      StyleBox[" ",
        FontWeight->"Bold"]}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<  f[\!\(X\&\[RightVector]\)] = \>\"", 
          f[{x, y}]];\), "  "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\< \[Del]f[\!\(X\&\[RightVector]\)] = \>\"", 
          g[{x, y}]];\), "  "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<   \!\(P\&\[RightVector]\_0\)  = \>\"", ",", 
            StyleBox[\(P\&\[RightVector]\_0\),
              FontWeight->"Bold"]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<\[Del]f[\!\(P\&\[RightVector]\_0\)] = \>\"", ",", 
            RowBox[{"g", "[", 
              StyleBox[\(P\&\[RightVector]\_0\),
                FontWeight->"Bold"], "]"}]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print["\<\>"];\), " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<   \!\(S\&\[RightVector]\_0\)  = -\[Del]f[\!\(P\&\
\[RightVector]\_0\)]/\[LeftDoubleBracketingBar]\[Del]f[\!\(P\&\[RightVector]\_\
0\)]\[RightDoubleBracketingBar]\>\""];\), " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<   \!\(S\&\[RightVector]\_0\)  = \>\"", ",", 
            RowBox[{"-", " ", 
              RowBox[{"g", "[", 
                StyleBox[\(P\&\[RightVector]\_0\),
                  FontWeight->"Bold"], "]"}]}], ",", "\"\</\>\"", ",", 
            SqrtBox[
              RowBox[{
                RowBox[{"g", "[", 
                  StyleBox[\(P\&\[RightVector]\_0\),
                    FontWeight->"Bold"], "]"}], ".", 
                RowBox[{"g", "[", 
                  StyleBox[\(P\&\[RightVector]\_0\),
                    FontWeight->"Bold"], "]"}]}]]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<   \!\(S\&\[RightVector]\_0\)  = \>\"", ",", 
            RowBox[{"s", "[", 
              StyleBox[\(P\&\[RightVector]\_0\),
                FontWeight->"Bold"], "]"}]}], "]"}], ";"}], 
      "  "}], "\[IndentingNewLine]", 
    RowBox[{\(Print["\<\>"];\), "  "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<        f[\!\(X\&\[RightVector]\)] = \>\"", 
          g[{x, y}]];\), " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<f[\!\(P\&\[RightVector]\_0\) + \[Nu] \!\(S\&\
\[RightVector]\_0\)] = f[\>\"", 
          P\&\[RightVector]\_0 + \[Nu]\ S\&\[RightVector]\_0, "\<]\>"];\), 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{
          "\"\<f[\!\(P\&\[RightVector]\_0\) + \[Nu] \
\!\(S\&\[RightVector]\_0\)] = \>\"", ",", 
            RowBox[{"Expand", "[", 
              
              StyleBox[\(f[
                  P\&\[RightVector]\_0 + \[Nu]\ S\&\[RightVector]\_0]\),
                FontWeight->"Bold"], 
              StyleBox["]",
                FontWeight->"Bold"]}]}], 
          StyleBox[" ",
            FontWeight->"Bold"], "]"}], ";"}], " "}]}], "Input"],

Cell[TextData[{
  StyleBox["This time do not give a value for ",
    FontFamily->"Times-Roman"],
  StyleBox["h",
    FontFamily->"Courier New"],
  StyleBox[" because it has been automatically updated in the subroutine.",
    FontFamily->"Times-Roman"]
}], "Text"],

Cell[BoxData[{
    RowBox[{
      StyleBox[\(Qmin;\),
        FontColor->RGBColor[0, 0, 1]], " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{\(P\&\[RightVector]\_1\), " ", "=", " ", 
          StyleBox[\(P\&\[RightVector]\_0 + H\_min\ S\&\[RightVector]\_0\),
            FontWeight->"Bold"]}], 
        StyleBox[";",
          FontWeight->"Bold"]}], 
      StyleBox[" ",
        FontWeight->
          "Bold"]}], "\[IndentingNewLine]", \(Print["\<We seek the minimum of \
\>"];\), "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{"Print", "[", 
        RowBox[{
        "\"\<f[\!\(P\&\[RightVector]\_0\) + \[Nu] \!\(S\&\[RightVector]\_0\)] \
= \>\"", ",", 
          RowBox[{"Expand", "[", 
            
            StyleBox[\(f[
                P\&\[RightVector]\_0 + \[Nu]\ S\&\[RightVector]\_0]\),
              FontWeight->"Bold"], 
            StyleBox["]",
              FontWeight->"Bold"]}]}], 
        StyleBox[" ",
          FontWeight->"Bold"], "]"}], 
      ";"}], "\[IndentingNewLine]", \(Print["\<Along the search line.\>"];\), \
"\[IndentingNewLine]", \(Print["\<One iteration produuces\>"];\), "\
\[IndentingNewLine]", \(Print[\*"\"\<\[Nu] = \!\(H\_min\) = \>\"", 
        H\_min];\), "\[IndentingNewLine]", \(Print["\<\>"];\), "\
\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<\!\(P\&\[RightVector]\_0\)  = \>\"", ",", 
            StyleBox[\(P\&\[RightVector]\_0\),
              FontWeight->"Bold"]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<\!\(S\&\[RightVector]\_0\)  = \>\"", ",", 
            RowBox[{"s", "[", 
              StyleBox[\(P\&\[RightVector]\_0\),
                FontWeight->"Bold"], "]"}]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", \(Print["\<\>"];\), "\[IndentingNewLine]",
   
    RowBox[{\(Print[\*"\"\<\!\(P\&\[RightVector]\_1\)  =  \!\(P\&\
\[RightVector]\_0\) + \!\(H\_min\) \!\(S\&\[RightVector]\_0\)\>\""];\), 
      " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<\!\(P\&\[RightVector]\_1\)  = \>\"", 
          P\&\[RightVector]\_0, "\< + \>", H\_min\ , S\&\[RightVector]\_0];\),
       " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<\!\(P\&\[RightVector]\_1\)  = \>\"", 
          P\&\[RightVector]\_0, "\< + \>", H\_min\ S\&\[RightVector]\_0];\), 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<\!\(P\&\[RightVector]\_1\)  = \>\"", ",", 
            StyleBox[\(P\&\[RightVector]\_1\),
              FontWeight->"Bold"]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", \(Print["\<\>"];\), "\[IndentingNewLine]",
   
    RowBox[{\(Print["\<f[\>", 
          PaddedForm[P\&\[RightVector]\_1, {13, 12}], "\<] = \>", 
          PaddedForm[f[P\&\[RightVector]\_1], {13, 12}]\ ];\), 
      "  "}]}], "Input"],

Cell[TextData[{
  StyleBox["Execute the subroutine ",
    FontFamily->"Times-Roman"],
  StyleBox["GradSearch",
    FontFamily->"Courier New"],
  StyleBox[" and perform the iterations.  ",
    FontFamily->"Times-Roman"]
}], "Text"],

Cell[BoxData[{
    \(\(P0 = {0.99, 1.01};\)\ \), "\[IndentingNewLine]", 
    \(\(GradSearch[P0, 10\^\(-10\), 
        10\^\(-10\)];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<A local minimum of f[{x,y}] = \>", 
        f[{x, y}], "\< is\>"];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[\>", 
        PaddedForm[P\&\[RightVector]\_min, {13, 12}], "\<] = \>", 
        PaddedForm[Y\_min, {13, 12}]\ ];\)\ \ \)}], "Input",
  AspectRatioFixed->False],

Cell[TextData[{
  "Let us compare this answer with ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  "'s built in procedure ",
  StyleBox["FindMinimum",
    FontWeight->"Bold"],
  "."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[{
    \(\(sol = FindMinimum[f[{x, y}], {x, 1.8}, {y, 1.2}];\)\ \ \), "\n", 
    \(\(Print["\<A local minimum of f[{x,y}] = \>", 
        f[{x, y}], "\< is\>"];\)\ \ \), "\[IndentingNewLine]", 
    \(\(P\&~ = 
        ReplaceAll[{x, y}, 
          sol\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)];\)\
\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[\>", PaddedForm[P\&~, {13, 12}], "\<] = \>", 
        PaddedForm[f[P\&~], {13, 12}]\ ];\)\ \ \)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 2.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Use the gradient method to find the minimum of      ",
  Cell[BoxData[
      \(f \((x, y)\)\  = \ 100\ \((y - x\^2)\)\^2 + \((1 - x)\)\^2\)]],
  "\nRosenbrock's parabolic valley, circa 1960."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 2.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text",
  Evaluatable->False,
  AspectRatioFixed->False],

Cell[TextData[{
  "Enter the function  ",
  Cell[BoxData[
      \(f \((x, y)\)\  = \ 100\ \((y - x\^2)\)\^2 + \((1 - x)\)\^2\)]],
  " and graph the surface ",
  Cell[BoxData[
      \(z\  = f \((x, y)\)\)]],
  ". "
}], "Text"],

Cell[BoxData[{
    \(\(Clear[f, x, y, grad, g, s, norm, V, P0];\)\), "\n", 
    \(\(f[{x_, y_}] = 100\ \((y - x\^2)\)\^2 + \((1 - x)\)\^2;\)\), "\n", 
    \(\(Plot3D[f[{x, y}], {x, 0.5, 1.5}, {y, 0.5, 1.5}, 
        AxesLabel \[Rule] {"\<x\>", "\<y\>", "\<z\>"}, 
        ViewPoint \[Rule] {1, 3, 1}];\)\), "\n", 
    \(\(Print["\<z = f[x,y] = \>", f[{x, y}]];\)\)}], "Input",
  AspectRatioFixed->False],

Cell[BoxData[{
    \(\(Needs["\<Graphics`Graphics3D`\>"];\)\ \ \), "\n", 
    \(\(ShadowPlot3D[f[{x, y}], {x, 0.5, 1.5}, {y, 0.5, 1.5}, 
        Axes \[Rule] True, AxesLabel \[Rule] {"\<x\>", "\<y\>", "\<z\>"}, 
        ViewPoint \[Rule] {3, \(-2\), 2}, 
        BoxRatios \[Rule] {1, 1, 1}];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<z = f[x,y] = \>", f[{x, y}]];\)\ \ \)}], "Input"],

Cell[BoxData[{
    \(\(ContourPlot[f[{x, y}], {x, 0.5, 1.5}, {y, 0.5, 1.5}, 
        ColorFunction \[Rule] Hue];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x,y] = \>", f[{x, y}]];\)\ \ \)}], "Input"],

Cell["Perform the gradient search for the minimum.", "Text"],

Cell[BoxData[{
    \(\(grad = {\[PartialD]\_x\ f[{x, y}], \[PartialD]\_y\ 
            f[{x, y}]};\)\ \), "\n", 
    \(\(g[{x_, y_}] = grad;\)\ \), "\n", 
    \(\(norm[V_] := N[\@\(V . V\)];\)\ \), "\n", 
    \(\(s[{x_, 
            y_}] = \(-\(g[{x, 
                  y}]\/\@\(g[{x, y}] . g[{x, y}]\)\)\);\)\ \), "\n", 
    \(\(P0 = {0.99, 1.01};\)\ \), "\n", 
    \(\(GradSearch[P0, 10\^\(-10\), 
        10\^\(-10\)];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<A local minimum of f[{x,y}] = \>", 
        f[{x, y}], "\< is\>"];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[\>", 
        PaddedForm[P\&\[RightVector]\_min, {13, 12}], "\<] = \>", 
        PaddedForm[Y\_min, {13, 12}]\ ];\)\ \ \)}], "Input",
  AspectRatioFixed->False],

Cell[TextData[{
  "Let us compare this answer with ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  "'s built in procedure ",
  StyleBox["FindMinimum",
    FontWeight->"Bold"],
  "."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[{
    \(\(sol = FindMinimum[f[{x, y}], {x, 1.8}, {y, 1.2}];\)\ \ \), "\n", 
    \(\(Print["\<A local minimum of f[{x,y}] = \>", 
        f[{x, y}], "\< is\>"];\)\ \ \), "\[IndentingNewLine]", 
    \(\(P\&~ = 
        ReplaceAll[{x, y}, 
          sol\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)];\)\
\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[\>", PaddedForm[P\&~, {13, 12}], "\<] = \>", 
        PaddedForm[f[P\&~], {13, 12}]\ ];\)\ \ \)}], "Input"],

Cell[TextData[{
  StyleBox["Observation.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 1]],
  "  Even ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " is having a hard time finding the minimum of  ",
  Cell[BoxData[
      \(f \((x, y)\)\  = \ 100\ \((y - x\^2)\)\^2 + \((1 - x)\)\^2\)]],
  ".\nSince the function is \"flat\" near the minimum, the best way to \
achieve better accuracy is to increase the  ",
  StyleBox["WorkingPrecision",
    FontFamily->"Courier New"],
  ",  i.e. use extended precision in the numerical computations."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[{
    \(\(sol = 
        FindMinimum[f[{x, y}], {x, 1.8}, {y, 1.2}, 
          WorkingPrecision \[Rule] 25];\)\ \ \), "\n", 
    \(\(Print["\<A local minimum of f[{x,y}] = \>", 
        f[{x, y}], "\< is\>"];\)\ \ \), "\[IndentingNewLine]", 
    \(\(P\&~ = 
        ReplaceAll[{x, y}, 
          sol\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)];\)\
\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[\>", PaddedForm[P\&~, {13, 12}], "\<] = \>", 
        PaddedForm[f[P\&~], {13, 12}]\ ];\)\ \ \)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Exercise 3.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Use the gradient method to find the minimum of  ",
  Cell[BoxData[
      \(f \((x, y)\)\  = 
        5  x\^2 + x\^4 - 9\ x\^2\ y + 3\ y\^2 + 2\ y\^4 + \(1\/4\) x\)]],
  ".  \nLooking at your graphs, estimate the location of the local minima.  "
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 3.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text",
  Evaluatable->False,
  AspectRatioFixed->False],

Cell[BoxData[{
    \(\(f[{x_, y_}] = 
        5  x\^2 + x\^4 - 9\ x\^2\ y + 3\ y\^2 + 
          2\ y\^4 + \(1\/4\) x;\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<z = f[x,y] = \>", f[{x, y}]];\)\ \ \)}], "Input"],

Cell[BoxData[{
    \(\(ParametricPlot3D[{x, y, f[{x, y}]}, {x, \(-3.0\), 3.0}, {y, \(-0.5\), 
          2.0}, PlotPoints \[Rule] {35, 35}, 
        PlotRange \[Rule] {{\(-3.0\), 3.0}, {\(-0.5\), 2.0}, {\(-2.0\), 
              2.0}}, AxesLabel \[Rule] {"\<x\>", "\<y\>", "\<z\>"}, 
        ViewPoint \[Rule] {3, \(-2\), 2}, 
        BoxRatios \[Rule] {1, 1, 1}];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<z = f[x,y] = \>", f[{x, y}]];\)\ \ \)}], "Input",
  AspectRatioFixed->False],

Cell[BoxData[{
    \(\(Needs["\<Graphics`Graphics3D`\>"];\)\ \ \), "\n", 
    \(\(ShadowPlot3D[f[{x, y}], {x, \(-3.0\), 3.0}, {y, \(-0.5\), 2.0}, 
        Axes \[Rule] True, AxesLabel \[Rule] {"\<x\>", "\<y\>", "\<z\>"}, 
        ViewPoint \[Rule] {3, \(-2\), 2}, 
        BoxRatios \[Rule] {1, 1, 1}];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<z = f[x,y] = \>", f[{x, y}]];\)\ \ \)}], "Input"],

Cell[BoxData[{
    \(\(ContourPlot[f[{x, y}], {x, \(-3.0\), 3.0}, {y, \(-0.5\), 2.0}, 
        Contours \[Rule] 21, PlotPoints \[Rule] 35, 
        ColorFunction \[Rule] Hue];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x,y] = \>", f[{x, y}]];\)\ \ \)}], "Input"],

Cell["\<\
Looking at your graphs, estimate the location of the local minima.  
Hint. The contour plot should be most useful.\
\>", "Text"],

Cell[TextData[{
  StyleBox["Case (i)",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Go for the minimum near ",
  Cell[BoxData[
      \({0.0, 0.0}\)]]
}], "Text"],

Cell[TextData[StyleBox["Enter the starting point and perform the iterations.  \
",
  FontFamily->"Times-Roman"]], "Text"],

Cell[BoxData[{
    \(\(grad = {\[PartialD]\_x\ f[{x, y}], \[PartialD]\_y\ 
            f[{x, y}]};\)\ \), "\n", 
    \(\(g[{x_, y_}] = grad;\)\ \), "\n", 
    \(\(norm[V_] := N[\@\(V . V\)];\)\ \), "\n", 
    \(\(s[{x_, 
            y_}] = \(-\(g[{x, 
                  y}]\/\@\(g[{x, y}] . g[{x, y}]\)\)\);\)\ \), "\n", 
    \(\(P0 = {0.0, 0.0};\)\ \), "\n", 
    \(\(GradSearch[P0, 10\^\(-10\), 
        10\^\(-10\)];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<A local minimum of f[{x,y}] = \>", 
        f[{x, y}], "\< is\>"];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[\>", 
        PaddedForm[P\&\[RightVector]\_min, {13, 12}], "\<] = \>", 
        PaddedForm[Y\_min, {13, 12}]\ ];\)\ \ \)}], "Input",
  AspectRatioFixed->False],

Cell[TextData[{
  "Let us compare this answer with ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  "'s built in procedure ",
  StyleBox["FindMinimum",
    FontWeight->"Bold"],
  "."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[{
    \(\(sol = FindMinimum[f[{x, y}], {x, 0.0}, {y, 0.0}];\)\ \ \), "\n", 
    \(\(Print["\<A local minimum of f[{x,y}] = \>", 
        f[{x, y}], "\< is\>"];\)\ \ \), "\[IndentingNewLine]", 
    \(\(P\&~ = 
        ReplaceAll[{x, y}, 
          sol\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)];\)\
\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[\>", PaddedForm[P\&~, {13, 12}], "\<] = \>", 
        PaddedForm[f[P\&~], {13, 12}]\ ];\)\ \ \)}], "Input"],

Cell[TextData[{
  StyleBox["Case (ii)",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Go for the minimum near ",
  Cell[BoxData[
      \({2, 1.5}\)]]
}], "Text"],

Cell[TextData[StyleBox["Enter the starting point and perform the iterations.  \
",
  FontFamily->"Times-Roman"]], "Text"],

Cell[BoxData[{
    \(\(grad = {\[PartialD]\_x\ f[{x, y}], \[PartialD]\_y\ 
            f[{x, y}]};\)\ \), "\n", 
    \(\(g[{x_, y_}] = grad;\)\ \), "\n", 
    \(\(norm[V_] := N[\@\(V . V\)];\)\ \), "\n", 
    \(\(s[{x_, 
            y_}] = \(-\(g[{x, 
                  y}]\/\@\(g[{x, y}] . g[{x, y}]\)\)\);\)\ \), "\n", 
    \(\(P0 = {2.0, 1.5};\)\ \), "\n", 
    \(\(GradSearch[P0, 10\^\(-14\), 
        10\^\(-14\)];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<A local minimum of f[{x,y}] = \>", 
        f[{x, y}], "\< is\>"];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[\>", 
        PaddedForm[P\&\[RightVector]\_min, {13, 12}], "\<] = \>", 
        PaddedForm[Y\_min, {13, 12}]\ ];\)\ \ \)}], "Input",
  AspectRatioFixed->False],

Cell[TextData[{
  "Let us compare this answer with ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  "'s built in procedure ",
  StyleBox["FindMinimum",
    FontWeight->"Bold"],
  "."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[{
    \(\(sol = FindMinimum[f[{x, y}], {x, 2.0}, {y, 1.5}];\)\ \ \), "\n", 
    \(\(Print["\<A local minimum of f[{x,y}] = \>", 
        f[{x, y}], "\< is\>"];\)\ \ \), "\[IndentingNewLine]", 
    \(\(P\&~ = 
        ReplaceAll[{x, y}, 
          sol\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)];\)\
\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[\>", PaddedForm[P\&~, {13, 12}], "\<] = \>", 
        PaddedForm[f[P\&~], {13, 12}]\ ];\)\ \ \)}], "Input"],

Cell[TextData[{
  StyleBox["Observation.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 1]],
  "  Even ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " is having a hard time finding the minimum of  ",
  Cell[BoxData[
      \(f \((x, y)\)\  = \ 
        x\/4 + 5\ x\^2 + x\^4 - 9\ x\^2\ y + 3\ y\^2 + 2\ y\^4\)]],
  ".\nSince the function is \"flat\" near the minimum, the best way to \
achieve better accuracy is to increase the  ",
  StyleBox["WorkingPrecision",
    FontFamily->"Courier New"],
  ",  i.e. use extended precision in the numerical computations."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[{
    \(\(sol = 
        FindMinimum[f[{x, y}], {x, 2.0}, {y, 1.5}, 
          WorkingPrecision \[Rule] 25];\)\ \ \), "\n", 
    \(\(Print["\<A local minimum of f[{x,y}] = \>", 
        f[{x, y}], "\< is\>"];\)\ \ \), "\[IndentingNewLine]", 
    \(\(P\&~ = 
        ReplaceAll[{x, y}, 
          sol\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)];\)\
\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[\>", PaddedForm[P\&~, {13, 12}], "\<] = \>", 
        PaddedForm[f[P\&~], {13, 12}]\ ];\)\ \ \)}], "Input"],

Cell[TextData[{
  StyleBox["Case (iii)",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Go for the minimum near ",
  Cell[BoxData[
      \({\(-2\), 1.5}\)]]
}], "Text"],

Cell[TextData[StyleBox["Enter the starting point and perform the iterations.  \
",
  FontFamily->"Times-Roman"]], "Text"],

Cell[BoxData[{
    \(\(grad = {\[PartialD]\_x\ f[{x, y}], \[PartialD]\_y\ 
            f[{x, y}]};\)\ \), "\n", 
    \(\(g[{x_, y_}] = grad;\)\ \), "\n", 
    \(\(norm[V_] := N[\@\(V . V\)];\)\ \), "\n", 
    \(\(s[{x_, 
            y_}] = \(-\(g[{x, 
                  y}]\/\@\(g[{x, y}] . g[{x, y}]\)\)\);\)\ \), "\n", 
    \(\(P0 = {\(-2.0\), 1.5};\)\ \), "\n", 
    \(\(GradSearch[P0, 10\^\(-14\), 
        10\^\(-14\)];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<A local minimum of f[{x,y}] = \>", 
        f[{x, y}], "\< is\>"];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[\>", 
        PaddedForm[P\&\[RightVector]\_min, {13, 12}], "\<] = \>", 
        PaddedForm[Y\_min, {13, 12}]\ ];\)\ \ \)}], "Input",
  AspectRatioFixed->False],

Cell[TextData[{
  "Let us compare this answer with ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  "'s built in procedure ",
  StyleBox["FindMinimum",
    FontWeight->"Bold"],
  "."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[{
    \(\(sol = 
        FindMinimum[f[{x, y}], {x, \(-2.0\)}, {y, 1.5}];\)\ \ \), "\n", 
    \(\(Print["\<A local minimum of f[{x,y}] = \>", 
        f[{x, y}], "\< is\>"];\)\ \ \), "\[IndentingNewLine]", 
    \(\(P\&~ = 
        ReplaceAll[{x, y}, 
          sol\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)];\)\
\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[\>", PaddedForm[P\&~, {13, 12}], "\<] = \>", 
        PaddedForm[f[P\&~], {13, 12}]\ ];\)\ \ \)}], "Input"],

Cell[TextData[{
  StyleBox["Observation.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 1]],
  "  Even ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " is having a hard time finding the minimum of  ",
  Cell[BoxData[
      \(f \((x, y)\)\  = \ 
        x\/4 + 5\ x\^2 + x\^4 - 9\ x\^2\ y + 3\ y\^2 + 2\ y\^4\)]],
  ".\nSince the function is \"flat\" near the minimum, the best way to \
achieve better accuracy is to increase the  ",
  StyleBox["WorkingPrecision",
    FontFamily->"Courier New"],
  ",  i.e. use extended precision in the numerical computations."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[{
    \(\(sol = 
        FindMinimum[f[{x, y}], {x, \(-2.0\)}, {y, 1.5}, 
          WorkingPrecision \[Rule] 25];\)\ \ \), "\n", 
    \(\(Print["\<A local minimum of f[{x,y}] = \>", 
        f[{x, y}], "\< is\>"];\)\ \ \), "\[IndentingNewLine]", 
    \(\(P\&~ = 
        ReplaceAll[{x, y}, 
          sol\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)];\)\
\ \), "\[IndentingNewLine]", 
    \(\(\(Print["\<f[\>", PaddedForm[P\&~, {13, 12}], "\<] = \>", 
          PaddedForm[f[P\&~], {13, 12}]\ ];\)\ \ ;\)\ \ \)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 4.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Use the gradient search method to find the minimum of   ",
  Cell[BoxData[
      \(f \((x, y)\)\  = \ \(x - y\)\/\(x\^2 + y\^2 + 2\)\)]],
  ".  "
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 4.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text",
  Evaluatable->False,
  AspectRatioFixed->False],

Cell[TextData[{
  "Enter the function  ",
  Cell[BoxData[
      \(f \((x, y)\)\  = \ \(x - y\)\/\(x\^2 + y\^2 + 2\)\)]],
  " and graph the surface ",
  Cell[BoxData[
      \(z\  = f \((x, y)\)\)]],
  ". "
}], "Text"],

Cell[BoxData[{
    \(\(Clear[f, x, y];\)\), "\[IndentingNewLine]", 
    \(\(f[{x_, y_}]\  = \ \(x - y\)\/\(x\^2 + y\^2 + 2\);\)\ \), "\n", 
    \(\(Plot3D[f[{x, y}], {x, \(-4\), 4}, {y, \(-4\), 4}, 
        AxesLabel \[Rule] {"\<x\>", "\<y\>", "\<z\>"}, 
        ViewPoint \[Rule] {\(-2\), \(-4\), 1}, 
        BoxRatios \[Rule] {1, 1, 1}];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<z = f[x,y] = \>", f[{x, y}]];\)\ \ \)}], "Input",
  AspectRatioFixed->False],

Cell[BoxData[{
    \(\(Needs["\<Graphics`Graphics3D`\>"];\)\ \ \), "\n", 
    \(\(ShadowPlot3D[f[{x, y}], {x, \(-4\), 4}, {y, \(-4\), 4}, 
        Axes \[Rule] True, AxesLabel \[Rule] {"\<x\>", "\<y\>", "\<z\>"}, 
        ViewPoint \[Rule] {\(-2\), \(-4\), 1}, 
        BoxRatios \[Rule] {1, 1, 1}];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<z = f[x,y] = \>", f[{x, y}]];\)\ \ \)}], "Input"],

Cell[BoxData[{
    \(\(ContourPlot[f[{x, y}], {x, \(-4\), 4}, {y, \(-4\), 4}, 
        PlotPoints \[Rule] 35, 
        ColorFunction \[Rule] Hue];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x,y] = \>", f[{x, y}]];\)\ \ \)}], "Input"],

Cell[TextData[StyleBox["Set up the formulas for the gradient and search \
direction.  Then perform the first iteration.",
  FontFamily->"Times-Roman"]], "Text"],

Cell[BoxData[{
    RowBox[{\(grad = {\[PartialD]\_x\ f[{x, y}], \[PartialD]\_y\ 
              f[{x, y}]};\), " "}], "\n", 
    RowBox[{\(g[{x_, y_}] = Together[grad];\), " "}], "\n", 
    RowBox[{\(norm[V_] := N[\@\(V . V\)];\), " "}], "\n", 
    RowBox[{\(s[{x_, 
              y_}] = \(-\(g[{x, y}]\/\@\(g[{x, y}] . g[{x, y}]\)\)\);\), 
      " "}], "\n", 
    RowBox[{
      RowBox[{
        RowBox[{
          StyleBox[\(P\&\[RightVector]\_0\),
            FontWeight->"Bold"], "=", \({\(-3.0\), \(-2.0\)}\)}], ";"}], 
      "  "}], "\[IndentingNewLine]", 
    StyleBox[\(\(S\&\[RightVector]\_0\  = \ 
          s[P\&\[RightVector]\_0];\)\(\ \)\),
      FontWeight->"Bold"], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<  f[\!\(X\&\[RightVector]\)] = \>\"", 
          f[{x, y}]];\), "  "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\< \[Del]f[\!\(X\&\[RightVector]\)] = \>\"", 
          g[{x, y}]];\), "  "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<   \!\(P\&\[RightVector]\_0\)  = \>\"", ",", 
            StyleBox[\(P\&\[RightVector]\_0\),
              FontWeight->"Bold"]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<\[Del]f[\!\(P\&\[RightVector]\_0\)] = \>\"", ",", 
            RowBox[{"g", "[", 
              StyleBox[\(P\&\[RightVector]\_0\),
                FontWeight->"Bold"], "]"}]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print["\<\>"];\), " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<   \!\(S\&\[RightVector]\_0\)  = -\[Del]f[\!\(P\&\
\[RightVector]\_0\)]/\[LeftDoubleBracketingBar]\[Del]f[\!\(P\&\[RightVector]\_\
0\)]\[RightDoubleBracketingBar]\>\""];\), " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<   \!\(S\&\[RightVector]\_0\)  = \>\"", ",", 
            RowBox[{"-", " ", 
              RowBox[{"g", "[", 
                StyleBox[\(P\&\[RightVector]\_0\),
                  FontWeight->"Bold"], "]"}]}], ",", "\"\</\>\"", ",", 
            SqrtBox[
              RowBox[{
                RowBox[{"g", "[", 
                  StyleBox[\(P\&\[RightVector]\_0\),
                    FontWeight->"Bold"], "]"}], ".", 
                RowBox[{"g", "[", 
                  StyleBox[\(P\&\[RightVector]\_0\),
                    FontWeight->"Bold"], "]"}]}]]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<   \!\(S\&\[RightVector]\_0\)  = \>\"", ",", 
            RowBox[{"s", "[", 
              StyleBox[\(P\&\[RightVector]\_0\),
                FontWeight->"Bold"], "]"}]}], "]"}], ";"}], 
      "  "}], "\[IndentingNewLine]", 
    RowBox[{\(Print["\<\>"];\), "  "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<        f[\!\(X\&\[RightVector]\)] = \>\"", 
          g[{x, y}]];\), " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<f[\!\(P\&\[RightVector]\_0\) + \[Nu] \!\(S\&\
\[RightVector]\_0\)] = f[\>\"", 
          P\&\[RightVector]\_0 + \[Nu]\ S\&\[RightVector]\_0, "\<]\>"];\), 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{
          "\"\<f[\!\(P\&\[RightVector]\_0\) + \[Nu] \
\!\(S\&\[RightVector]\_0\)] = \>\"", ",", 
            
            StyleBox[\(f[
                P\&\[RightVector]\_0 + \[Nu]\ S\&\[RightVector]\_0]\),
              FontWeight->"Bold"]}], 
          StyleBox[" ",
            FontWeight->"Bold"], "]"}], ";"}], " "}]}], "Input",
  AspectRatioFixed->False],

Cell[TextData[{
  StyleBox["The minimum of  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      StyleBox[\(f[P\&\[RightVector]\_0 + \[Nu]\ S\&\[RightVector]\_0]\),
        FontWeight->"Bold"]],
    AspectRatioFixed->False],
  StyleBox[" can be found using a quadratic interpolation search.  This is \
accomplished using the subroutine call  ",
    FontFamily->"Times-Roman"],
  StyleBox["Qmin",
    FontFamily->"Courier New"],
  ". "
}], "Text"],

Cell[BoxData[{
    RowBox[{\(h\  = \ 1;\), " "}], "\[IndentingNewLine]", 
    RowBox[{
      StyleBox[\(Qmin;\),
        FontColor->RGBColor[0, 0, 1]], " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{\(P\&\[RightVector]\_1\), " ", "=", " ", 
          StyleBox[\(P\&\[RightVector]\_0 + H\_min\ S\&\[RightVector]\_0\),
            FontWeight->"Bold"]}], 
        StyleBox[";",
          FontWeight->"Bold"]}], 
      StyleBox[" ",
        FontWeight->
          "Bold"]}], "\[IndentingNewLine]", \(Print["\<We seek the minimum of \
\>"];\), "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{"Print", "[", 
        RowBox[{
        "\"\<f[\!\(P\&\[RightVector]\_0\) + \[Nu] \!\(S\&\[RightVector]\_0\)] \
= \>\"", ",", 
          StyleBox[\(f[P\&\[RightVector]\_0 + \[Nu]\ S\&\[RightVector]\_0]\),
            FontWeight->"Bold"]}], 
        StyleBox[" ",
          FontWeight->"Bold"], "]"}], 
      ";"}], "\[IndentingNewLine]", \(Print["\<Along the search line.\>"];\), \
"\[IndentingNewLine]", \(Print["\<One iteration produuces\>"];\), "\
\[IndentingNewLine]", \(Print[\*"\"\<\[Nu] = \!\(H\_min\) = \>\"", 
        H\_min];\), "\[IndentingNewLine]", \(Print["\<\>"];\), "\
\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<\!\(P\&\[RightVector]\_0\)  = \>\"", ",", 
            StyleBox[\(P\&\[RightVector]\_0\),
              FontWeight->"Bold"]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<\!\(S\&\[RightVector]\_0\)  = \>\"", ",", 
            RowBox[{"s", "[", 
              StyleBox[\(P\&\[RightVector]\_0\),
                FontWeight->"Bold"], "]"}]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", \(Print["\<\>"];\), "\[IndentingNewLine]",
   
    RowBox[{\(Print[\*"\"\<\!\(P\&\[RightVector]\_1\)  =  \!\(P\&\
\[RightVector]\_0\) + \!\(H\_min\) \!\(S\&\[RightVector]\_0\)\>\""];\), 
      " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<\!\(P\&\[RightVector]\_1\)  = \>\"", 
          P\&\[RightVector]\_0, "\< + \>", H\_min\ , S\&\[RightVector]\_0];\),
       " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<\!\(P\&\[RightVector]\_1\)  = \>\"", 
          P\&\[RightVector]\_0, "\< + \>", H\_min\ S\&\[RightVector]\_0];\), 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<\!\(P\&\[RightVector]\_1\)  = \>\"", ",", 
            StyleBox[\(P\&\[RightVector]\_1\),
              FontWeight->"Bold"]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", \(Print["\<\>"];\), "\[IndentingNewLine]",
   
    RowBox[{\(Print["\<f[\>", 
          PaddedForm[P\&\[RightVector]\_1, {13, 12}], "\<] = \>", 
          PaddedForm[f[P\&\[RightVector]\_1], {13, 12}]\ ];\), 
      "  "}]}], "Input"],

Cell[TextData[{
  StyleBox["To perform a second iteration set  ",
    FontFamily->"Times-Roman"],
  Cell[BoxData[
      RowBox[{
        StyleBox[\(\(P\& \[RightVector] \)\_0\),
          FontWeight->"Bold"], "=", 
        StyleBox[\(\(P\& \[RightVector] \)\_1\),
          FontWeight->"Bold"]}]]],
  StyleBox["  and follow the same steps.  ",
    FontFamily->"Times-Roman"]
}], "Text"],

Cell[BoxData[{
    RowBox[{
      RowBox[{
        RowBox[{
          StyleBox[\(P\&\[RightVector]\_0\),
            FontWeight->"Bold"], "=", \(P\&\[RightVector]\_1\)}], ";"}], 
      "  "}], "\[IndentingNewLine]", 
    RowBox[{
      StyleBox[\(S\&\[RightVector]\_0\  = \ s[P\&\[RightVector]\_0];\),
        FontWeight->"Bold"], 
      StyleBox[" ",
        FontWeight->"Bold"]}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<  f[\!\(X\&\[RightVector]\)] = \>\"", 
          f[{x, y}]];\), "  "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\< \[Del]f[\!\(X\&\[RightVector]\)] = \>\"", 
          g[{x, y}]];\), "  "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<   \!\(P\&\[RightVector]\_0\)  = \>\"", ",", 
            StyleBox[\(P\&\[RightVector]\_0\),
              FontWeight->"Bold"]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<\[Del]f[\!\(P\&\[RightVector]\_0\)] = \>\"", ",", 
            RowBox[{"g", "[", 
              StyleBox[\(P\&\[RightVector]\_0\),
                FontWeight->"Bold"], "]"}]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print["\<\>"];\), " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<   \!\(S\&\[RightVector]\_0\)  = -\[Del]f[\!\(P\&\
\[RightVector]\_0\)]/\[LeftDoubleBracketingBar]\[Del]f[\!\(P\&\[RightVector]\_\
0\)]\[RightDoubleBracketingBar]\>\""];\), " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<   \!\(S\&\[RightVector]\_0\)  = \>\"", ",", 
            RowBox[{"-", " ", 
              RowBox[{"g", "[", 
                StyleBox[\(P\&\[RightVector]\_0\),
                  FontWeight->"Bold"], "]"}]}], ",", "\"\</\>\"", ",", 
            SqrtBox[
              RowBox[{
                RowBox[{"g", "[", 
                  StyleBox[\(P\&\[RightVector]\_0\),
                    FontWeight->"Bold"], "]"}], ".", 
                RowBox[{"g", "[", 
                  StyleBox[\(P\&\[RightVector]\_0\),
                    FontWeight->"Bold"], "]"}]}]]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<   \!\(S\&\[RightVector]\_0\)  = \>\"", ",", 
            RowBox[{"s", "[", 
              StyleBox[\(P\&\[RightVector]\_0\),
                FontWeight->"Bold"], "]"}]}], "]"}], ";"}], 
      "  "}], "\[IndentingNewLine]", 
    RowBox[{\(Print["\<\>"];\), "  "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<        f[\!\(X\&\[RightVector]\)] = \>\"", 
          g[{x, y}]];\), " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<f[\!\(P\&\[RightVector]\_0\) + \[Nu] \!\(S\&\
\[RightVector]\_0\)] = f[\>\"", 
          P\&\[RightVector]\_0 + \[Nu]\ S\&\[RightVector]\_0, "\<]\>"];\), 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{
          "\"\<f[\!\(P\&\[RightVector]\_0\) + \[Nu] \
\!\(S\&\[RightVector]\_0\)] = \>\"", ",", 
            
            StyleBox[\(f[
                P\&\[RightVector]\_0 + \[Nu]\ S\&\[RightVector]\_0]\),
              FontWeight->"Bold"]}], 
          StyleBox[" ",
            FontWeight->"Bold"], "]"}], ";"}], " "}]}], "Input"],

Cell[TextData[{
  StyleBox["This time do not give a value for ",
    FontFamily->"Times-Roman"],
  StyleBox["h",
    FontFamily->"Courier New"],
  StyleBox[" because it has been automatically updated in the subroutine.",
    FontFamily->"Times-Roman"]
}], "Text"],

Cell[BoxData[{
    RowBox[{
      StyleBox[\(Qmin;\),
        FontColor->RGBColor[0, 0, 1]], " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{\(P\&\[RightVector]\_1\), " ", "=", " ", 
          StyleBox[\(P\&\[RightVector]\_0 + H\_min\ S\&\[RightVector]\_0\),
            FontWeight->"Bold"]}], 
        StyleBox[";",
          FontWeight->"Bold"]}], 
      StyleBox[" ",
        FontWeight->
          "Bold"]}], "\[IndentingNewLine]", \(Print["\<We seek the minimum of \
\>"];\), "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{"Print", "[", 
        RowBox[{
        "\"\<f[\!\(P\&\[RightVector]\_0\) + \[Nu] \!\(S\&\[RightVector]\_0\)] \
= \>\"", ",", 
          StyleBox[\(f[P\&\[RightVector]\_0 + \[Nu]\ S\&\[RightVector]\_0]\),
            FontWeight->"Bold"]}], 
        StyleBox[" ",
          FontWeight->"Bold"], "]"}], 
      ";"}], "\[IndentingNewLine]", \(Print["\<Along the search line.\>"];\), \
"\[IndentingNewLine]", \(Print["\<One iteration produuces\>"];\), "\
\[IndentingNewLine]", \(Print[\*"\"\<\[Nu] = \!\(H\_min\) = \>\"", 
        H\_min];\), "\[IndentingNewLine]", \(Print["\<\>"];\), "\
\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<\!\(P\&\[RightVector]\_0\)  = \>\"", ",", 
            StyleBox[\(P\&\[RightVector]\_0\),
              FontWeight->"Bold"]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<\!\(S\&\[RightVector]\_0\)  = \>\"", ",", 
            RowBox[{"s", "[", 
              StyleBox[\(P\&\[RightVector]\_0\),
                FontWeight->"Bold"], "]"}]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", \(Print["\<\>"];\), "\[IndentingNewLine]",
   
    RowBox[{\(Print[\*"\"\<\!\(P\&\[RightVector]\_1\)  =  \!\(P\&\
\[RightVector]\_0\) + \!\(H\_min\) \!\(S\&\[RightVector]\_0\)\>\""];\), 
      " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<\!\(P\&\[RightVector]\_1\)  = \>\"", 
          P\&\[RightVector]\_0, "\< + \>", H\_min\ , S\&\[RightVector]\_0];\),
       " "}], "\[IndentingNewLine]", 
    RowBox[{\(Print[\*"\"\<\!\(P\&\[RightVector]\_1\)  = \>\"", 
          P\&\[RightVector]\_0, "\< + \>", H\_min\ S\&\[RightVector]\_0];\), 
      " "}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        RowBox[{"Print", "[", 
          RowBox[{"\"\<\!\(P\&\[RightVector]\_1\)  = \>\"", ",", 
            StyleBox[\(P\&\[RightVector]\_1\),
              FontWeight->"Bold"]}], "]"}], ";"}], 
      " "}], "\[IndentingNewLine]", \(Print["\<\>"];\), "\[IndentingNewLine]",
   
    RowBox[{\(Print["\<f[\>", 
          PaddedForm[P\&\[RightVector]\_1, {13, 12}], "\<] = \>", 
          PaddedForm[f[P\&\[RightVector]\_1], {13, 12}]\ ];\), 
      "  "}]}], "Input"],

Cell[TextData[{
  StyleBox["Execute the subroutine ",
    FontFamily->"Times-Roman"],
  StyleBox["GradSearch",
    FontFamily->"Courier New"],
  StyleBox[" and perform the iterations.  ",
    FontFamily->"Times-Roman"]
}], "Text"],

Cell[BoxData[{
    \(\(P0 = {\(-3.0\), \(-2.0\)};\)\ \), "\[IndentingNewLine]", 
    \(\(GradSearch[P0, 10\^\(-10\), 
        10\^\(-10\)];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<A local minimum of f[{x,y}] = \>", 
        f[{x, y}], "\< is\>"];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[\>", 
        PaddedForm[P\&\[RightVector]\_min, {13, 12}], "\<] = \>", 
        PaddedForm[Y\_min, {13, 12}]\ ];\)\ \ \)}], "Input",
  AspectRatioFixed->False],

Cell[TextData[{
  "Let us compare this answer with ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  "'s built in procedure ",
  StyleBox["FindMinimum",
    FontWeight->"Bold"],
  "."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[{
    \(\(sol = 
        FindMinimum[f[{x, y}], {x, \(-3.0\)}, {y, \(-2.0\)}];\)\ \ \), "\n", 
    \(\(Print["\<A local minimum of f[{x,y}] = \>", 
        f[{x, y}], "\< is\>"];\)\ \ \), "\[IndentingNewLine]", 
    \(\(P\&~ = 
        ReplaceAll[{x, y}, 
          sol\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)];\)\
\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[\>", PaddedForm[P\&~, {13, 12}], "\<] = \>", 
        PaddedForm[f[P\&~], {13, 12}]\ ];\)\ \ \)}], "Input"],

Cell[TextData[{
  StyleBox["Observation.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 1]],
  "  Even ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " is having a hard time finding the minimum of  ",
  Cell[BoxData[
      \(f \((x, y)\)\  = \ \(x - y\)\/\(x\^2 + y\^2 + 2\)\)]],
  ".\nSince the function is \"flat\" near the minimum, the best way to \
achieve better accuracy is to increase the  ",
  StyleBox["WorkingPrecision",
    FontFamily->"Courier New"],
  ",  i.e. use extended precision in the numerical computations."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[{
    \(\(sol = 
        FindMinimum[f[{x, y}], {x, \(-3.0\)}, {y, \(-2.0\)}, 
          WorkingPrecision \[Rule] 25];\)\ \ \), "\n", 
    \(\(Print["\<A local minimum of f[{x,y}] = \>", 
        f[{x, y}], "\< is\>"];\)\ \ \), "\[IndentingNewLine]", 
    \(\(P\&~ = 
        ReplaceAll[{x, y}, 
          sol\_\(\(\[LeftDoubleBracket]\)\(2\)\(\[RightDoubleBracket]\)\)];\)\
\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[\>", PaddedForm[P\&~, {13, 12}], "\<] = \>", 
        PaddedForm[f[P\&~], {13, 12}]\ ];\)\ \ \)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Various Scenarios",
    FontFamily->"New Century Schlbk",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  StyleBox[" and Animations for the Gradient Search Method.",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]]
}], "Text"],

Cell[TextData[{
  StyleBox["Program (Steepest Descent  or Gradient Method",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  StyleBox[").",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  "To numerically approximate a local minimum of  f(",
  StyleBox["X",
    FontWeight->"Bold"],
  "),  where  f  is a continuous function of  n  real variables and  ",
  Cell[BoxData[
      RowBox[{
        StyleBox["X",
          FontWeight->"Bold"], " ", "=", 
        " ", \((x\_1, x\_2, \[CenterEllipsis], x\_n)\)}]]],
  "  by starting with one point  ",
  Cell[BoxData[
      SubscriptBox[
        StyleBox["P",
          FontWeight->"Bold"], "0"]]],
  "  and using the gradient method.  Including graphics commands to draw the \
iterations used in finding the solution. "
}], "Text"],

Cell[BoxData[{
    RowBox[{\(Needs["\<Graphics`Colors`\>"];\), 
      "  "}], "\[IndentingNewLine]", \
\(Needs["\<Graphics`ImplicitPlot`\>"];\), "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{\(GradSearch[X0_, \[Delta]_, \[Epsilon]_]\), ":=", 
        RowBox[{"Module", "[", 
          RowBox[{\({H}\), ",", "\[IndentingNewLine]", 
            RowBox[{
              RowBox[{
                StyleBox["Qmin",
                  FontColor->RGBColor[0, 0, 1]], ":=", 
                RowBox[{"Module", "[", 
                  RowBox[{\({}\), ",", "\[IndentingNewLine]", 
                    
                    RowBox[{\(jmax\  = \ 15\), 
                      ";", \(P\_1\  = \ P\_0\  + \ h\ \ S\_0\), 
                      ";", \(P\_2\  = \ P\_0\  + \ 2\ h\ \ S\_0\), 
                      ";", \(Y\_0\  = \ f[P\_0]\), 
                      ";", \(Y\_1\  = \ f[P\_1]\), 
                      ";", \(Y\_2\  = \ f[P\_2]\), ";", "\[IndentingNewLine]",
                       
                      StyleBox[\(points = {P\_0, P\_1, P\_2}\),
                        FontColor->RGBColor[0, 1, 0]], 
                      StyleBox[";",
                        FontColor->RGBColor[0, 1, 0]], 
                      StyleBox[" ",
                        FontColor->RGBColor[0, 1, 0]], 
                      StyleBox["\[IndentingNewLine]",
                        FontColor->RGBColor[0, 1, 0]], 
                      
                      StyleBox[\(dots = 
                          Graphics[{{Red, PointSize[0.025], 
                                Point[P\_0]}, {Blue, PointSize[0.025], 
                                Point[P\_1]}, {Green, PointSize[0.025], 
                                Point[P\_2]}}]\),
                        FontColor->RGBColor[0, 1, 0]], 
                      StyleBox[";",
                        FontColor->RGBColor[0, 1, 0]], 
                      StyleBox[" ",
                        FontColor->RGBColor[0, 1, 0]], 
                      StyleBox["\[IndentingNewLine]",
                        FontColor->RGBColor[0, 1, 0]], 
                      
                      StyleBox[\(lin = 
                          Graphics[{{Pink, Thickness[0.01], 
                                Line[{P\_0, P\_0 + \ 5\ h\ \ S\_0}]}}]\),
                        FontColor->RGBColor[0, 1, 0]], 
                      StyleBox[";",
                        FontColor->RGBColor[0, 1, 0]], 
                      "\[IndentingNewLine]", \(graph = 
                        ImplicitPlot[
                          f[{x, y}] \[Equal] f[P\_0], {x, 2.5, 3.05}, 
                          PlotStyle \[Rule] {Thickness[0.01], Blue}, 
                          DisplayFunction \[Rule] Identity]\), ";", "  ", 
                      "\[IndentingNewLine]", \(contval = \((f[P\_0] + 
                                7)\) {0.1, 0.2, 0.4, 0.6, 0.8} - 7\), ";", 
                      "\[IndentingNewLine]", \(graphcont = 
                        ContourPlot[
                          f[{x, y}], {x, 2.5, 3.05}, {y, 1.6, 2.15}, 
                          Contours \[Rule] contval, PlotPoints \[Rule] 100, 
                          ContourShading \[Rule] False, 
                          ContourStyle \[Rule] Cyan, 
                          DisplayFunction \[Rule] Identity]\), ";", "  ", 
                      "\[IndentingNewLine]", \(Show[graphcont, graph, lin, 
                        dots, PlotRange \[Rule] {{2.5, 3.05}, {1.6, 2.15}}, 
                        Axes \[Rule] True, AxesOrigin \[Rule] {2.5, 1.6}, 
                        DisplayFunction \[Rule] $DisplayFunction]\), ";", 
                      "  ", "\[IndentingNewLine]", \(Print["\<f[\>", 
                        PaddedForm[P\_0, {13, 12}], "\<] = \>", 
                        PaddedForm[Y\_0, {13, 12}]\ ]\), ";", "  ", 
                      "\[IndentingNewLine]", \(Print["\<f[\>", 
                        PaddedForm[P\_1, {13, 12}], "\<] = \>", 
                        PaddedForm[Y\_1, {13, 12}]\ ]\), ";", "  ", 
                      "\[IndentingNewLine]", \(Print["\<f[\>", 
                        PaddedForm[P\_2, {13, 12}], "\<] = \>", 
                        PaddedForm[Y\_2, {13, 12}]\ ]\), ";", "  ", 
                      "\[IndentingNewLine]", \(cond\  = \ 0\), 
                      ";", \(j\  = \ 0\), ";", 
                      "\[IndentingNewLine]", \(While[\ 
                        j < jmax\ \  && \ \ cond \[Equal] 
                            0, \ \[IndentingNewLine]If[\ 
                          Y\_0 \[LessEqual] 
                            Y\_1, \[IndentingNewLine]Module[{}, 
                            P\_2\  = \ P\_1; Y\_2\  = \ Y\_1; h\  = \ h\/2; 
                            P\_1\  = \ P\_0\  + \ h\ \ S\_0; 
                            Y\_1\  = \ 
                              f[P\_1];\ ], \[IndentingNewLine]\(Module[{}, \
\[IndentingNewLine]\(If[\ Y\_2 < Y\_1, \[IndentingNewLine]Module[{}, 
                                    P\_1\  = \ P\_2; Y\_1\  = \ Y\_2; 
                                    h\  = \ 2\ h; 
                                    P\_2\  = \ P\_0\  + \ 2\ h\ \ S\_0; 
                                    Y\_2\  = \ f[P\_2];\ ], 
                                  cond\  = \ \(-1\)];\)\ ];\)\ ]; \
\[IndentingNewLine]j\  = \ j + 1; \[IndentingNewLine]If[\ h < \[Delta], \ 
                          cond = 1\ ];\ ]\), ";", 
                      "\[IndentingNewLine]", \(count = count + j\), ";", 
                      "\[IndentingNewLine]", \(d\  = \ 
                        4\ Y\_1\  - \ 2\ Y\_0\  - \ 2\ Y\_2\), ";", 
                      "\[IndentingNewLine]", \(If[\ d < 0, \ 
                        H\_min = \(h\ \((4\ Y\_1 - 3\ Y\_0 - Y\_2)\)\)\/d, \ 
                        H\_min = h\/3; \ cond = 4\ ]\), ";", 
                      "\[IndentingNewLine]", \(P\_min\  = \ 
                        P\_0 + H\_min\ S\_0\), 
                      ";", \(Y\_min\  = \ f[P\_min]\), ";", 
                      "\[IndentingNewLine]", \(H\_0\  = \ Abs[H\_min]\), 
                      ";", \(H\_1\  = \ Abs[H\_min - h]\), 
                      ";", \(H\_2\  = \ Abs[H\_min - 2\ h]\), ";", 
                      "\[IndentingNewLine]", \(If[\ H\_0 < h, \ h = H\_0\ ]\),
                       ";", \(If[\ H\_1 < h, \ h = H\_1\ ]\), 
                      ";", \(If[\ H\_2 < h, \ h = H\_2\ ]\), 
                      ";", \(If[\ h \[Equal] 0, \ h = H\_min\ ]\), 
                      ";", \(If[\ h < \[Delta], \ cond = 1\ ]\), ";", 
                      "\[IndentingNewLine]", \(e\_0\  = \ 
                        Abs[Y\_0 - Y\_min]\), 
                      ";", \(e\_1\  = \ Abs[Y\_1 - Y\_min]\), 
                      ";", \(e\_2\  = \ Abs[Y\_2 - Y\_min]\), ";", 
                      "\[IndentingNewLine]", \(If[\ 
                        e\_0 \[NotEqual] 0\  && \ e\_0 < Err, \ 
                        Err = e\_0\ ]\), 
                      ";", \(If[\ e\_1 \[NotEqual] 0\  && \ e\_1 < Err, \ 
                        Err = e\_1\ ]\), 
                      ";", \(If[\ e\_2 \[NotEqual] 0\  && \ e\_2 < Err, \ 
                        Err = e\_2\ ]\), 
                      ";", \(If[\ 
                        e\_0 \[Equal] 0\  && \ e\_1 \[Equal] 0\  && \ 
                          e\_2 \[Equal] 0, \ Err = 0\ ]\), 
                      ";", \(If[\ Err < \[Epsilon], \ cond = 2\ ]\), ";", 
                      "\[IndentingNewLine]", \(If[\ 
                        cond \[Equal] 2\  && \ h < \[Delta], \ cond = 3\ ]\), 
                      ";"}]}], " ", "]"}]}], ";", 
              "\[IndentingNewLine]", \(P\_0\  = \ N[X0]\), ";", 
              "\[IndentingNewLine]", \(max\  = \ 20\), ";", \(h\  = \ 0.2\), 
              ";", "\[IndentingNewLine]", \(Err\  = \ 1\), 
              ";", \(count\  = \ 0\), ";", \(cond\  = \ 0\), ";", 
              "\[IndentingNewLine]", 
              RowBox[{"While", "[", " ", 
                
                RowBox[{\(count < 
                      max\ \ \  && \ \ \((h > \[Delta]\  || \ 
                        Err > \[Epsilon])\)\), ",", "\[IndentingNewLine]", 
                  RowBox[{
                    RowBox[{"Module", "[", 
                      RowBox[{\({}\), ",", "\[IndentingNewLine]", 
                        
                        RowBox[{\(S\_0\  = \ s[P\_0]\), ";", 
                          "\[IndentingNewLine]", 
                          StyleBox["Qmin",
                            FontColor->RGBColor[0, 0, 1]], 
                          StyleBox[";",
                            FontColor->RGBColor[0, 0, 1]], 
                          "\[IndentingNewLine]", \(P\_0\  = \ P\_min\), 
                          ";", \(Y\_0\  = \ Y\_min\), ";", 
                          "\[IndentingNewLine]", 
                          StyleBox[\(points = {P\_0}\),
                            FontColor->RGBColor[0, 1, 0]], 
                          StyleBox[";",
                            FontColor->RGBColor[0, 1, 0]], 
                          StyleBox[" ",
                            FontColor->RGBColor[0, 1, 0]], 
                          "\[IndentingNewLine]", 
                          
                          StyleBox[\(dots = 
                              Graphics[{{Red, PointSize[0.025], 
                                    Point[P\_0]}}]\),
                            FontColor->RGBColor[0, 1, 0]], 
                          StyleBox[";",
                            FontColor->RGBColor[0, 1, 0]], 
                          StyleBox[" ",
                            FontColor->RGBColor[0, 1, 0]], 
                          "\[IndentingNewLine]", \(Show[graphcont, graph, 
                            lin, dots, 
                            PlotRange \[Rule] {{2.5, 3.05}, {1.6, 2.15}}, 
                            Axes \[Rule] True, AxesOrigin \[Rule] {2.5, 1.6}, 
                            DisplayFunction \[Rule] $DisplayFunction]\), ";", 
                          "  ", "\[IndentingNewLine]", \(Print["\<f[\>", 
                            PaddedForm[P\_min, {13, 12}], "\<] = \>", 
                            PaddedForm[Y\_min, {13, 12}]\ ]\), ";", "  ", 
                          "\[IndentingNewLine]", \(count\  = \ 
                            count\  + \ 1\)}]}], "]"}], ";"}]}], " ", "]"}], 
              ";", " ", 
              "\[IndentingNewLine]", \(Show[graph, dots, 
                PlotRange \[Rule] {{2.5, 3.05}, {1.6, 2.15}}, 
                Axes \[Rule] True, AxesOrigin \[Rule] {2.5, 1.6}, 
                DisplayFunction \[Rule] $DisplayFunction]\), ";", "  ", 
              "\[IndentingNewLine]", \(Print["\<f[\>", 
                PaddedForm[P\_min, {13, 12}], "\<] = \>", 
                PaddedForm[Y\_min, {13, 12}]\ ]\), ";"}]}], "]"}]}], 
      "  "}]}], "Input",
  AspectRatioFixed->False],

Cell[TextData[{
  StyleBox["Example 5.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Use the gradient search method to find the minimum of   ",
  Cell[BoxData[
      \(f \((x, y)\)\  = \ x\^2 - 4  x + y\^2 - y - x\ y\)]],
  ".  "
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 5.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text",
  Evaluatable->False,
  AspectRatioFixed->False],

Cell[TextData[{
  "Enter the function  ",
  Cell[BoxData[
      \(f \((x, y)\)\  = \ x\^2 - 4  x + y\^2 - y - x\ y\)]],
  " and graph the surface ",
  Cell[BoxData[
      \(z\  = f \((x, y)\)\)]],
  ". "
}], "Text"],

Cell[BoxData[{
    \(\(Clear[f, x, y];\)\), "\[IndentingNewLine]", 
    \(\(f[{x_, y_}] = x\^2 - 4  x + y\^2 - y - x\ y;\)\ \ \), "\n", 
    \(\(Plot3D[f[{x, y}], {x, 2.5, 3.5}, {y, 1.5, 2.5}, 
        AxesLabel \[Rule] {"\<x\>", "\<y\>", "\<z\>"}, 
        ViewPoint \[Rule] {8, 5, 2}, 
        BoxRatios \[Rule] {1, 1, 1}];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<z = f[x,y] = \>", f[{x, y}]];\)\ \ \)}], "Input",
  AspectRatioFixed->False],

Cell[BoxData[{
    \(\(Needs["\<Graphics`Graphics3D`\>"];\)\ \ \), "\n", 
    \(\(ShadowPlot3D[f[{x, y}], {x, 2.5, 3.5}, {y, 1.5, 2.5}, 
        Axes \[Rule] True, AxesLabel \[Rule] {"\<x\>", "\<y\>", "\<z\>"}, 
        ViewPoint \[Rule] {3, \(-2\), 2}, 
        BoxRatios \[Rule] {1, 1, 1}];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<z = f[x,y] = \>", f[{x, y}]];\)\ \ \)}], "Input"],

Cell[BoxData[{
    \(\(ContourPlot[f[{x, y}], {x, 2.5, 3.5}, {y, 1.5, 2.5}, 
        PlotPoints \[Rule] 35, 
        ColorFunction \[Rule] Hue];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x,y] = \>", f[{x, y}]];\)\ \ \)}], "Input"],

Cell[TextData[StyleBox["Enter the starting point and perform the iterations.  \
",
  FontFamily->"Times-Roman"]], "Text"],

Cell[BoxData[{
    \(\(grad = {\[PartialD]\_x\ f[{x, y}], \[PartialD]\_y\ 
            f[{x, y}]};\)\ \), "\n", 
    \(\(g[{x_, y_}] = grad;\)\ \), "\n", 
    \(\(norm[V_] := N[\@\(V . V\)];\)\ \), "\n", 
    \(\(s[{x_, 
            y_}] = \(-\(g[{x, 
                  y}]\/\@\(g[{x, y}] . g[{x, y}]\)\)\);\)\ \), "\n", 
    \(\(P0 = {2.55, 1.75};\)\ \), "\n", 
    \(\(GradSearch[P0, 3.6*10\^\(-3\), 
        3.6*10\^\(-3\)];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<A local minimum of f[{x,y}] = \>", 
        f[{x, y}], "\< is\>"];\)\ \ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[\>", PaddedForm[P\_min, {13, 12}], "\<] = \>", 
        PaddedForm[Y\_min, {13, 12}]\ ];\)\ \ \)}], "Input",
  AspectRatioFixed->False,
  AnimationDisplayTime->1.37858],

Cell[TextData[{
  StyleBox["Animation 1.  (",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0.996109, 0.250004]],
  " ",
  StyleBox[ButtonBox["Gradient Search",
    ButtonData:>{
      URL[ 
      "http://mathews.ecs.fullerton.edu/a2001/Animations/Optimization/\
Gradient1/Gradientaa.html"], None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox[ButtonBox["Gradient Search",
    ButtonData:>{
      URL[ 
      "http://math.fullerton.edu/mathews/a2001/Animations/Optimization/\
Gradient1/Gradientaa.html"], None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  " ",
  StyleBox[").",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0.996109, 0.250004]],
  "  Internet hyperlink. "
}], "Text"]
}, Closed]],

Cell[TextData[{
  StyleBox["Animations (",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  StyleBox[ButtonBox["Gradient Search",
    ButtonData:>{
      URL[ 
      "http://mathews.ecs.fullerton.edu/a2001/Animations/Optimization/\
Gradient1/Gradient.html"], None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox[ButtonBox["Gradient Search",
    ButtonData:>{
      URL[ 
      "http://math.fullerton.edu/mathews/a2001/Animations/Optimization/\
Gradient1/Gradient.html"], None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  StyleBox[").",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  "  Internet hyperlinks to animations.  "
}], "Text"],

Cell[TextData[StyleBox["Research Experience for Undergraduates",
  FontSize->14,
  FontWeight->"Bold",
  FontColor->RGBColor[0.500008, 0, 0.996109]]], "Text"],

Cell[TextData[{
  StyleBox[ButtonBox["Gradient Search",
    ButtonData:>{
      URL[ "http://mathews.ecs.fullerton.edu/n2003/GradientSearchBib.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox[ButtonBox["Gradient Search",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/GradientSearchBib.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  "  Internet hyperlinks to web sites and a bibliography of articles.  "
}], "Text"],

Cell[TextData[StyleBox[ButtonBox["Return to the Numerical Analysis Project",
  ButtonData:>{
    URL[ "http://math.fullerton.edu/mathews/numerical.html"], None},
  ButtonStyle->"Hyperlink"],
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1],
  FontVariations->{"Underline"->True}]], "Text"]
},
FrontEndVersion->"5.2 for Microsoft Windows",
ScreenRectangle->{{0, 1024}, {0, 685}},
CellGrouping->Manual,
WindowSize->{1022, 642},
WindowMargins->{{Automatic, 3}, {3, Automatic}},
CellLabelAutoDelete->True
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 299, 10, 35, "Text"],
Cell[2078, 65, 1464, 49, 99, "Text"]
}, Closed]],
Cell[3557, 117, 2206, 67, 68, "Text"],
Cell[5766, 186, 4755, 145, 125, "Text"],

Cell[CellGroupData[{
Cell[10546, 335, 103, 2, 33, "Text"],
Cell[10652, 339, 213, 6, 36, "Text"],
Cell[10868, 347, 1533, 30, 343, "Input"],
Cell[12404, 379, 174, 5, 38, "Text"],
Cell[12581, 386, 1542, 31, 343, "Input"]
}, Closed]],
Cell[14138, 420, 2946, 87, 87, "Text"],
Cell[17087, 509, 3772, 114, 128, "Text"],
Cell[20862, 625, 5609, 168, 356, "Text"],
Cell[26474, 795, 623, 22, 33, "Text"],
Cell[27100, 819, 1351, 43, 52, "Text"],
Cell[28454, 864, 602, 20, 33, "Text"],
Cell[29059, 886, 1379, 40, 71, "Text"],
Cell[30441, 928, 5882, 104, 1235, "Input"],
Cell[36326, 1034, 309, 10, 33, "Text",
  Evaluatable->False],

Cell[CellGroupData[{
Cell[36660, 1048, 150, 4, 33, "Text",
  Evaluatable->False],
Cell[36813, 1054, 215, 8, 33, "Text"],
Cell[37031, 1064, 452, 8, 90, "Input"],
Cell[37486, 1074, 392, 6, 90, "Input"],
Cell[37881, 1082, 236, 4, 50, "Input"],
Cell[38120, 1088, 160, 2, 33, "Text"],
Cell[38283, 1092, 4151, 98, 453, "Input"],
Cell[42437, 1192, 450, 13, 33, "Text"],
Cell[42890, 1207, 3000, 71, 391, "Input"],
Cell[45893, 1280, 386, 11, 33, "Text"],
Cell[46282, 1293, 3462, 81, 325, "Input"],
Cell[49747, 1376, 263, 7, 33, "Text"],
Cell[50013, 1385, 2941, 70, 371, "Input"],
Cell[52957, 1457, 230, 7, 33, "Text"],
Cell[53190, 1466, 513, 10, 113, "Input"],
Cell[53706, 1478, 250, 10, 33, "Text",
  Evaluatable->False],
Cell[53959, 1490, 485, 9, 91, "Input"]
}, Closed]],
Cell[54459, 1502, 356, 10, 49, "Text",
  Evaluatable->False],

Cell[CellGroupData[{
Cell[54840, 1516, 150, 4, 33, "Text",
  Evaluatable->False],
Cell[54993, 1522, 225, 8, 33, "Text"],
Cell[55221, 1532, 403, 7, 92, "Input"],
Cell[55627, 1541, 392, 6, 90, "Input"],
Cell[56022, 1549, 204, 3, 50, "Input"],
Cell[56229, 1554, 60, 0, 33, "Text"],
Cell[56292, 1556, 803, 17, 218, "Input"],
Cell[57098, 1575, 250, 10, 33, "Text",
  Evaluatable->False],
Cell[57351, 1587, 485, 9, 91, "Input"],
Cell[57839, 1598, 616, 17, 52, "Text",
  Evaluatable->False],
Cell[58458, 1617, 534, 11, 91, "Input"]
}, Closed]],
Cell[59007, 1631, 410, 11, 52, "Text",
  Evaluatable->False],

Cell[CellGroupData[{
Cell[59442, 1646, 150, 4, 33, "Text",
  Evaluatable->False],
Cell[59595, 1652, 218, 4, 63, "Input"],
Cell[59816, 1658, 489, 8, 70, "Input"],
Cell[60308, 1668, 402, 6, 90, "Input"],
Cell[60713, 1676, 267, 4, 50, "Input"],
Cell[60983, 1682, 138, 3, 52, "Text"],
Cell[61124, 1687, 180, 7, 33, "Text"],
Cell[61307, 1696, 121, 2, 33, "Text"],
Cell[61431, 1700, 801, 17, 218, "Input"],
Cell[62235, 1719, 250, 10, 33, "Text",
  Evaluatable->False],
Cell[62488, 1731, 485, 9, 91, "Input"],
Cell[62976, 1742, 179, 7, 33, "Text"],
Cell[63158, 1751, 121, 2, 33, "Text"],
Cell[63282, 1755, 801, 17, 218, "Input"],
Cell[64086, 1774, 250, 10, 33, "Text",
  Evaluatable->False],
Cell[64339, 1786, 485, 9, 91, "Input"],
Cell[64827, 1797, 640, 18, 55, "Text",
  Evaluatable->False],
Cell[65470, 1817, 534, 11, 91, "Input"],
Cell[66007, 1830, 185, 7, 33, "Text"],
Cell[66195, 1839, 121, 2, 33, "Text"],
Cell[66319, 1843, 806, 17, 218, "Input"],
Cell[67128, 1862, 250, 10, 33, "Text",
  Evaluatable->False],
Cell[67381, 1874, 499, 10, 91, "Input"],
Cell[67883, 1886, 640, 18, 55, "Text",
  Evaluatable->False],
Cell[68526, 1906, 550, 11, 91, "Input"]
}, Closed]],
Cell[69091, 1920, 310, 10, 35, "Text",
  Evaluatable->False],

Cell[CellGroupData[{
Cell[69426, 1934, 150, 4, 33, "Text",
  Evaluatable->False],
Cell[69579, 1940, 216, 8, 38, "Text"],
Cell[69798, 1950, 467, 8, 104, "Input"],
Cell[70268, 1960, 399, 6, 90, "Input"],
Cell[70670, 1968, 238, 4, 50, "Input"],
Cell[70911, 1974, 160, 2, 33, "Text"],
Cell[71074, 1978, 3674, 84, 430, "Input"],
Cell[74751, 2064, 450, 13, 33, "Text"],
Cell[75204, 2079, 2868, 66, 391, "Input"],
Cell[78075, 2147, 386, 11, 33, "Text"],
Cell[78464, 2160, 3350, 78, 325, "Input"],
Cell[81817, 2240, 263, 7, 33, "Text"],
Cell[82083, 2249, 2809, 65, 371, "Input"],
Cell[84895, 2316, 230, 7, 33, "Text"],
Cell[85128, 2325, 521, 10, 113, "Input"],
Cell[85652, 2337, 250, 10, 33, "Text",
  Evaluatable->False],
Cell[85905, 2349, 504, 10, 91, "Input"],
Cell[86412, 2361, 607, 17, 57, "Text",
  Evaluatable->False],
Cell[87022, 2380, 544, 11, 91, "Input"]
}, Closed]],
Cell[87581, 2394, 312, 10, 32, "Text"],
Cell[87896, 2406, 916, 26, 52, "Text"],
Cell[88815, 2434, 10794, 189, 1126, "Input"],
Cell[99612, 2625, 309, 10, 33, "Text",
  Evaluatable->False],

Cell[CellGroupData[{
Cell[99946, 2639, 150, 4, 33, "Text",
  Evaluatable->False],
Cell[100099, 2645, 215, 8, 33, "Text"],
Cell[100317, 2655, 452, 8, 90, "Input"],
Cell[100772, 2665, 392, 6, 90, "Input"],
Cell[101167, 2673, 236, 4, 50, "Input"],
Cell[101406, 2679, 121, 2, 33, "Text"],
Cell[101530, 2683, 817, 17, 216, "Input"],
Cell[102350, 2702, 772, 26, 33, "Text"]
}, Closed]],
Cell[103137, 2731, 767, 24, 30, "Text"],
Cell[103907, 2757, 158, 3, 35, "Text"],
Cell[104068, 2762, 553, 16, 33, "Text"],
Cell[104624, 2780, 293, 6, 33, "Text"]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

