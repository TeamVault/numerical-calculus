(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    161207,       3701]*)
(*NotebookOutlinePosition[    161873,       3724]*)
(*  CellTagsIndexPosition[    161829,       3720]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Module for the Painlev\[EAcute] Property",
  FontSize->14,
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]], "Text",
  TextAlignment->Center],

Cell[TextData[{
  StyleBox["Numerical Methods Using Mathematica \nComplementary Supplement \n\
for ",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["\n",
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["Numerical Analysis - Numerical Methods",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/numerical.html"], None},
    ButtonStyle->"Hyperlink"],
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[" \n",
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["(c) ",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["\n",
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["John H. Mathews and Kurtis Fink, 2005",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/numerical.html"], None},
    ButtonStyle->"Hyperlink"],
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[" ",
    FontSize->14,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]]
}], "Text",
  TextAlignment->Center],

Cell[TextData[StyleBox["Module for the Painlev\[EAcute] Property",
  FontSize->14,
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]], "Text"]
}, Closed]],

Cell[TextData[{
  StyleBox["Background",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "\n\n\tIf you are tired of your Runge-Kutta solution \"blowing up\" at a \
singularity, then this module could help remedy the situation. \n\n",
  StyleBox["Definition (",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["Singularity",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/Singularity.html"], None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[").",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  A",
    FontFamily->"Times New Roman"],
  " singularity of  ",
  Cell[BoxData[
      \(f[x]\)]],
  "  is a point  ",
  Cell[BoxData[
      \(x = c\)]],
  "  at which  ",
  Cell[BoxData[
      \(f[x]\)]],
  "   \"blows up\" or is not defined. \n\n",
  StyleBox["Example 1.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox["  T",
    FontFamily->"Times New Roman"],
  "he functions  ",
  Cell[BoxData[
      \(f[x]\  = \ sin[x]\/x, \ 1\/x, Cot[x], Csc[x], 
      1\/x\^2, \((Csc[x])\)\^2, Log[x]\)]],
  "  have singularities at the point  ",
  Cell[BoxData[
      \(x = 0\)]],
  ".  \n",
  StyleBox["T",
    FontFamily->"Times New Roman"],
  "he functions  ",
  Cell[BoxData[
      \(f[x]\  = \ Tan[x], Sec[x], \((Sec[x])\)\^2\)]],
  "  have singularities at the point  ",
  Cell[BoxData[
      \(x = \[Pi]\/2\)]],
  ".  "
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 1.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40005n0000Zb000`400?l0
0000o`00003oo`3ooomo0?ooo`000P3ooooo000007/000000P3oool00080
oooo00<000000?ooo`3oool0N@3oool00`000000oooo0?ooo`3j0?ooo`40
00000@3oool10?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`030000
003oool0oooo0?X0oooo0@0000010?ooo`40oooo00020?ooo`030000003o
ool0oooo07T0oooo00<000000?ooo`3oool0nP3oool100000040oooo0@3o
ool00080oooo00<000000?ooo`3oool0N@3oool00`000000oooo0?ooo`3j
0?ooo`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`0<0?oo
o`@000002@3oool4000002T0oooo100000040?ooo`@000002@3oool40000
01X0oooo00<000000?ooo`3oool0303oool4000000T0oooo1000000Y0?oo
o`@00000103oool4000000T0oooo1000002K0?ooo`4000000@3oool10?oo
o`000P3oool00`000000oooo0?ooo`0<0?ooo`8000003@3oool2000002`0
oooo0P0000030?ooo`8000003@3oool2000001X0oooo00<000000?ooo`3o
ool0303oool2000000d0oooo0P00000/0?ooo`8000000`3oool2000000d0
oooo0P00002K0?ooo`4000000@3oool10?ooo`000P3oool00`000000oooo
0?ooo`040?ooo`D000000`3oool2000000<0oooo0`000000103oool00000
0000000000030?ooo`8000006@3oool700000080oooo100000030?ooo`80
000000<0oooo0000000000000`3oool2000000<0oooo0`000000103oool0
00000000000000030?ooo`8000006P3oool00`000000oooo0?ooo`040?oo
o`D000000`3oool2000000D0oooo0`0000050?ooo`8000006@3oool70000
0080oooo100000030?ooo`80000000<0oooo0000000000000`3oool20000
00D0oooo0`0000050?ooo`8000008P3oool2000000030?ooo`0000000000
07@0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo00D0
oooo0P0000050?ooo`800000103oool2000000030?ooo`000000000000@0
oooo0P00000:0?ooo`<000000P3oool3000000P0oooo0P0000030?ooo`04
0000003oool0000000000080oooo0P000000103oool000000000003oool3
000000<0oooo0P0000040?ooo`80000000<0oooo000000000000103oool2
000001X0oooo00<000000?ooo`3oool01@3oool2000000D0oooo0P000004
0?ooo`80000000<0oooo000000000000103oool2000000T0oooo0`000002
0?ooo`<000002@3oool2000000<0oooo00@000000?ooo`00000000000P3o
ool2000000040?ooo`00000000000?ooo`<000000`3oool2000000@0oooo
0P0000000`3oool00000000000040?ooo`8000002@3oool300000080oooo
0`00000@0?ooo`040000003oool0oooo00000080oooo00<000000?ooo`3o
ool0L@3oool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0
1@3oool2000000D0oooo0P0000050?ooo`<000001@3oool2000001X0oooo
0P0000030?ooo`040000003oool0000000000080oooo0P0000000`3oool0
0000000000020?ooo`8000000`3oool2000000D0oooo0`0000050?ooo`80
00006P3oool00`000000oooo0?ooo`050?ooo`8000001@3oool2000000@0
oooo0P0000000`3oool00000000000040?ooo`8000006P3oool2000000<0
oooo00@000000?ooo`00000000000P3oool2000000030?ooo`0000000000
0080oooo0P0000030?ooo`800000103oool2000000030?ooo`0000000000
00@0oooo0P00000J0?ooo`D000000P3oool010000000oooo0?ooo`000002
0?ooo`030000003oool0oooo0740oooo0@0000010?ooo`40oooo00020?oo
o`030000003oool0oooo00D0oooo0P0000050?ooo`8000001@3oool30000
00D0oooo0P00000:0?ooo`<000000P3oool3000000P0oooo0P0000050?oo
o`8000000P3oool2000000030?ooo`00000000000080oooo0P0000030?oo
o`8000001@3oool3000000D0oooo0P00000J0?ooo`030000003oool0oooo
00D0oooo0P0000050?ooo`800000103oool2000000030?ooo`0000000000
00@0oooo0P0000090?ooo`<000000P3oool3000000T0oooo0P0000050?oo
o`8000000P3oool2000000030?ooo`00000000000080oooo0P0000030?oo
o`800000103oool2000000030?ooo`000000000000@0oooo0P0000090?oo
o`<000000P3oool300000100oooo00@000000?ooo`3oool000000P3oool0
0`000000oooo0?ooo`1a0?ooo`4000000@3oool10?ooo`000P3oool00`00
0000oooo0?ooo`050?ooo`8000001@3oool2000000@0oooo0P0000000`3o
ool00000000000040?ooo`8000006P3oool2000000D0oooo0P0000020?oo
o`80000000@0oooo000000000000oooo0`0000030?ooo`800000103oool2
000000030?ooo`000000000000@0oooo0P00000J0?ooo`030000003oool0
oooo00D0oooo0P0000050?ooo`800000103oool2000000030?ooo`000000
000000@0oooo0P00000J0?ooo`8000001@3oool200000080oooo0P000000
103oool000000000003oool3000000<0oooo0P0000040?ooo`80000000<0
oooo000000000000103oool200000280oooo0P0000000`3oool000000000
001d0?ooo`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`04
0?ooo`D000000`3oool2000000<0oooo0`000000103oool0000000000000
00030?ooo`8000006P3oool2000000H0oooo100000030?ooo`80000000@0
oooo00000000000000000P3oool2000000<0oooo0`000000103oool00000
0000000000030?ooo`8000006P3oool00`000000oooo0?ooo`040?ooo`D0
00000`3oool2000000@0oooo0P0000000`3oool00000000000040?ooo`80
00006P3oool2000000H0oooo100000030?ooo`80000000@0oooo00000000
000000000P3oool2000000@0oooo0P0000000`3oool00000000000040?oo
o`800000V`3oool100000040oooo0@3oool00080oooo00<000000?ooo`3o
ool01@3oool2000000D0oooo0P00000=0?ooo`8000006P3oool2000001D0
oooo0P00000=0?ooo`8000006P3oool00`000000oooo0?ooo`050?ooo`80
00001@3oool2000000@0oooo0P0000000`3oool00000000000040?ooo`80
00006P3oool2000001D0oooo0P0000040?ooo`80000000<0oooo00000000
0000103oool2000009/0oooo0@0000010?ooo`40oooo00020?ooo`030000
003oool0oooo00H0oooo0`0000030?ooo`@000002@3oool4000001T0oooo
1000000D0?ooo`@000002@3oool4000001X0oooo00<000000?ooo`3oool0
1P3oool3000000<0oooo100000030?ooo`<000000`3oool4000001T0oooo
1000000D0?ooo`@000000`3oool3000000<0oooo1000002K0?ooo`400000
0@3oool10?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`030000003o
ool0oooo0?X0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0
oooo07T0oooo00<000000?ooo`3oool0nP3oool100000040oooo0@3oool0
0080oooo00<000000?ooo`3oool0N@3oool00`000000oooo0?ooo`3j0?oo
o`4000000@3oool10?ooo`000P3ooooo000007/000000P3oool00080oooo
00<000000?ooo`3oool0N@3oool00`000000oooo0?ooo`3j0?ooo`400000
0@3oool10?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`030000003o
ool0oooo0?X0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0
oooo07T0oooo00<000000?ooo`3oool0nP3oool100000040oooo0@3oool0
0080oooo00<000000?ooo`3oool0303oool4000000T0oooo1000000M0?oo
o`800000603oool4000000T0oooo100000030?ooo`8000003`3oool00`00
0000oooo0?ooo`0<0?ooo`@000002@3oool4000001d0oooo0P00000H0?oo
o`@000002@3oool4000000<0oooo0P00000e0?ooo`D00000B@3oool50000
00P0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo00`0
oooo0P00000=0?ooo`800000703oool2000001T0oooo0P00000=0?ooo`80
0000103oool2000000h0oooo00<000000?ooo`3oool0303oool2000000d0
oooo0P00000L0?ooo`8000006@3oool2000000d0oooo0P0000040?ooo`80
0000=@3oool2000004d0oooo0P0000090?ooo`4000000@3oool10?ooo`00
0P3oool00`000000oooo0?ooo`040?ooo`D000000`3oool2000000<0oooo
0`000000103oool000000000000000030?ooo`800000703oool2000000@0
oooo0`0000020?ooo`D000000`3oool4000000@0oooo0P0000030?ooo`<0
000000@0oooo00000000000000000`3oool2000000@0oooo0P00000>0?oo
o`030000003oool0oooo00@0oooo1@0000030?ooo`8000001@3oool30000
00D0oooo0P00000L0?ooo`800000103oool300000080oooo1@0000030?oo
o`@00000103oool2000000D0oooo0`0000050?ooo`800000103oool20000
0280oooo0`0000030?ooo`@0000000L0oooo00000000000000000?ooo`00
0000oooo00@0000000<0oooo0000000000000P3oool600000080oooo1000
00020?ooo`<0000000<0oooo0000000000001`0000001@3oool000000000
00000000oooo00<0000000<0oooo0000000000000`0000000`3oool00000
00000004000000050?ooo`00000000000000003oool02@0000030?ooo`<0
0000103oool2000000T0oooo0@0000010?ooo`40oooo00020?ooo`030000
003oool0oooo00D0oooo0P0000050?ooo`800000103oool2000000030?oo
o`000000000000@0oooo0P0000090?ooo`<000000P3oool3000000X0oooo
0P0000040?ooo`8000000P3oool010000000oooo0000000000020?ooo`80
000000<0oooo0000000000000`3oool010000000oooo0?ooo`3oool20000
00@0oooo0P0000000`3oool00000000000040?ooo`8000001@3oool20000
00d0oooo00<000000?ooo`3oool01@3oool2000000D0oooo0P0000040?oo
o`80000000<0oooo000000000000103oool2000000X0oooo0`0000020?oo
o`<000002@3oool2000000@0oooo0P0000020?ooo`040000003oool00000
00000080oooo0P0000000`3oool00000000000030?ooo`040000003oool0
oooo0?ooo`800000103oool2000000030?ooo`000000000000@0oooo0P00
00050?ooo`8000003`3oool300000080oooo0`0000090?ooo`8000000P3o
ool010000000oooo0000000000020?ooo`80000000H0oooo000000000000
oooo0000003oool5000000030?ooo`000000000000<0oooo0P0000030?oo
o`8000000`3oool00`000000oooo0?ooo`02000000030?ooo`0000000000
00<0oooo0P0000040?ooo`80000000<0oooo0000000000000`3oool20000
00D0oooo0P0000040?ooo`80000000<0oooo0000000000000`3oool20000
00@0oooo0P0000020?ooo`040000003oool0oooo0?ooo`<00000203oool1
00000040oooo0@3oool00080oooo00<000000?ooo`3oool01@3oool20000
00D0oooo0P0000050?ooo`<000001@3oool2000001/0oooo0P0000030?oo
o`8000001`3oool4000000030?ooo`000000000000L0oooo0P0000050?oo
o`<000001@3oool2000000D0oooo0P00000=0?ooo`030000003oool0oooo
00D0oooo0P0000050?ooo`800000103oool2000000030?ooo`0000000000
00@0oooo0P00000K0?ooo`8000000`3oool2000000L0oooo100000000`3o
ool00000000000070?ooo`800000103oool2000000030?ooo`0000000000
00@0oooo0P0000050?ooo`8000007`3oool2000000D0oooo0P0000020?oo
o`80000000H0oooo000000000000oooo0000003oool400000080oooo0P00
00030?ooo`8000000`3oool2000000L0oooo0`0000040?ooo`800000103o
ool2000000030?ooo`000000000000<0oooo0P0000050?ooo`800000103o
ool2000000030?ooo`000000000000<0oooo0P0000040?ooo`8000001P3o
ool3000000P0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0
oooo00D0oooo0P0000050?ooo`8000001@3oool3000000D0oooo0P000009
0?ooo`<000000P3oool3000000X0oooo0P0000030?ooo`8000001@3oool4
000000<0oooo0P0000070?ooo`8000001@3oool3000000D0oooo0P000005
0?ooo`8000003@3oool00`000000oooo0?ooo`050?ooo`8000001@3oool2
000000@0oooo0P0000000`3oool00000000000040?ooo`8000002P3oool3
00000080oooo0`0000090?ooo`8000000`3oool2000000D0oooo10000003
0?ooo`8000001`3oool2000000@0oooo0P0000000`3oool0000000000004
0?ooo`8000001@3oool2000000l0oooo0`0000020?ooo`<00000203oool2
000000D0oooo0P0000020?ooo`80000000H0oooo000000000000oooo0000
003oool400000080oooo0P0000030?ooo`8000000`3oool6000000<0oooo
0`0000040?ooo`800000103oool2000000030?ooo`000000000000<0oooo
0P0000050?ooo`800000103oool2000000030?ooo`000000000000<0oooo
0P0000040?ooo`8000001@3oool2000000030?ooo`000000000000L0oooo
0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo00D0oooo0P00
00050?ooo`800000103oool2000000030?ooo`000000000000@0oooo0P00
000K0?ooo`8000000`3oool2000000D0oooo0P0000020?ooo`80000000<0
oooo0000000000000`3oool010000000oooo0?ooo`3oool2000000@0oooo
0P0000000`3oool00000000000040?ooo`8000001@3oool2000000d0oooo
00<000000?ooo`3oool01@3oool2000000D0oooo0P0000040?ooo`800000
00<0oooo000000000000103oool2000001/0oooo0P0000030?ooo`800000
1@3oool200000080oooo0P0000000`3oool00000000000030?ooo`040000
003oool0oooo0?ooo`800000103oool2000000030?ooo`000000000000@0
oooo0P0000050?ooo`8000007`3oool2000000D0oooo0P0000020?ooo`80
000000H0oooo000000000000oooo0000003oool5000000030?ooo`000000
000000<0oooo0P0000030?ooo`8000000P3oool200000080oooo0P000000
0`3oool00000000000030?ooo`800000103oool2000000030?ooo`000000
000000<0oooo0P0000050?ooo`800000103oool2000000030?ooo`000000
000000<0oooo0P0000040?ooo`8000001@3oool2000000030?ooo`000000
000000L0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo
00@0oooo1@0000030?ooo`8000000`3oool3000000040?ooo`0000000000
000000<0oooo0P00000L0?ooo`8000000P3oool2000000<0oooo00<00000
0?ooo`3oool01@0000020?ooo`D000000`3oool2000000<0oooo0`000000
103oool000000000000000030?ooo`800000103oool2000000<0oooo1000
00070?ooo`030000003oool0oooo00@0oooo1@0000030?ooo`800000103o
ool2000000030?ooo`000000000000@0oooo0P00000L0?ooo`8000000P3o
ool2000000<0oooo00<000000?ooo`3oool01@0000020?ooo`D000000`3o
ool2000000@0oooo0P0000000`3oool00000000000040?ooo`800000103o
ool2000000<0oooo1000000I0?ooo`8000000`3oool00`000000oooo0?oo
o`04000000030?ooo`000000000000P0000000<0oooo000000000000103o
ool2000000@0oooo100000020?ooo`<0000000@0oooo0000000000000000
0P3oool2000000<0oooo1@0000030?ooo`D0000000<0oooo000000000000
0P0000030?ooo`D000000P3oool4000000<0oooo1@0000020?ooo`<00000
00@0oooo00000000000000001P3oool100000040oooo0@3oool00080oooo
00<000000?ooo`3oool01@3oool2000000D0oooo0P00000=0?ooo`800000
703oool2000000<0oooo0P0000020?ooo`030000003oool0oooo00l0oooo
0P00000=0?ooo`800000103oool2000000@0oooo00<000000?ooo`3oool0
1`3oool00`000000oooo0?ooo`050?ooo`8000001@3oool2000000@0oooo
0P0000000`3oool00000000000040?ooo`800000703oool2000000<0oooo
0P0000020?ooo`030000003oool0oooo00l0oooo0P0000040?ooo`800000
00<0oooo000000000000103oool2000000@0oooo0P0000040?ooo`030000
003oool0oooo01X0oooo0P0000020?ooo`030000003oool0oooo01H0oooo
0P00000C0?ooo`800000303oool2000001T0oooo0P00000A0?ooo`400000
0@3oool10?ooo`000P3oool00`000000oooo0?ooo`060?ooo`<000000`3o
ool4000000T0oooo1000000M0?ooo`8000000`3oool400000140oooo1000
00090?ooo`@000000`3oool2000000H0oooo00<000000?ooo`3oool01P3o
ool00`000000oooo0?ooo`060?ooo`<000000`3oool4000000<0oooo0`00
00030?ooo`@000007@3oool2000000<0oooo1000000A0?ooo`@000000`3o
ool3000000<0oooo100000030?ooo`8000001P3oool00`000000oooo0?oo
o`0J0?ooo`@000005P3oool400000140oooo1P00000;0?ooo`<000000`3o
ool2000000`0oooo0P0000040?ooo`8000004@3oool100000040oooo0@3o
ool00080oooo00<000000?ooo`3oool0L@3oool00`000000oooo0?ooo`05
0?ooo`030000003oool0oooo0740oooo00<000000?ooo`3oool0QP3oool1
00000040oooo0@3oool00080oooo00<000000?ooo`3oool0KP3oool01000
0000oooo0?ooo`0000070?ooo`030000003oool0oooo06h0oooo00@00000
0?ooo`3oool00000R03oool100000040oooo0@3oool00080oooo00<00000
0?ooo`3oool0K`3oool2000000P0oooo00<000000?ooo`3oool0K`3oool2
000008T0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo
07T0oooo00<000000?ooo`3oool0nP3oool100000040oooo0@3oool00080
oooo00<000000?ooo`3oool0N@3oool00`000000oooo0?ooo`3j0?ooo`40
00000@3oool10?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`030000
003oool0oooo0?X0oooo0@0000010?ooo`40oooo00020?ooool00000N`00
00020?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0
oooo0?X0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo
07T0oooo00<000000?ooo`3oool0nP3oool100000040oooo0@3oool00080
oooo00<000000?ooo`3oool0N@3oool00`000000oooo0?ooo`3j0?ooo`40
00000@3oool10?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`030000
003oool0oooo0?X0oooo0@0000010?ooo`40oooo00020?ooo`030000003o
ool0oooo03X0oooo0P0000000`3oool000000000000j0?ooo`030000003o
ool0oooo03X0oooo0P00002n0?ooo`4000000@3oool10?ooo`000P3oool0
0`000000oooo0?ooo`0k0?ooo`<00000>`3oool00`000000oooo0?ooo`0i
0?ooo`040000003oool0oooo00000;d0oooo0@0000010?ooo`40oooo0002
0?ooo`030000003oool0oooo03/0oooo00@000000?ooo`000000oooo1000
000f0?ooo`030000003oool0oooo03T0oooo00D000000?ooo`3oool00000
0?ooo`0400000;P0oooo0@0000010?ooo`40oooo00020?ooo`030000003o
ool0oooo03X0oooo0P0000001@3oool000000000003oool0000003P0oooo
00<000000?ooo`3oool0>@3oool010000000oooo0?ooo`0000020?ooo`03
0000003oool0oooo0;P0oooo0@0000010?ooo`40oooo00020?ooo`030000
003oool0oooo0440oooo00<000000?ooo`3oool0=@3oool00`000000oooo
0?ooo`0i0?ooo`040000003oool0oooo000000<0oooo00<000000?ooo`3o
ool0]`3oool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0
3@3oool4000000T0oooo1000000T0?ooo`030000003oool0oooo03@0oooo
00<000000?ooo`3oool0303oool4000000T0oooo1000000M0?ooo`800000
1@3oool00`000000oooo0?ooo`0^0?ooo`D00000B@3oool5000003D0oooo
0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo00d0oooo0P00
000=0?ooo`8000008@3oool010000000oooo0?ooo`00000f0?ooo`030000
003oool0oooo00`0oooo0P00000=0?ooo`8000008@3oool010000000oooo
0?ooo`00000a0?ooo`800000C@3oool2000003H0oooo0@0000010?ooo`40
oooo00020?ooo`030000003oool0oooo00D0oooo1@0000030?ooo`800000
0`3oool3000000040?ooo`0000000000000000<0oooo0P00000R0?ooo`80
0000=`3oool00`000000oooo0?ooo`040?ooo`D000000`3oool2000000D0
oooo0`0000050?ooo`8000008P3oool2000001l0oooo0`0000030?ooo`@0
000000L0oooo00000000000000000?ooo`000000oooo00@0000000<0oooo
0000000000000P3oool600000080oooo100000020?ooo`<0000000<0oooo
0000000000001`0000001@3oool00000000000000000oooo00<0000000<0
oooo0000000000000`0000000`3oool0000000000004000000050?ooo`00
000000000000003oool02@0000030?ooo`<00000103oool2000003H0oooo
0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo00H0oooo0P00
00050?ooo`800000103oool2000000030?ooo`000000000000@0oooo0P00
00090?ooo`<000000P3oool3000004X0oooo00<000000?ooo`3oool01@3o
ool2000000D0oooo0P0000040?ooo`80000000<0oooo000000000000103o
ool2000000T0oooo0`0000020?ooo`<000008@3oool300000080oooo0`00
00080?ooo`8000000P3oool010000000oooo0000000000020?ooo`800000
00H0oooo000000000000oooo0000003oool5000000030?ooo`0000000000
00<0oooo0P0000030?ooo`8000000`3oool00`000000oooo0?ooo`020000
00030?ooo`000000000000<0oooo0P0000040?ooo`80000000<0oooo0000
000000000`3oool2000000D0oooo0P0000040?ooo`80000000<0oooo0000
000000000`3oool2000000@0oooo0P0000020?ooo`040000003oool0oooo
0?ooo`<00000=@3oool100000040oooo0@3oool00080oooo00<000000?oo
o`3oool01P3oool2000000D0oooo0P0000050?ooo`<000001@3oool20000
01/0oooo3@00000c0?ooo`030000003oool0oooo00D0oooo0P0000050?oo
o`800000103oool2000000030?ooo`000000000000@0oooo0P00000K0?oo
o`d000006@3oool2000000D0oooo0P0000020?ooo`80000000H0oooo0000
00000000oooo0000003oool400000080oooo0P0000030?ooo`8000000`3o
ool2000000L0oooo0`0000040?ooo`800000103oool2000000030?ooo`00
0000000000<0oooo0P0000050?ooo`800000103oool2000000030?ooo`00
0000000000<0oooo0P0000040?ooo`8000001P3oool3000003D0oooo0@00
00010?ooo`40oooo00020?ooo`030000003oool0oooo00H0oooo0P000005
0?ooo`8000001@3oool3000000D0oooo0P0000090?ooo`<000000P3oool3
000004X0oooo00<000000?ooo`3oool01@3oool2000000D0oooo0P000004
0?ooo`80000000<0oooo000000000000103oool2000000T0oooo0`000002
0?ooo`<000008@3oool300000080oooo0`0000070?ooo`8000001@3oool2
00000080oooo0P0000001P3oool000000000003oool000000?ooo`@00000
0P3oool2000000<0oooo0P0000030?ooo`H000000`3oool3000000@0oooo
0P0000040?ooo`80000000<0oooo0000000000000`3oool2000000D0oooo
0P0000040?ooo`80000000<0oooo0000000000000`3oool2000000@0oooo
0P0000050?ooo`80000000<0oooo000000000000=03oool100000040oooo
0@3oool00080oooo00<000000?ooo`3oool01P3oool2000000D0oooo0P00
00040?ooo`80000000<0oooo000000000000103oool2000005/0oooo00<0
00000?ooo`3oool01@3oool2000000D0oooo0P0000040?ooo`80000000<0
oooo000000000000103oool200000440oooo0P0000050?ooo`8000000P3o
ool2000000060?ooo`00000000000?ooo`000000oooo1@0000000`3oool0
0000000000030?ooo`8000000`3oool200000080oooo0P0000020?ooo`80
000000<0oooo0000000000000`3oool2000000@0oooo0P0000000`3oool0
0000000000030?ooo`8000001@3oool2000000@0oooo0P0000000`3oool0
0000000000030?ooo`800000103oool2000000D0oooo0P0000000`3oool0
00000000000d0?ooo`4000000@3oool10?ooo`000P3oool00`000000oooo
0?ooo`050?ooo`D000000`3oool2000000<0oooo0`000000103oool00000
0000000000030?ooo`8000007`3oool5000003L0oooo00<000000?ooo`3o
ool0103oool5000000<0oooo0P0000040?ooo`80000000<0oooo00000000
0000103oool2000001l0oooo1@00000M0?ooo`8000000`3oool00`000000
oooo0?ooo`04000000030?ooo`000000000000P0000000<0oooo00000000
0000103oool2000000@0oooo100000020?ooo`<0000000@0oooo00000000
000000000P3oool2000000<0oooo1@0000030?ooo`D0000000<0oooo0000
000000000P0000030?ooo`D000000P3oool4000000<0oooo1@0000020?oo
o`<0000000@0oooo0000000000000000<`3oool100000040oooo0@3oool0
0080oooo00<000000?ooo`3oool01P3oool2000000D0oooo0P00000=0?oo
o`8000008@3oool00`000000oooo0?ooo`0g0?ooo`030000003oool0oooo
00D0oooo0P0000050?ooo`800000103oool2000000030?ooo`0000000000
00@0oooo0P00000Q0?ooo`030000003oool0oooo01h0oooo0P0000020?oo
o`030000003oool0oooo01H0oooo0P00000C0?ooo`800000303oool20000
01T0oooo0P00000n0?ooo`4000000@3oool10?ooo`000P3oool00`000000
oooo0?ooo`070?ooo`<000000`3oool4000000T0oooo1000000Q0?ooo`03
0000003oool0oooo03L0oooo00<000000?ooo`3oool01P3oool3000000<0
oooo100000030?ooo`<000000`3oool400000240oooo00<000000?ooo`3o
ool07`3oool4000001H0oooo1000000A0?ooo`H000002`3oool3000000<0
oooo0P00000<0?ooo`800000103oool2000003h0oooo0@0000010?ooo`40
oooo00020?ooo`030000003oool0oooo03l0oooo00<000000?ooo`3oool0
=`3oool00`000000oooo0?ooo`0n0?ooo`030000003oool0oooo0;T0oooo
0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo03l0oooo00<0
00000?ooo`3oool0=`3oool00`000000oooo0?ooo`0n0?ooo`030000003o
ool0oooo0;T0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0
oooo03d0oooo0`00000i0?ooo`030000003oool0oooo03`0oooo0`00002k
0?ooo`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`1i0?oo
o`030000003oool0oooo0?X0oooo0@0000010?ooo`40oooo00020?ooo`03
0000003oool0oooo07T0oooo00<000000?ooo`3oool0nP3oool100000040
oooo0@3oool00080oooo00<000000?ooo`3oool0N@3oool00`000000oooo
0?ooo`3j0?ooo`4000000@3oool10?ooo`000P3ooooo000007/000000P3o
ool00080oooo00<000000?ooo`3oool0N@3oool00`000000oooo0?ooo`3j
0?ooo`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`1i0?oo
o`030000003oool0oooo0?X0oooo0@0000010?ooo`40oooo00020?ooo`03
0000003oool0oooo07T0oooo00<000000?ooo`3oool0nP3oool100000040
oooo0@3oool00080oooo00<000000?ooo`3oool03@3oool4000000T0oooo
1000000`0?ooo`@000002@3oool4000001X0oooo00<000000?ooo`3oool0
303oool4000000T0oooo1000000`0?ooo`@000002@3oool4000002d0oooo
1@0000190?ooo`D00000703oool100000040oooo0@3oool00080oooo00<0
00000?ooo`3oool03@3oool2000000d0oooo0P00000`0?ooo`8000003@3o
ool2000001X0oooo00<000000?ooo`3oool0303oool2000000d0oooo0P00
000`0?ooo`8000003@3oool2000002h0oooo0P00001=0?ooo`8000007@3o
ool100000040oooo0@3oool00080oooo00<000000?ooo`3oool01@3oool5
000000<0oooo0P0000030?ooo`<0000000@0oooo00000000000000000`3o
ool2000001/0oooo0`0000020?ooo`D000000`3oool4000000@0oooo0P00
00030?ooo`<0000000@0oooo00000000000000000`3oool2000001X0oooo
00<000000?ooo`3oool0103oool5000000<0oooo0P0000050?ooo`<00000
1@3oool2000001/0oooo0`0000020?ooo`D000000`3oool4000000@0oooo
0P0000050?ooo`<000001@3oool2000001/0oooo0`0000030?ooo`@00000
00L0oooo00000000000000000?ooo`000000oooo00@0000000<0oooo0000
000000000P3oool600000080oooo100000020?ooo`<0000000<0oooo0000
000000001`0000001@3oool00000000000000000oooo00<0000000<0oooo
0000000000000`0000000`3oool0000000000004000000050?ooo`000000
00000000003oool02@0000030?ooo`<00000103oool2000001d0oooo0@00
00010?ooo`40oooo00020?ooo`030000003oool0oooo00H0oooo0P000005
0?ooo`800000103oool2000000030?ooo`000000000000@0oooo0P000009
0?ooo`<000000P3oool3000000T0oooo0P0000020?ooo`040000003oool0
000000000080oooo0P0000000`3oool00000000000030?ooo`040000003o
ool0oooo0?ooo`800000103oool2000000030?ooo`000000000000@0oooo
0P00000J0?ooo`030000003oool0oooo00D0oooo0P0000050?ooo`800000
103oool2000000030?ooo`000000000000@0oooo0P0000090?ooo`<00000
0P3oool3000000T0oooo0P0000020?ooo`040000003oool0000000000080
oooo0P0000000`3oool00000000000030?ooo`040000003oool0oooo0?oo
o`800000103oool2000000030?ooo`000000000000@0oooo0P0000090?oo
o`<000000P3oool3000000T0oooo0P0000020?ooo`040000003oool00000
00000080oooo0P0000001P3oool000000000003oool000000?ooo`D00000
00<0oooo0000000000000`3oool2000000<0oooo0P0000030?ooo`030000
003oool0oooo0080000000<0oooo0000000000000`3oool2000000@0oooo
0P0000000`3oool00000000000030?ooo`8000001@3oool2000000@0oooo
0P0000000`3oool00000000000030?ooo`800000103oool200000080oooo
00@000000?ooo`3oool0oooo0`00000L0?ooo`4000000@3oool10?ooo`00
0P3oool00`000000oooo0?ooo`060?ooo`8000001@3oool2000000D0oooo
0`0000050?ooo`8000006@3oool2000000L0oooo100000000`3oool00000
000000070?ooo`8000001@3oool3000000D0oooo0P00000J0?ooo`030000
003oool0oooo00D0oooo0P0000050?ooo`800000103oool2000000030?oo
o`000000000000@0oooo0P00000I0?ooo`8000001`3oool4000000030?oo
o`000000000000L0oooo0P0000040?ooo`80000000<0oooo000000000000
103oool2000001T0oooo0P0000050?ooo`8000000P3oool2000000060?oo
o`00000000000?ooo`000000oooo100000020?ooo`8000000`3oool20000
00<0oooo0P0000070?ooo`<00000103oool2000000@0oooo0P0000000`3o
ool00000000000030?ooo`8000001@3oool2000000@0oooo0P0000000`3o
ool00000000000030?ooo`800000103oool2000000H0oooo0`00000L0?oo
o`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`060?ooo`80
00001@3oool2000000D0oooo0`0000050?ooo`8000002@3oool300000080
oooo0`0000080?ooo`8000001@3oool4000000<0oooo0P0000070?ooo`80
00001@3oool3000000D0oooo0P00000J0?ooo`030000003oool0oooo00D0
oooo0P0000050?ooo`800000103oool2000000030?ooo`000000000000@0
oooo0P0000090?ooo`<000000P3oool3000000P0oooo0P0000050?ooo`@0
00000`3oool2000000L0oooo0P0000040?ooo`80000000<0oooo00000000
0000103oool2000000T0oooo0`0000020?ooo`<00000203oool2000000D0
oooo0P0000020?ooo`80000000H0oooo000000000000oooo0000003oool4
00000080oooo0P0000030?ooo`8000000`3oool6000000<0oooo0`000004
0?ooo`800000103oool2000000030?ooo`000000000000<0oooo0P000005
0?ooo`800000103oool2000000030?ooo`000000000000<0oooo0P000004
0?ooo`8000001@3oool2000000030?ooo`000000000001/0oooo0@000001
0?ooo`40oooo00020?ooo`030000003oool0oooo00H0oooo0P0000050?oo
o`800000103oool2000000030?ooo`000000000000@0oooo0P00000I0?oo
o`8000001@3oool200000080oooo0P0000000`3oool00000000000030?oo
o`040000003oool0oooo0?ooo`800000103oool2000000030?ooo`000000
000000@0oooo0P00000J0?ooo`030000003oool0oooo00D0oooo0P000005
0?ooo`800000103oool2000000030?ooo`000000000000@0oooo0P00000I
0?ooo`8000001@3oool200000080oooo0P0000000`3oool0000000000003
0?ooo`040000003oool0oooo0?ooo`800000103oool2000000030?ooo`00
0000000000@0oooo0P00000I0?ooo`8000001@3oool200000080oooo0P00
00001P3oool000000000003oool000000?ooo`D0000000<0oooo00000000
00000`3oool2000000<0oooo0P0000020?ooo`8000000P3oool200000003
0?ooo`000000000000<0oooo0P0000040?ooo`80000000<0oooo00000000
00000`3oool2000000D0oooo0P0000040?ooo`80000000<0oooo00000000
00000`3oool2000000@0oooo0P0000050?ooo`80000000<0oooo00000000
00006`3oool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0
1@3oool5000000<0oooo0P0000030?ooo`<0000000@0oooo000000000000
00000`3oool2000001T0oooo0P0000030?ooo`030000003oool0oooo00D0
00000P3oool5000000<0oooo0P0000030?ooo`<0000000@0oooo00000000
000000000`3oool2000001X0oooo00<000000?ooo`3oool0103oool50000
00<0oooo0P0000040?ooo`80000000<0oooo000000000000103oool20000
01T0oooo0P0000030?ooo`030000003oool0oooo00D000000P3oool50000
00<0oooo0P0000040?ooo`80000000<0oooo000000000000103oool20000
01T0oooo0P0000030?ooo`030000003oool0oooo00@0000000<0oooo0000
00000000200000000`3oool00000000000040?ooo`800000103oool40000
0080oooo0`000000103oool000000000000000020?ooo`8000000`3oool5
000000<0oooo1@0000000`3oool0000000000002000000<0oooo1@000002
0?ooo`@000000`3oool500000080oooo0`000000103oool0000000000000
000J0?ooo`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`06
0?ooo`8000001@3oool2000000d0oooo0P00000J0?ooo`8000000P3oool0
0`000000oooo0?ooo`0?0?ooo`8000003@3oool2000001X0oooo00<00000
0?ooo`3oool01@3oool2000000D0oooo0P0000040?ooo`80000000<0oooo
000000000000103oool2000001X0oooo0P0000020?ooo`030000003oool0
oooo00l0oooo0P0000040?ooo`80000000<0oooo000000000000103oool2
000001X0oooo0P0000020?ooo`030000003oool0oooo01H0oooo0P00000C
0?ooo`800000303oool2000001T0oooo0P00000U0?ooo`4000000@3oool1
0?ooo`000P3oool00`000000oooo0?ooo`070?ooo`<000000`3oool40000
00T0oooo1000000K0?ooo`@000004@3oool4000000T0oooo1000000J0?oo
o`030000003oool0oooo00H0oooo0`0000030?ooo`@000000`3oool30000
00<0oooo1000000K0?ooo`@000004@3oool4000000<0oooo0`0000030?oo
o`@000006`3oool4000001H0oooo1000000A0?ooo`H000002`3oool30000
00<0oooo0P00000<0?ooo`800000103oool2000002D0oooo0@0000010?oo
o`40oooo00020?ooo`030000003oool0oooo07T0oooo00<000000?ooo`3o
ool0nP3oool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0
N@3oool00`000000oooo0?ooo`3j0?ooo`4000000@3oool10?ooo`000P3o
ool00`000000oooo0?ooo`1i0?ooo`030000003oool0oooo0?X0oooo0@00
00010?ooo`40oooo00020?ooool00000N`0000020?ooo`000P3oool00`00
0000oooo0?ooo`1i0?ooo`030000003oool0oooo0?X0oooo0@0000010?oo
o`40oooo00020?ooo`030000003oool0oooo07T0oooo00<000000?ooo`3o
ool0nP3oool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0
N@3oool00`000000oooo0?ooo`3j0?ooo`4000000@3oool10?ooo`000P3o
ool00`000000oooo0?ooo`0=0?ooo`@000002@3oool400000300oooo1000
00090?ooo`@000006P3oool00`000000oooo0?ooo`0<0?ooo`@000002@3o
ool400000300oooo100000090?ooo`@00000;@3oool5000004T0oooo1@00
000L0?ooo`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`0=
0?ooo`8000003@3oool200000300oooo0P00000=0?ooo`8000006P3oool0
0`000000oooo0?ooo`0<0?ooo`8000003@3oool200000300oooo0P00000=
0?ooo`800000;P3oool2000004d0oooo0P00000M0?ooo`4000000@3oool1
0?ooo`000P3oool00`000000oooo0?ooo`050?ooo`D000000`3oool20000
00<0oooo0`000000103oool000000000000000030?ooo`8000006`3oool3
000000<0oooo100000040?ooo`<00000103oool2000000<0oooo0`000000
103oool000000000000000030?ooo`8000006P3oool00`000000oooo0?oo
o`040?ooo`D000000`3oool2000000D0oooo0`0000050?ooo`8000006`3o
ool3000000<0oooo100000040?ooo`<00000103oool2000000D0oooo0`00
00050?ooo`8000006`3oool3000000<0oooo100000001`3oool000000000
00000000oooo0000003oool0100000000`3oool00000000000020?ooo`H0
00000P3oool400000080oooo0`0000000`3oool000000000000700000005
0?ooo`00000000000000003oool00`0000000`3oool00000000000030000
00030?ooo`000000000000@0000000D0oooo00000000000000000?ooo`09
000000<0oooo0`0000040?ooo`8000007@3oool100000040oooo0@3oool0
0080oooo00<000000?ooo`3oool01P3oool2000000D0oooo0P0000040?oo
o`80000000<0oooo000000000000103oool2000000T0oooo0`0000020?oo
o`<000002@3oool200000080oooo00@000000?ooo`00000000000P3oool2
00000080oooo0P0000020?ooo`040000003oool0oooo0?ooo`800000103o
ool2000000030?ooo`000000000000@0oooo0P00000J0?ooo`030000003o
ool0oooo00D0oooo0P0000050?ooo`800000103oool2000000030?ooo`00
0000000000@0oooo0P0000090?ooo`<000000P3oool3000000T0oooo0P00
00020?ooo`040000003oool0000000000080oooo0P0000020?ooo`800000
0P3oool010000000oooo0?ooo`3oool2000000@0oooo0P0000000`3oool0
0000000000040?ooo`8000002@3oool300000080oooo0`0000090?ooo`80
00000P3oool010000000oooo0000000000020?ooo`80000000H0oooo0000
00000000oooo0000003oool5000000030?ooo`000000000000<0oooo0P00
00030?ooo`8000000`3oool00`000000oooo0?ooo`02000000030?ooo`00
0000000000<0oooo0P0000040?ooo`80000000<0oooo0000000000000`3o
ool2000000D0oooo0P0000040?ooo`80000000<0oooo0000000000000`3o
ool2000000@0oooo0P0000020?ooo`040000003oool0oooo0?ooo`<00000
703oool100000040oooo0@3oool00080oooo00<000000?ooo`3oool01P3o
ool2000000D0oooo0P0000050?ooo`<000001@3oool2000001T0oooo0P00
00050?ooo`8000000P3oool200000080oooo0P0000060?ooo`8000001@3o
ool3000000D0oooo0P00000J0?ooo`030000003oool0oooo00D0oooo0P00
00050?ooo`800000103oool2000000030?ooo`000000000000@0oooo0P00
000I0?ooo`8000001@3oool200000080oooo0P0000020?ooo`8000001P3o
ool2000000@0oooo0P0000000`3oool00000000000040?ooo`8000006@3o
ool2000000D0oooo0P0000020?ooo`80000000H0oooo000000000000oooo
0000003oool400000080oooo0P0000030?ooo`8000000`3oool2000000L0
oooo0`0000040?ooo`800000103oool2000000030?ooo`000000000000<0
oooo0P0000050?ooo`800000103oool2000000030?ooo`000000000000<0
oooo0P0000040?ooo`8000001P3oool3000001`0oooo0@0000010?ooo`40
oooo00020?ooo`030000003oool0oooo00H0oooo0P0000050?ooo`800000
1@3oool3000000D0oooo0P0000090?ooo`<000000P3oool3000000P0oooo
0P0000050?ooo`8000000P3oool200000080oooo0P0000060?ooo`800000
1@3oool3000000D0oooo0P00000J0?ooo`030000003oool0oooo00D0oooo
0P0000050?ooo`800000103oool2000000030?ooo`000000000000@0oooo
0P0000090?ooo`<000000P3oool3000000P0oooo0P0000050?ooo`800000
0P3oool200000080oooo0P0000060?ooo`800000103oool2000000030?oo
o`000000000000@0oooo0P0000090?ooo`<000000P3oool3000000P0oooo
0P0000050?ooo`8000000P3oool2000000060?ooo`00000000000?ooo`00
0000oooo100000020?ooo`8000000`3oool2000000<0oooo1P0000030?oo
o`<00000103oool2000000@0oooo0P0000000`3oool00000000000030?oo
o`8000001@3oool2000000@0oooo0P0000000`3oool00000000000030?oo
o`800000103oool2000000D0oooo0P0000000`3oool000000000000K0?oo
o`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`060?ooo`80
00001@3oool2000000@0oooo0P0000000`3oool00000000000040?ooo`80
00006@3oool2000000D0oooo0P0000020?ooo`8000000P3oool2000000H0
oooo0P0000040?ooo`80000000<0oooo000000000000103oool2000001X0
oooo00<000000?ooo`3oool01@3oool2000000D0oooo0P0000040?ooo`80
000000<0oooo000000000000103oool2000001T0oooo0P0000050?ooo`80
00000P3oool200000080oooo0P0000060?ooo`800000103oool200000003
0?ooo`000000000000@0oooo0P00000I0?ooo`8000001@3oool200000080
oooo0P0000001P3oool000000000003oool000000?ooo`D0000000<0oooo
0000000000000`3oool2000000<0oooo0P0000020?ooo`8000000P3oool2
000000030?ooo`000000000000<0oooo0P0000040?ooo`80000000<0oooo
0000000000000`3oool2000000D0oooo0P0000040?ooo`80000000<0oooo
0000000000000`3oool2000000@0oooo0P0000050?ooo`80000000<0oooo
0000000000006`3oool100000040oooo0@3oool00080oooo00<000000?oo
o`3oool01@3oool5000000<0oooo0P0000030?ooo`<0000000@0oooo0000
0000000000000`3oool2000001T0oooo0P0000030?ooo`030000003oool0
oooo00@000000P3oool5000000@0oooo0P0000030?ooo`<0000000@0oooo
00000000000000000`3oool2000001X0oooo00<000000?ooo`3oool0103o
ool5000000<0oooo0P0000040?ooo`80000000<0oooo000000000000103o
ool2000001T0oooo0P0000030?ooo`030000003oool0oooo00@000000P3o
ool5000000@0oooo0P0000040?ooo`80000000<0oooo000000000000103o
ool2000001T0oooo0P0000030?ooo`030000003oool0oooo00@0000000<0
oooo000000000000200000000`3oool00000000000040?ooo`800000103o
ool400000080oooo0`000000103oool000000000000000020?ooo`800000
0`3oool5000000<0oooo1@0000000`3oool0000000000002000000<0oooo
1@0000020?ooo`@000000`3oool500000080oooo0`000000103oool00000
00000000000J0?ooo`4000000@3oool10?ooo`000P3oool00`000000oooo
0?ooo`060?ooo`8000001@3oool2000000d0oooo0P00000J0?ooo`800000
0P3oool00`000000oooo0?ooo`070?ooo`8000001P3oool2000000d0oooo
0P00000J0?ooo`030000003oool0oooo00D0oooo0P0000050?ooo`800000
103oool2000000030?ooo`000000000000@0oooo0P00000J0?ooo`800000
0P3oool00`000000oooo0?ooo`070?ooo`8000001P3oool2000000@0oooo
0P0000000`3oool00000000000040?ooo`8000006P3oool200000080oooo
00<000000?ooo`3oool05P3oool2000001<0oooo0P00000<0?ooo`800000
6@3oool2000002D0oooo0@0000010?ooo`40oooo00020?ooo`030000003o
ool0oooo00L0oooo0`0000030?ooo`@000002@3oool4000001/0oooo1000
00090?ooo`8000001P3oool4000000T0oooo1000000J0?ooo`030000003o
ool0oooo00H0oooo0`0000030?ooo`@000000`3oool3000000<0oooo1000
000K0?ooo`@000002@3oool2000000H0oooo100000030?ooo`<000000`3o
ool4000001/0oooo1000000F0?ooo`@000004@3oool6000000/0oooo0`00
00030?ooo`800000303oool2000000@0oooo0P00000U0?ooo`4000000@3o
ool10?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0
oooo0?X0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo
07T0oooo00<000000?ooo`3oool0nP3oool100000040oooo0@3oool00080
oooo00<000000?ooo`3oool0N@3oool00`000000oooo0?ooo`3j0?ooo`40
00000@3oool10?ooo`000P3ooooo000007/000000P3oool00080oooo00<0
00000?ooo`3oool0N@3oool00`000000oooo0?ooo`3j0?ooo`4000000@3o
ool10?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0
oooo0?X0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo
07T0oooo00<000000?ooo`3oool0nP3oool100000040oooo0@3oool00080
oooo00<000000?ooo`3oool0N@3oool00`000000oooo0?ooo`3j0?ooo`40
00000@3oool10?ooo`000P3oool00`000000oooo0?ooo`0j0?ooo`800000
00<0oooo000000000000>P3oool00`000000oooo0?ooo`0l0?ooo`800000
_03oool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0>`3o
ool3000003/0oooo00<000000?ooo`3oool0>`3oool010000000oooo0?oo
o`00002k0?ooo`4000000@3oool10?ooo`000P3oool00`000000oooo0?oo
o`0k0?ooo`030000003oool0000003/0oooo00<000000?ooo`3oool0>`3o
ool010000000oooo0?ooo`00002k0?ooo`4000000@3oool10?ooo`000P3o
ool00`000000oooo0?ooo`0j0?ooo`80000000<0oooo000000000000>P3o
ool00`000000oooo0?ooo`0k0?ooo`040000003oool0oooo00000;/0oooo
0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo07T0oooo00<0
00000?ooo`3oool0>`3oool010000000oooo0?ooo`00002k0?ooo`400000
0@3oool10?ooo`000P3oool00`000000oooo0?ooo`0<0?ooo`@000002@3o
ool4000005`0oooo00<000000?ooo`3oool03@3oool4000000T0oooo1000
000N0?ooo`800000<`3oool5000004T0oooo1@00000f0?ooo`4000000@3o
ool10?ooo`000P3oool00`000000oooo0?ooo`0<0?ooo`8000003@3oool2
000005`0oooo00<000000?ooo`3oool03@3oool2000000d0oooo0P00001D
0?ooo`800000C@3oool2000003L0oooo0@0000010?ooo`40oooo00020?oo
o`030000003oool0oooo00@0oooo1@0000030?ooo`8000000`3oool30000
00040?ooo`0000000000000000<0oooo0P00001L0?ooo`030000003oool0
oooo00D0oooo1@0000030?ooo`8000001@3oool3000000D0oooo0P000011
0?ooo`<000000`3oool4000000070?ooo`00000000000000003oool00000
0?ooo`04000000030?ooo`00000000000080oooo1P0000020?ooo`@00000
0P3oool3000000030?ooo`000000000000L0000000D0oooo000000000000
00000?ooo`03000000030?ooo`000000000000<0000000<0oooo00000000
0000100000001@3oool00000000000000000oooo00T000000`3oool30000
00@0oooo0P00000g0?ooo`4000000@3oool10?ooo`000P3oool00`000000
oooo0?ooo`050?ooo`8000001@3oool2000000@0oooo0P0000000`3oool0
0000000000040?ooo`8000002P3oool300000080oooo0`00001:0?ooo`03
0000003oool0oooo00H0oooo0P0000050?ooo`800000103oool200000003
0?ooo`000000000000@0oooo0P0000090?ooo`<000000P3oool3000001l0
oooo0`0000020?ooo`<00000203oool200000080oooo00@000000?ooo`00
000000000P3oool2000000060?ooo`00000000000?ooo`000000oooo1@00
00000`3oool00000000000030?ooo`8000000`3oool2000000<0oooo00<0
00000?ooo`3oool00P0000000`3oool00000000000030?ooo`800000103o
ool2000000030?ooo`000000000000<0oooo0P0000050?ooo`800000103o
ool2000000030?ooo`000000000000<0oooo0P0000040?ooo`8000000P3o
ool010000000oooo0?ooo`3oool3000003H0oooo0@0000010?ooo`40oooo
00020?ooo`030000003oool0oooo00D0oooo0P0000050?ooo`8000001@3o
ool3000000D0oooo0P00000K0?ooo`P00000>@3oool00`000000oooo0?oo
o`060?ooo`8000001@3oool2000000@0oooo0P0000000`3oool000000000
00040?ooo`8000006`3oool8000001`0oooo0P0000050?ooo`8000000P3o
ool2000000060?ooo`00000000000?ooo`000000oooo100000020?ooo`80
00000`3oool2000000<0oooo0P0000070?ooo`<00000103oool2000000@0
oooo0P0000000`3oool00000000000030?ooo`8000001@3oool2000000@0
oooo0P0000000`3oool00000000000030?ooo`800000103oool2000000H0
oooo0`00000f0?ooo`4000000@3oool10?ooo`000P3oool00`000000oooo
0?ooo`050?ooo`8000001@3oool2000000D0oooo0`0000050?ooo`800000
2P3oool300000080oooo0`00001:0?ooo`030000003oool0oooo00H0oooo
0P0000050?ooo`800000103oool2000000030?ooo`000000000000@0oooo
0P0000090?ooo`<000000P3oool3000001l0oooo0`0000020?ooo`<00000
1`3oool2000000D0oooo0P0000020?ooo`80000000H0oooo000000000000
oooo0000003oool400000080oooo0P0000030?ooo`8000000`3oool60000
00<0oooo0`0000040?ooo`800000103oool2000000030?ooo`0000000000
00<0oooo0P0000050?ooo`800000103oool2000000030?ooo`0000000000
00<0oooo0P0000040?ooo`8000001@3oool2000000030?ooo`0000000000
03D0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo00D0
oooo0P0000050?ooo`800000103oool2000000030?ooo`000000000000@0
oooo0P00001L0?ooo`030000003oool0oooo00H0oooo0P0000050?ooo`80
0000103oool2000000030?ooo`000000000000@0oooo0P00000o0?ooo`80
00001@3oool200000080oooo0P0000001P3oool000000000003oool00000
0?ooo`D0000000<0oooo0000000000000`3oool2000000<0oooo0P000002
0?ooo`8000000P3oool2000000030?ooo`000000000000<0oooo0P000004
0?ooo`80000000<0oooo0000000000000`3oool2000000D0oooo0P000004
0?ooo`80000000<0oooo0000000000000`3oool2000000@0oooo0P000005
0?ooo`80000000<0oooo000000000000=@3oool100000040oooo0@3oool0
0080oooo00<000000?ooo`3oool0103oool5000000<0oooo0P0000030?oo
o`<0000000@0oooo00000000000000000`3oool2000001d0oooo1@00000j
0?ooo`030000003oool0oooo00D0oooo1@0000030?ooo`800000103oool2
000000030?ooo`000000000000@0oooo0P00000M0?ooo`D000007@3oool2
000000<0oooo00<000000?ooo`3oool0100000000`3oool0000000000008
000000030?ooo`000000000000@0oooo0P0000040?ooo`@000000P3oool3
000000040?ooo`000000000000000080oooo0P0000030?ooo`D000000`3o
ool5000000030?ooo`0000000000008000000`3oool500000080oooo1000
00030?ooo`D000000P3oool3000000040?ooo`0000000000000003@0oooo
0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo00D0oooo0P00
00050?ooo`8000003@3oool2000001l0oooo00<000000?ooo`3oool0>P3o
ool00`000000oooo0?ooo`060?ooo`8000001@3oool2000000@0oooo0P00
00000`3oool00000000000040?ooo`8000007`3oool00`000000oooo0?oo
o`0N0?ooo`8000000P3oool00`000000oooo0?ooo`0F0?ooo`8000004`3o
ool2000000`0oooo0P00000I0?ooo`800000?`3oool100000040oooo0@3o
ool00080oooo00<000000?ooo`3oool01P3oool3000000<0oooo10000009
0?ooo`@000007`3oool00`000000oooo0?ooo`0j0?ooo`030000003oool0
oooo00L0oooo0`0000030?ooo`@000000`3oool3000000<0oooo1000000O
0?ooo`030000003oool0oooo01l0oooo1000000F0?ooo`@000004@3oool6
000000/0oooo0`0000030?ooo`800000303oool2000000@0oooo0P00000o
0?ooo`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`0l0?oo
o`030000003oool0oooo03X0oooo00<000000?ooo`3oool0?@3oool00`00
0000oooo0?ooo`2j0?ooo`4000000@3oool10?ooo`000P3oool00`000000
oooo0?ooo`0l0?ooo`030000003oool0oooo03X0oooo00<000000?ooo`3o
ool0?@3oool00`000000oooo0?ooo`2j0?ooo`4000000@3oool10?ooo`00
0P3oool00`000000oooo0?ooo`0j0?ooo`<00000?03oool00`000000oooo
0?ooo`0k0?ooo`<00000_03oool100000040oooo0@3oool00080oooo00<0
00000?ooo`3oool0N@3oool00`000000oooo0?ooo`3j0?ooo`4000000@3o
ool10?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0
oooo0?X0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo
07T0oooo00<000000?ooo`3oool0nP3oool100000040oooo0@3oool00080
ooooo`00001k00000080oooo00020?ooo`030000003oool0oooo07T0oooo
00<000000?ooo`3oool0nP3oool100000040oooo0@3oool00080oooo00<0
00000?ooo`3oool0N@3oool00`000000oooo0?ooo`3j0?ooo`4000000@3o
ool10?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0
oooo0?X0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo
07T0oooo00<000000?ooo`3oool0nP3oool100000040oooo0@3oool00080
oooo00<000000?ooo`3oool0AP3oool2000000030?ooo`000000000002h0
oooo00<000000?ooo`3oool0B03oool200000;00oooo0@0000010?ooo`40
oooo00020?ooo`030000003oool0oooo04L0oooo0`00000_0?ooo`030000
003oool0oooo04L0oooo00@000000?ooo`3oool00000[`3oool100000040
oooo0@3oool00080oooo00<000000?ooo`3oool0A`3oool00`000000oooo
0000000_0?ooo`030000003oool0oooo04L0oooo00@000000?ooo`3oool0
0000[`3oool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0
AP3oool2000000030?ooo`000000000002h0oooo00<000000?ooo`3oool0
A`3oool010000000oooo0?ooo`00002_0?ooo`4000000@3oool10?ooo`00
0P3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0oooo04L0oooo
00@000000?ooo`3oool00000[`3oool100000040oooo0@3oool00080oooo
00<000000?ooo`3oool0303oool4000000T0oooo1000001L0?ooo`030000
003oool0oooo00`0oooo100000090?ooo`@00000:`3oool200000;00oooo
0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo00`0oooo0P00
000=0?ooo`800000G03oool00`000000oooo0?ooo`0<0?ooo`8000003@3o
ool200000=d0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0
oooo00@0oooo1@0000030?ooo`8000000`3oool3000000040?ooo`000000
0000000000<0oooo0P00001L0?ooo`030000003oool0oooo00@0oooo1@00
00030?ooo`8000001@3oool3000000D0oooo0P00001Q0?ooo`H0000000D0
oooo00000000000000000?ooo`03000000040?ooo`00000000000?ooo`<0
000000<0oooo0000000000000P0000040?ooo`<000000`3oool400000080
oooo1@0000001`3oool00000000000000000oooo0000003oool020000000
1@3oool00000000000000000oooo00<0000000<0oooo0000000000001000
00020?ooo`<000000`3oool4000002<0oooo0@0000010?ooo`40oooo0002
0?ooo`030000003oool0oooo00D0oooo0P0000050?ooo`800000103oool2
000000030?ooo`000000000000@0oooo0P0000090?ooo`<000000P3oool3
000004/0oooo00<000000?ooo`3oool01@3oool2000000D0oooo0P000004
0?ooo`80000000<0oooo000000000000103oool2000000X0oooo0`000002
0?ooo`<00000=03oool500000080oooo1@0000020?ooo`D000002P3oool2
000000@0oooo0P000000103oool000000000003oool2000000050?ooo`00
000000000000003oool00P0000030?ooo`030000003oool0oooo00800000
0P3oool010000000oooo0000000000030?ooo`030000003oool0oooo0080
0000103oool2000000030?ooo`000000oooo008000000P3oool2000000@0
oooo0P000000103oool000000000003oool200000080oooo0P0000020?oo
o`8000000P3oool010000000oooo0000000000030?ooo`030000003oool0
oooo0200oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo
00D0oooo0P0000050?ooo`8000001@3oool3000000D0oooo0P00000K0?oo
ob400000803oool00`000000oooo0?ooo`050?ooo`8000001@3oool20000
00@0oooo0P0000000`3oool00000000000040?ooo`8000006`3ooolQ0000
02L0oooo0P0000040?ooo`80000000@0oooo000000000000oooo0P000002
0?ooo`80000000<0oooo0000000000001P3oool2000000@0oooo0P000006
0?ooo`800000103oool2000000030?ooo`000000oooo008000000P3oool2
000000@0oooo0P000000103oool000000000003oool200000080oooo0P00
00020?ooo`800000103oool2000002H0oooo0@0000010?ooo`40oooo0002
0?ooo`030000003oool0oooo00D0oooo0P0000050?ooo`8000001@3oool3
000000D0oooo0P0000090?ooo`<000000P3oool3000004/0oooo00<00000
0?ooo`3oool01@3oool2000000D0oooo0P0000040?ooo`80000000<0oooo
000000000000103oool2000000X0oooo0`0000020?ooo`<00000=03oool5
00000080oooo1@0000020?ooo`D000002P3oool2000000@0oooo0P000000
103oool000000000003oool200000080oooo0P0000000`3oool000000000
000400000080oooo0P0000040?ooo`H000000P3oool2000000@0oooo0P00
00000`3oool000000?ooo`0200000080oooo0P0000040?ooo`80000000<0
oooo0000000000000P3oool500000080oooo0P0000040?ooo`H000008P3o
ool100000040oooo0@3oool00080oooo00<000000?ooo`3oool01@3oool2
000000D0oooo0P0000040?ooo`80000000<0oooo000000000000103oool2
000002d0oooo0`0000070?ooo`<000008P3oool00`000000oooo0?ooo`05
0?ooo`8000001@3oool2000000@0oooo0P0000000`3oool0000000000004
0?ooo`800000;@3oool3000000L0oooo0`00000Y0?ooo`800000103oool2
000000040?ooo`00000000000?ooo`80000000D0oooo0000000000000000
0?ooo`0200000080oooo0P0000020?ooo`800000103oool200000080oooo
0P0000020?ooo`<0000000<0oooo0000003oool00P0000000`3oool00000
0?ooo`0200000080oooo0P0000040?ooo`80000000<0oooo000000000000
1@3oool200000080oooo0P0000040?ooo`8000000P3oool200000280oooo
0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo00@0oooo1@00
00030?ooo`8000000`3oool3000000040?ooo`0000000000000000<0oooo
0P00000]0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0
803oool00`000000oooo0?ooo`040?ooo`D000000`3oool2000000@0oooo
0P0000000`3oool00000000000040?ooo`800000;@3oool00`000000oooo
0?ooo`090?ooo`030000003oool0oooo02L0oooo0P0000030?ooo`D00000
0`3oool2000000030?ooo`00000000000080oooo100000020?ooo`D00000
0`3oool400000080oooo0`0000000`3oool0000000000007000000030?oo
o`0000000000008000000`3oool5000000<0oooo100000020?ooo`D00000
0`3oool4000002<0oooo0@0000010?ooo`40oooo00020?ooo`030000003o
ool0oooo00D0oooo0P0000050?ooo`8000003@3oool2000001d0oooo0`00
00020?ooo`L0000000D0oooo000000000000oooo000000030?ooo`800000
00<0oooo0000000000000`3oool00`000000oooo0?ooo`0P0?ooo`030000
003oool0oooo00D0oooo0P0000050?ooo`800000103oool2000000030?oo
o`000000000000@0oooo0P00000M0?ooo`<000000P3oool7000000050?oo
o`00000000000?ooo`000000103oool2000000D0oooo00<000000?ooo`3o
ool09`3oool2000000h0oooo0P0000090?ooo`800000;`3oool2000002`0
oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo00H0oooo
0`0000030?ooo`@000002@3oool4000001d0oooo00@000000?ooo`3oool0
00000`3oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo
000000@0oooo0`0000040?ooo`030000003oool0oooo0200oooo00<00000
0?ooo`3oool01P3oool3000000<0oooo100000030?ooo`<000000`3oool4
000001d0oooo00@000000?ooo`3oool000000`3oool010000000oooo0?oo
o`0000020?ooo`040000003oool0oooo000000<0oooo00@000000?ooo`3o
ool00000103oool00`000000oooo0?ooo`0U0?ooo`H000002`3oool30000
00T0oooo0P00000K0?ooo`8000004P3oool2000002`0oooo0@0000010?oo
o`40oooo00020?ooo`030000003oool0oooo03`0oooo00<000000?ooo`3o
ool00P3oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo
000000@0oooo00<000000?ooo`000000103oool00`000000oooo0?ooo`0P
0?ooo`030000003oool0oooo03`0oooo00<000000?ooo`3oool00P3oool0
10000000oooo0?ooo`0000020?ooo`040000003oool0oooo000000<0oooo
00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`2Q0?ooo`40
00000@3oool10?ooo`000P3oool00`000000oooo0?ooo`0k0?ooo`040000
003oool0oooo0?ooo`<0000000<0oooo0000000000000P0000030?ooo`04
0000003oool0oooo0?ooo`80000000<0oooo0000000000000`3oool00`00
0000oooo0?ooo`0P0?ooo`030000003oool0oooo03/0oooo00@000000?oo
o`3oool0oooo0`0000000`3oool0000000000002000000<0oooo00D00000
0?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool0X@3oool100000040oooo0@3oool00080oooo00<00000
0?ooo`3oool0>P3oool010000000oooo0?ooo`00000<0?ooo`030000003o
ool0oooo00T0oooo00<000000?ooo`3oool0803oool00`000000oooo0?oo
o`0j0?ooo`040000003oool0oooo000000`0oooo00D000000?ooo`3oool0
oooo000000020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3o
ool0X@3oool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0
>`3oool3000000<0oooo00<000000?ooo`3oool01P3oool3000000L0oooo
0`00000R0?ooo`030000003oool0oooo03/0oooo0`0000030?ooo`030000
003oool0oooo00H0oooo0`0000020?ooo`8000000`3oool300000:<0oooo
0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo07T0oooo00<0
00000?ooo`3oool0nP3oool100000040oooo0@3oool00080oooo00<00000
0?ooo`3oool0N@3oool00`000000oooo0?ooo`3j0?ooo`4000000@3oool1
0?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0oooo
0?X0oooo0@0000010?ooo`40oooo00020?ooool00000N`0000020?ooo`00
0P3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0oooo0?X0oooo
0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo07T0oooo00<0
00000?ooo`3oool0nP3oool100000040oooo0@3oool00080oooo00<00000
0?ooo`3oool0N@3oool00`000000oooo0?ooo`3j0?ooo`4000000@3oool1
0?ooo`000P3oool00`000000oooo0?ooo`0f0?ooo`@000002@3oool40000
0380oooo00<000000?ooo`3oool0M`3oool4000000T0oooo1000001b0?oo
o`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`0f0?ooo`80
00003@3oool200000380oooo00<000000?ooo`3oool0M`3oool2000000d0
oooo0P00001b0?ooo`4000000@3oool10?ooo`000P3oool00`000000oooo
0?ooo`0^0?ooo`D000000`3oool2000000<0oooo0`000000103oool00000
0000000000030?ooo`800000<P3oool00`000000oooo0?ooo`1_0?ooo`D0
00000`3oool2000000D0oooo0`0000050?ooo`800000LP3oool100000040
oooo0@3oool00080oooo00<000000?ooo`3oool0;`3oool2000000D0oooo
0P0000040?ooo`80000000<0oooo000000000000103oool200000380oooo
00<000000?ooo`3oool0L03oool2000000D0oooo0P0000040?ooo`800000
00<0oooo000000000000103oool200000780oooo0@0000010?ooo`40oooo
00020?ooo`030000003oool0oooo02l0oooo0P0000050?ooo`8000001@3o
ool3000000D0oooo0P00000b0?ooo`030000003oool0oooo0700oooo0P00
00050?ooo`800000103oool2000000030?ooo`000000000000@0oooo0P00
001b0?ooo`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`0_
0?ooo`8000001@3oool2000000D0oooo0`0000050?ooo`800000<P3oool0
0`000000oooo0?ooo`1`0?ooo`8000001@3oool2000000@0oooo0P000000
0`3oool00000000000040?ooo`800000LP3oool100000040oooo0@3oool0
0080oooo00<000000?ooo`3oool0;`3oool2000000D0oooo0P0000040?oo
o`80000000<0oooo000000000000103oool200000380oooo00<000000?oo
o`3oool0L03oool2000000D0oooo0P0000040?ooo`80000000<0oooo0000
00000000103oool200000780oooo0@0000010?ooo`40oooo00020?ooo`03
0000003oool0oooo02h0oooo1@0000030?ooo`8000000`3oool300000004
0?ooo`0000000000000000<0oooo0P00000b0?ooo`030000003oool0oooo
06l0oooo1@0000030?ooo`800000103oool2000000030?ooo`0000000000
00@0oooo0P00001b0?ooo`4000000@3oool10?ooo`000P3oool00`000000
oooo0?ooo`0_0?ooo`8000001@3oool2000000d0oooo0P00000b0?ooo`03
0000003oool0oooo0700oooo0P0000050?ooo`800000103oool200000003
0?ooo`000000000000@0oooo0P00001b0?ooo`4000000@3oool10?ooo`00
0P3oool00`000000oooo0?ooo`0`0?ooo`<000000`3oool4000000T0oooo
1000000b0?ooo`030000003oool0oooo0740oooo0`0000030?ooo`@00000
0`3oool3000000<0oooo1000001b0?ooo`4000000@3oool10?ooo`000P3o
ool00`000000oooo0?ooo`1i0?ooo`030000003oool0oooo0?X0oooo0@00
00010?ooo`40oooo00020?ooo`030000003oool0oooo07T0oooo00<00000
0?ooo`3oool0nP3oool100000040oooo0@3oool00080oooo00<000000?oo
o`3oool0N@3oool00`000000oooo0?ooo`3j0?ooo`4000000@3oool10?oo
o`000P3ooooo000007/000000P3oool00?l0ooooO`3oool00001\
\>"], "Input",
  Evaluatable->False,
  ImageSize->{382, 171},
  ImageMargins->{{0, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}}],

Cell[BoxData[
    \(Sin[0]\/0\)], "Input"],

Cell[BoxData[
    \(1\/0\)], "Input"],

Cell[BoxData[
    \(Cot[0]\)], "Input"],

Cell[BoxData[
    \(Csc[0]\)], "Input"],

Cell[BoxData[
    \(1\/0\^2\)], "Input"],

Cell[BoxData[
    \(\((Csc[0])\)\^2\)], "Input"],

Cell[BoxData[
    \(Log[0]\)], "Input"],

Cell[GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006=0000JB000`400?l0
0000o`00003oo`3ooon>0?ooo`000P3ooooo000008X000000P3oool00080
oooo00<000000?ooo`3oool0N@3oool00`000000oooo0?ooo`3o0?ooo`X0
oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo07T0oooo
00<000000?ooo`3oool0o`3oool:0?ooo`4000000@3oool10?ooo`000P3o
ool00`000000oooo0?ooo`1i0?ooo`030000003oool0oooo0?l0oooo2P3o
ool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0N@3oool0
0`000000oooo0?ooo`3o0?ooo`X0oooo0@0000010?ooo`40oooo00020?oo
o`030000003oool0oooo07T0oooo00<000000?ooo`3oool0o`3oool:0?oo
o`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`03
0000003oool0oooo01D0oooo1000001:0?ooo`@00000XP3oool100000040
oooo0@3oool00080oooo00<000000?ooo`3oool0N@3oool00`000000oooo
0?ooo`0F0?ooo`030000003oool0oooo04/0oooo00<000000?ooo`3oool0
XP3oool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0N@3o
ool00`000000oooo0?ooo`0<0?ooo`@000001`3oool00`000000oooo0?oo
o`050?ooo`@000007@3oool2000001P0oooo100000070?ooo`030000003o
ool0oooo00D0oooo100000030?ooo`800000T`3oool100000040oooo0@3o
ool00080oooo00<000000?ooo`3oool0N@3oool00`000000oooo0?ooo`0<
0?ooo`8000002P3oool00`000000oooo0?ooo`060?ooo`800000703oool2
000001T0oooo0P00000:0?ooo`030000003oool0oooo00H0oooo0P000004
0?ooo`800000TP3oool100000040oooo0@3oool00080oooo00<000000?oo
o`3oool0N@3oool00`000000oooo0?ooo`0<0?ooo`8000001`3oool01000
0000oooo0?ooo`0000080?ooo`800000703oool2000001T0oooo0P000007
0?ooo`040000003oool0oooo000000P0oooo0P0000040?ooo`800000TP3o
ool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0303oool4
000000T0oooo1000000M0?ooo`800000603oool4000000T0oooo10000003
0?ooo`8000003`3oool00`000000oooo0?ooo`0<0?ooo`800000203oool2
000000T0oooo0P00000K0?ooo`8000006P3oool2000000P0oooo0P000009
0?ooo`8000001@3oool2000003L0oooo1@0000190?ooo`D000001`3oool1
00000040oooo0@3oool00080oooo00<000000?ooo`3oool0303oool20000
00d0oooo0P00000L0?ooo`8000006@3oool2000000d0oooo0P0000040?oo
o`8000003P3oool00`000000oooo0?ooo`0<0?ooo`8000004`3oool20000
01/0oooo0P00000J0?ooo`8000004`3oool2000000D0oooo0P00000h0?oo
o`800000C@3oool2000000P0oooo0@0000010?ooo`40oooo00020?ooo`03
0000003oool0oooo00@0oooo1@0000030?ooo`8000000`3oool300000004
0?ooo`0000000000000000<0oooo0P00000L0?ooo`8000000P3oool50000
00<0oooo100000030?ooo`@00000103oool2000000<0oooo0`000000103o
ool000000000000000030?ooo`800000103oool2000000h0oooo00<00000
0?ooo`3oool0103oool5000000<0oooo0P00000C0?ooo`8000006`3oool2
000000<0oooo1@0000030?ooo`@000000`3oool4000000@0oooo0P00000C
0?ooo`8000001@3oool2000002D0oooo0`0000030?ooo`@0000000L0oooo
00000000000000000?ooo`000000oooo00@0000000<0oooo000000000000
0P3oool600000080oooo100000020?ooo`<0000000<0oooo000000000000
1`0000001@3oool00000000000000000oooo00<0000000<0oooo00000000
00000`0000000`3oool0000000000004000000050?ooo`00000000000000
003oool02@0000030?ooo`<00000103oool2000000P0oooo0@0000010?oo
o`40oooo00020?ooo`030000003oool0oooo00D0oooo0P0000050?ooo`80
0000103oool2000000030?ooo`000000000000@0oooo0P0000090?ooo`<0
00000P3oool3000000X0oooo0P0000030?ooo`040000003oool0oooo0?oo
o`80000000<0oooo0000000000000`3oool010000000oooo000000000003
0?ooo`040000003oool0oooo0?ooo`800000103oool2000000030?ooo`00
0000000000@0oooo0P0000050?ooo`8000003@3oool00`000000oooo0?oo
o`050?ooo`8000001@3oool2000001<0oooo0P0000090?ooo`<000000P3o
ool3000000X0oooo0P0000030?ooo`040000003oool0oooo0?ooo`800000
00<0oooo0000000000000`3oool010000000oooo0000000000030?ooo`04
0000003oool0oooo0?ooo`8000004`3oool2000000D0oooo0P00000?0?oo
o`D000000P3oool5000000T0oooo0P0000020?ooo`040000003oool00000
00000080oooo0P0000001P3oool000000000003oool000000?ooo`D00000
00<0oooo0000000000000`3oool2000000<0oooo0P0000030?ooo`030000
003oool0oooo0080000000<0oooo0000000000000`3oool2000000@0oooo
0P0000000`3oool00000000000030?ooo`8000001@3oool2000000@0oooo
0P0000000`3oool00000000000030?ooo`800000103oool200000080oooo
00@000000?ooo`3oool0oooo0`0000070?ooo`4000000@3oool10?ooo`00
0P3oool00`000000oooo0?ooo`050?ooo`8000001@3oool2000000D0oooo
0`0000050?ooo`8000006`3oool2000000L0oooo0P0000000`3oool00000
000000050?ooo`8000001`3oool2000000D0oooo0`0000050?ooo`800000
1@3oool2000000d0oooo00<000000?ooo`3oool01@3oool2000000D0oooo
0P0000050?ooo`T000001@3oool2000001/0oooo0P0000070?ooo`800000
00<0oooo0000000000001@3oool2000000L0oooo0P0000050?ooo`T00000
1@3oool2000000D0oooo0P00000S0?ooo`8000001@3oool200000080oooo
0P0000001P3oool000000000003oool000000?ooo`@000000P3oool20000
00<0oooo0P0000030?ooo`8000001`3oool3000000@0oooo0P0000040?oo
o`80000000<0oooo0000000000000`3oool2000000D0oooo0P0000040?oo
o`80000000<0oooo0000000000000`3oool2000000@0oooo0P0000060?oo
o`<000001`3oool100000040oooo0@3oool00080oooo00<000000?ooo`3o
ool01@3oool2000000D0oooo0P0000050?ooo`<000001@3oool2000000T0
oooo0`0000020?ooo`<000002P3oool2000000D0oooo0`0000020?ooo`H0
000000<0oooo0000000000001`3oool2000000D0oooo0`0000050?ooo`80
00001@3oool2000000d0oooo00<000000?ooo`3oool01@3oool2000000D0
oooo0P00000C0?ooo`8000002@3oool300000080oooo0`00000:0?ooo`80
00001@3oool300000080oooo1P0000000`3oool00000000000070?ooo`80
00004`3oool2000000D0oooo0P00000?0?ooo`D000000P3oool5000000P0
oooo0P0000050?ooo`8000000P3oool2000000060?ooo`00000000000?oo
o`000000oooo100000020?ooo`8000000`3oool2000000<0oooo1P000003
0?ooo`<00000103oool2000000@0oooo0P0000000`3oool0000000000003
0?ooo`8000001@3oool2000000@0oooo0P0000000`3oool0000000000003
0?ooo`800000103oool2000000D0oooo0P0000000`3oool0000000000006
0?ooo`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`050?oo
o`8000001@3oool2000000@0oooo0P0000000`3oool00000000000040?oo
o`8000006`3oool2000000@0oooo0`0000030?ooo`8000000P3oool20000
00030?ooo`000000000000<0oooo00@000000?ooo`3oool0oooo0P000004
0?ooo`80000000<0oooo000000000000103oool2000000D0oooo0P00000=
0?ooo`030000003oool0oooo00D0oooo0P0000050?ooo`8000004`3oool2
000001/0oooo0P0000040?ooo`<000000`3oool200000080oooo0P000000
0`3oool00000000000030?ooo`040000003oool0oooo0?ooo`8000004`3o
ool2000000D0oooo0P00000S0?ooo`8000001@3oool200000080oooo0P00
00001P3oool000000000003oool000000?ooo`D0000000<0oooo00000000
00000`3oool2000000<0oooo0P0000020?ooo`8000000P3oool200000003
0?ooo`000000000000<0oooo0P0000040?ooo`80000000<0oooo00000000
00000`3oool2000000D0oooo0P0000040?ooo`80000000<0oooo00000000
00000`3oool2000000@0oooo0P0000050?ooo`80000000<0oooo00000000
00001P3oool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0
103oool5000000<0oooo0P0000030?ooo`<0000000@0oooo000000000000
00000`3oool2000001`0oooo0P0000020?ooo`8000001P3oool4000000<0
oooo1@0000030?ooo`8000000`3oool3000000040?ooo`00000000000000
00<0oooo0P0000040?ooo`8000000`3oool4000000L0oooo00<000000?oo
o`3oool0103oool5000000<0oooo0P0000060?ooo`030000003oool0oooo
0080oooo00<000000?ooo`3oool01@3oool2000001/0oooo0P0000030?oo
o`8000001P3oool4000000<0oooo1@0000030?ooo`8000001P3oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo00D0oooo0P0000050?oo
o`8000000P3oool4000001d0oooo0P0000030?ooo`030000003oool0oooo
00@0000000<0oooo000000000000200000000`3oool00000000000040?oo
o`800000103oool400000080oooo0`000000103oool00000000000000002
0?ooo`8000000`3oool5000000<0oooo1@0000000`3oool0000000000002
000000<0oooo1@0000020?ooo`@000000`3oool500000080oooo0`000000
103oool000000000000000050?ooo`4000000@3oool10?ooo`000P3oool0
0`000000oooo0?ooo`050?ooo`8000001@3oool2000000d0oooo0P00000L
0?ooo`8000000P3oool2000000<0oooo00<000000?ooo`3oool03`3oool2
000000d0oooo0P0000040?ooo`800000103oool00`000000oooo0?ooo`07
0?ooo`030000003oool0oooo00D0oooo0P0000050?ooo`8000001`3oool0
10000000oooo0?ooo`0000080?ooo`8000006`3oool2000000<0oooo0P00
00030?ooo`030000003oool0oooo00l0oooo0P0000070?ooo`040000003o
ool0oooo000000P0oooo0P0000050?ooo`8000000`3oool00`000000oooo
0?ooo`0N0?ooo`8000000P3oool00`000000oooo0?ooo`0F0?ooo`800000
4`3oool2000000`0oooo0P00000I0?ooo`800000403oool100000040oooo
0@3oool00080oooo00<000000?ooo`3oool01P3oool3000000<0oooo1000
00090?ooo`@000007@3oool200000080oooo1@00000A0?ooo`@000002@3o
ool4000000<0oooo0P0000060?ooo`030000003oool0oooo00H0oooo00<0
00000?ooo`3oool01P3oool3000000<0oooo0P0000080?ooo`030000003o
ool0000000P0oooo0P00000L0?ooo`8000000`3oool500000140oooo0P00
00080?ooo`030000003oool0000000P0oooo0P0000040?ooo`8000001@3o
ool00`000000oooo0?ooo`0N0?ooo`@000005P3oool400000140oooo1P00
000;0?ooo`<000000`3oool2000000`0oooo0P0000040?ooo`800000403o
ool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0L@3oool0
0`000000oooo0?ooo`050?ooo`030000003oool0oooo00`0oooo0P000008
0?ooo`030000003oool0000000P0oooo0P00000L0?ooo`8000006@3oool2
000000P0oooo00<000000?ooo`000000203oool2000000@0oooo0P000006
0?ooo`030000003oool0oooo08T0oooo0@0000010?ooo`40oooo00020?oo
o`030000003oool0oooo06h0oooo00@000000?ooo`3oool000001`3oool0
0`000000oooo0?ooo`0<0?ooo`@00000103oool6000000D0oooo1000000M
0?ooo`800000603oool4000000@0oooo1P0000050?ooo`@000000`3oool2
000000@0oooo00@000000?ooo`3oool00000R`3oool100000040oooo0@3o
ool00080oooo00<000000?ooo`3oool0K`3oool2000000P0oooo00<00000
0?ooo`3oool0N`3oool2000008`0oooo0@0000010?ooo`40oooo00020?oo
o`030000003oool0oooo07T0oooo00<000000?ooo`3oool0o`3oool:0?oo
o`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`03
0000003oool0oooo0?l0oooo2P3oool100000040oooo0@3oool00080oooo
00<000000?ooo`3oool0N@3oool00`000000oooo0?ooo`3o0?ooo`X0oooo
0@0000010?ooo`40oooo00020?ooool00000RP0000020?ooo`000P3oool0
0`000000oooo0?ooo`1i0?ooo`030000003oool0oooo0?l0oooo2P3oool1
00000040oooo0@3oool00080oooo00<000000?ooo`3oool0N@3oool00`00
0000oooo0?ooo`3o0?ooo`X0oooo0@0000010?ooo`40oooo00020?ooo`03
0000003oool0oooo07T0oooo00<000000?ooo`3oool0o`3oool:0?ooo`40
00000@3oool10?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`030000
003oool0oooo0?l0oooo2P3oool100000040oooo0@3oool00080oooo00<0
00000?ooo`3oool0N@3oool00`000000oooo0?ooo`0E0?ooo`@00000A03o
ool400000:P0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0
oooo07T0oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`15
0?ooo`030000003oool0oooo0:P0oooo0@0000010?ooo`40oooo00020?oo
o`030000003oool0oooo07T0oooo00<000000?ooo`3oool0303oool40000
00L0oooo00<000000?ooo`3oool01P3oool400000300oooo100000070?oo
o`030000003oool0oooo00D0oooo1000002N0?ooo`4000000@3oool10?oo
o`000P3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0oooo00`0
oooo0P00000:0?ooo`030000003oool0oooo00L0oooo0P00000`0?ooo`80
00002P3oool00`000000oooo0?ooo`060?ooo`800000WP3oool100000040
oooo0@3oool00080oooo00<000000?ooo`3oool0N@3oool00`000000oooo
0?ooo`0<0?ooo`8000001`3oool010000000oooo0?ooo`0000090?ooo`80
0000<03oool2000000L0oooo00@000000?ooo`3oool00000203oool20000
09h0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo00d0
oooo100000090?ooo`@00000<03oool4000000T0oooo1000000J0?ooo`03
0000003oool0oooo00`0oooo0P0000080?ooo`8000002P3oool200000300
oooo0P0000080?ooo`8000002@3oool200000340oooo1@0000190?ooo`D0
00006P3oool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0
3@3oool2000000d0oooo0P00000`0?ooo`8000003@3oool2000001X0oooo
00<000000?ooo`3oool0303oool2000001@0oooo0P00000`0?ooo`800000
4`3oool200000380oooo0P00001=0?ooo`8000006`3oool100000040oooo
0@3oool00080oooo00<000000?ooo`3oool01@3oool5000000<0oooo0P00
00030?ooo`<0000000@0oooo00000000000000000`3oool2000001T0oooo
1@0000030?ooo`@000000`3oool4000000@0oooo0P0000030?ooo`<00000
00@0oooo00000000000000000`3oool2000001X0oooo00<000000?ooo`3o
ool0103oool5000000<0oooo0P00000D0?ooo`8000006@3oool5000000<0
oooo100000030?ooo`@00000103oool2000001<0oooo0P00000O0?ooo`<0
00000`3oool4000000070?ooo`00000000000000003oool000000?ooo`04
000000030?ooo`00000000000080oooo1P0000020?ooo`@000000P3oool3
000000030?ooo`000000000000L0000000D0oooo00000000000000000?oo
o`03000000030?ooo`000000000000<0000000<0oooo0000000000001000
00001@3oool00000000000000000oooo00T000000`3oool3000000@0oooo
0P00000K0?ooo`4000000@3oool10?ooo`000P3oool00`000000oooo0?oo
o`060?ooo`8000001@3oool2000000@0oooo0P0000000`3oool000000000
00040?ooo`8000002@3oool300000080oooo0`0000080?ooo`040000003o
ool0oooo0?ooo`80000000<0oooo0000000000000`3oool010000000oooo
0000000000030?ooo`040000003oool0oooo0?ooo`800000103oool20000
00030?ooo`000000000000@0oooo0P00000J0?ooo`030000003oool0oooo
00D0oooo0P0000050?ooo`800000503oool2000000T0oooo0`0000020?oo
o`<00000203oool010000000oooo0?ooo`3oool2000000030?ooo`000000
000000<0oooo00@000000?ooo`00000000000`3oool010000000oooo0?oo
o`3oool2000001<0oooo0P0000090?ooo`D000000P3oool5000000T0oooo
0P0000020?ooo`040000003oool0000000000080oooo0P0000001P3oool0
00000000003oool000000?ooo`D0000000<0oooo0000000000000`3oool2
000000<0oooo0P0000030?ooo`030000003oool0oooo0080000000<0oooo
0000000000000`3oool2000000@0oooo0P0000000`3oool0000000000003
0?ooo`8000001@3oool2000000@0oooo0P0000000`3oool0000000000003
0?ooo`800000103oool200000080oooo00@000000?ooo`3oool0oooo0`00
000J0?ooo`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`06
0?ooo`8000001@3oool2000000D0oooo0`0000050?ooo`8000007@3oool2
000000030?ooo`000000000000D0oooo0P0000070?ooo`8000001@3oool3
000000D0oooo0P00000J0?ooo`030000003oool0oooo00D0oooo0P000005
0?ooo`8000001@3oool9000000H0oooo0P00000M0?ooo`80000000<0oooo
0000000000001@3oool2000000L0oooo0P0000050?ooo`T000001@3oool2
000001d0oooo0P0000050?ooo`8000000P3oool2000000060?ooo`000000
00000?ooo`000000oooo100000020?ooo`8000000`3oool2000000<0oooo
0P0000070?ooo`<00000103oool2000000@0oooo0P0000000`3oool00000
000000030?ooo`8000001@3oool2000000@0oooo0P0000000`3oool00000
000000030?ooo`800000103oool2000000H0oooo0`00000J0?ooo`400000
0@3oool10?ooo`000P3oool00`000000oooo0?ooo`060?ooo`8000001@3o
ool2000000D0oooo0`0000050?ooo`8000002@3oool300000080oooo0`00
000:0?ooo`<000000P3oool6000000030?ooo`000000000000L0oooo0P00
00050?ooo`<000001@3oool2000001X0oooo00<000000?ooo`3oool01@3o
ool2000000D0oooo0P00000D0?ooo`8000002@3oool300000080oooo0`00
000:0?ooo`<000000P3oool6000000030?ooo`000000000000L0oooo0P00
000C0?ooo`8000002@3oool500000080oooo1@0000080?ooo`8000001@3o
ool200000080oooo0P0000001P3oool000000000003oool000000?ooo`@0
00000P3oool2000000<0oooo0P0000030?ooo`H000000`3oool3000000@0
oooo0P0000040?ooo`80000000<0oooo0000000000000`3oool2000000D0
oooo0P0000040?ooo`80000000<0oooo0000000000000`3oool2000000@0
oooo0P0000050?ooo`80000000<0oooo0000000000006@3oool100000040
oooo0@3oool00080oooo00<000000?ooo`3oool01P3oool2000000D0oooo
0P0000040?ooo`80000000<0oooo000000000000103oool2000001X0oooo
0`0000030?ooo`8000000P3oool2000000030?ooo`000000000000<0oooo
00@000000?ooo`3oool0oooo0P0000040?ooo`80000000<0oooo00000000
0000103oool2000001X0oooo00<000000?ooo`3oool01@3oool2000000D0
oooo0P00000D0?ooo`8000006P3oool3000000<0oooo0P0000020?ooo`80
000000<0oooo0000000000000`3oool010000000oooo0?ooo`3oool20000
01<0oooo0P00000M0?ooo`8000001@3oool200000080oooo0P0000001P3o
ool000000000003oool000000?ooo`D0000000<0oooo0000000000000`3o
ool2000000<0oooo0P0000020?ooo`8000000P3oool2000000030?ooo`00
0000000000<0oooo0P0000040?ooo`80000000<0oooo0000000000000`3o
ool2000000D0oooo0P0000040?ooo`80000000<0oooo0000000000000`3o
ool2000000@0oooo0P0000050?ooo`80000000<0oooo0000000000006@3o
ool100000040oooo0@3oool00080oooo00<000000?ooo`3oool01@3oool5
000000<0oooo0P0000030?ooo`<0000000@0oooo00000000000000000`3o
ool2000001T0oooo0P0000060?ooo`@000000`3oool5000000<0oooo0P00
00030?ooo`<0000000@0oooo00000000000000000`3oool2000001X0oooo
00<000000?ooo`3oool0103oool5000000<0oooo0P0000070?ooo`030000
003oool0oooo0080oooo00<000000?ooo`3oool01@3oool2000001T0oooo
0P0000060?ooo`@000000`3oool5000000<0oooo0P0000060?ooo`030000
003oool0oooo0080oooo00<000000?ooo`3oool01@3oool2000001d0oooo
0P0000030?ooo`030000003oool0oooo00@0000000<0oooo000000000000
200000000`3oool00000000000040?ooo`800000103oool400000080oooo
0`000000103oool000000000000000020?ooo`8000000`3oool5000000<0
oooo1@0000000`3oool0000000000002000000<0oooo1@0000020?ooo`@0
00000`3oool500000080oooo0`000000103oool0000000000000000H0?oo
o`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`060?ooo`80
00001@3oool2000000d0oooo0P00000I0?ooo`8000000`3oool00`000000
oooo0?ooo`0?0?ooo`8000003@3oool2000001X0oooo00<000000?ooo`3o
ool01@3oool2000000D0oooo0P0000080?ooo`040000003oool0oooo0000
00P0oooo0P00000I0?ooo`8000000`3oool00`000000oooo0?ooo`0?0?oo
o`8000001`3oool010000000oooo0?ooo`0000080?ooo`8000007P3oool2
00000080oooo00<000000?ooo`3oool05P3oool2000001<0oooo0P00000<
0?ooo`8000006@3oool2000002<0oooo0@0000010?ooo`40oooo00020?oo
o`030000003oool0oooo00L0oooo0`0000030?ooo`@000002@3oool40000
01X0oooo1@00000A0?ooo`@000002@3oool4000001X0oooo00<000000?oo
o`3oool01P3oool3000000<0oooo0P0000090?ooo`030000003oool00000
00P0oooo0P00000J0?ooo`D000004@3oool2000000P0oooo00<000000?oo
o`000000203oool2000001l0oooo1000000F0?ooo`@000004@3oool60000
00/0oooo0`0000030?ooo`800000303oool2000000@0oooo0P00000S0?oo
o`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`03
0000003oool0oooo00`0oooo0P0000090?ooo`030000003oool0000000P0
oooo0P00000`0?ooo`800000203oool00`000000oooo000000080?ooo`80
0000WP3oool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0
N@3oool00`000000oooo0?ooo`0<0?ooo`@000001@3oool6000000D0oooo
1000000`0?ooo`@00000103oool6000000D0oooo1000002N0?ooo`400000
0@3oool10?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`030000003o
ool0oooo0?l0oooo2P3oool100000040oooo0@3oool00080oooo00<00000
0?ooo`3oool0N@3oool00`000000oooo0?ooo`3o0?ooo`X0oooo0@000001
0?ooo`40oooo00020?ooo`030000003oool0oooo07T0oooo00<000000?oo
o`3oool0o`3oool:0?ooo`4000000@3oool10?ooo`000P3ooooo000008X0
00000P3oool00080oooo00<000000?ooo`3oool0N@3oool00`000000oooo
0?ooo`3o0?ooo`X0oooo0@0000010?ooo`40oooo00020?ooo`030000003o
ool0oooo07T0oooo00<000000?ooo`3oool0o`3oool:0?ooo`4000000@3o
ool10?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0
oooo0?l0oooo2P3oool100000040oooo0@3oool00080oooo00<000000?oo
o`3oool0N@3oool00`000000oooo0?ooo`3o0?ooo`X0oooo0@0000010?oo
o`40oooo00020?ooo`030000003oool0oooo07T0oooo00<000000?ooo`3o
ool05@3oool4000004@0oooo1000002X0?ooo`4000000@3oool10?ooo`00
0P3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0oooo01H0oooo
00<000000?ooo`3oool0A@3oool00`000000oooo0?ooo`2X0?ooo`400000
0@3oool10?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`030000003o
ool0oooo00`0oooo100000070?ooo`030000003oool0oooo00H0oooo1000
000`0?ooo`@000001`3oool00`000000oooo0?ooo`050?ooo`@00000WP3o
ool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0N@3oool0
0`000000oooo0?ooo`0<0?ooo`8000002P3oool00`000000oooo0?ooo`07
0?ooo`800000<03oool2000000X0oooo00<000000?ooo`3oool01P3oool2
000009h0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo
07T0oooo00<000000?ooo`3oool0303oool2000000L0oooo00@000000?oo
o`3oool000002@3oool200000300oooo0P0000070?ooo`040000003oool0
oooo000000P0oooo0P00002N0?ooo`4000000@3oool10?ooo`000P3oool0
0`000000oooo0?ooo`0=0?ooo`@000002@3oool400000300oooo10000009
0?ooo`@000006P3oool00`000000oooo0?ooo`0<0?ooo`800000203oool2
000000X0oooo0P00000`0?ooo`800000203oool2000000T0oooo0P00000a
0?ooo`D00000B@3oool5000001X0oooo0@0000010?ooo`40oooo00020?oo
o`030000003oool0oooo00d0oooo0P00000=0?ooo`800000<03oool20000
00d0oooo0P00000J0?ooo`030000003oool0oooo00`0oooo0P00000D0?oo
o`800000<03oool2000001<0oooo0P00000b0?ooo`800000C@3oool20000
01/0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo00D0
oooo1@0000030?ooo`8000000`3oool3000000040?ooo`00000000000000
00<0oooo0P00000J0?ooo`@000000`3oool9000000040?ooo`0000000000
00000080oooo0P0000030?ooo`<0000000@0oooo00000000000000000`3o
ool2000001X0oooo00<000000?ooo`3oool0103oool5000000<0oooo0P00
000D0?ooo`8000006P3oool4000000<0oooo2@000000103oool000000000
000000020?ooo`8000004`3oool2000001l0oooo0`0000030?ooo`@00000
00L0oooo00000000000000000?ooo`000000oooo00@0000000<0oooo0000
000000000P3oool600000080oooo100000020?ooo`<0000000<0oooo0000
000000001`0000001@3oool00000000000000000oooo00<0000000<0oooo
0000000000000`0000000`3oool0000000000004000000050?ooo`000000
00000000003oool02@0000030?ooo`<00000103oool2000001/0oooo0@00
00010?ooo`40oooo00020?ooo`030000003oool0oooo00H0oooo0P000005
0?ooo`800000103oool2000000030?ooo`000000000000@0oooo0P000009
0?ooo`<000000P3oool3000000X0oooo0P0000030?ooo`8000000P3oool2
00000080oooo0P0000000`3oool00000000000030?ooo`800000103oool2
000000030?ooo`000000000000@0oooo0P00000J0?ooo`030000003oool0
oooo00D0oooo0P0000050?ooo`800000503oool2000000T0oooo0`000002
0?ooo`<000002P3oool2000000<0oooo0P0000020?ooo`8000000P3oool2
000000030?ooo`000000000000<0oooo0P00000C0?ooo`8000002@3oool5
00000080oooo1@0000090?ooo`8000000P3oool010000000oooo00000000
00020?ooo`80000000H0oooo000000000000oooo0000003oool500000003
0?ooo`000000000000<0oooo0P0000030?ooo`8000000`3oool00`000000
oooo0?ooo`02000000030?ooo`000000000000<0oooo0P0000040?ooo`80
000000<0oooo0000000000000`3oool2000000D0oooo0P0000040?ooo`80
000000<0oooo0000000000000`3oool2000000@0oooo0P0000020?ooo`04
0000003oool0oooo0?ooo`<000006P3oool100000040oooo0@3oool00080
oooo00<000000?ooo`3oool01P3oool2000000D0oooo0P0000050?ooo`<0
00001@3oool2000001/0oooo0P0000030?ooo`8000000P3oool200000080
oooo0P0000000`3oool00000000000030?ooo`8000001@3oool3000000D0
oooo0P00000J0?ooo`030000003oool0oooo00D0oooo0P0000050?ooo`80
00001@3oool9000000H0oooo0P00000K0?ooo`8000000`3oool200000080
oooo0P0000020?ooo`80000000<0oooo0000000000000`3oool2000000D0
oooo2@0000050?ooo`8000007@3oool2000000D0oooo0P0000020?ooo`80
000000H0oooo000000000000oooo0000003oool400000080oooo0P000003
0?ooo`8000000`3oool2000000L0oooo0`0000040?ooo`800000103oool2
000000030?ooo`000000000000<0oooo0P0000050?ooo`800000103oool2
000000030?ooo`000000000000<0oooo0P0000040?ooo`8000001P3oool3
000001X0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo
00H0oooo0P0000050?ooo`8000001@3oool3000000D0oooo0P0000090?oo
o`<000000P3oool3000000X0oooo0P0000040?ooo`D000000P3oool20000
00030?ooo`000000000000<0oooo0P0000050?ooo`<000001@3oool20000
01X0oooo00<000000?ooo`3oool01@3oool2000000D0oooo0P00000D0?oo
o`8000002@3oool300000080oooo0`00000:0?ooo`800000103oool50000
0080oooo0P0000000`3oool00000000000030?ooo`8000004`3oool20000
00T0oooo1@0000020?ooo`D00000203oool2000000D0oooo0P0000020?oo
o`80000000H0oooo000000000000oooo0000003oool400000080oooo0P00
00030?ooo`8000000`3oool6000000<0oooo0`0000040?ooo`800000103o
ool2000000030?ooo`000000000000<0oooo0P0000050?ooo`800000103o
ool2000000030?ooo`000000000000<0oooo0P0000040?ooo`8000001@3o
ool2000000030?ooo`000000000001T0oooo0@0000010?ooo`40oooo0002
0?ooo`030000003oool0oooo00H0oooo0P0000050?ooo`800000103oool2
000000030?ooo`000000000000@0oooo0P00000K0?ooo`8000001`3oool2
00000080oooo0P0000000`3oool00000000000030?ooo`800000103oool2
000000030?ooo`000000000000@0oooo0P00000J0?ooo`030000003oool0
oooo00D0oooo0P0000050?ooo`800000503oool2000001/0oooo0P000007
0?ooo`8000000P3oool2000000030?ooo`000000000000<0oooo0P00000C
0?ooo`8000007@3oool2000000D0oooo0P0000020?ooo`80000000H0oooo
000000000000oooo0000003oool5000000030?ooo`000000000000<0oooo
0P0000030?ooo`8000000P3oool200000080oooo0P0000000`3oool00000
000000030?ooo`800000103oool2000000030?ooo`000000000000<0oooo
0P0000050?ooo`800000103oool2000000030?ooo`000000000000<0oooo
0P0000040?ooo`8000001@3oool2000000030?ooo`000000000001T0oooo
0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo00D0oooo1@00
00030?ooo`8000000`3oool3000000040?ooo`0000000000000000<0oooo
0P00000I0?ooo`060000003oool000000000003oool000000P3oool40000
0080oooo1@0000040?ooo`8000000`3oool3000000040?ooo`0000000000
000000<0oooo0P00000J0?ooo`030000003oool0oooo00@0oooo1@000003
0?ooo`8000001`3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo00D0oooo0P00000I0?ooo`060000003oool000000000003oool00000
0P3oool400000080oooo1@0000040?ooo`8000001P3oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo00D0oooo0P00000M0?ooo`800000
0`3oool00`000000oooo0?ooo`04000000030?ooo`000000000000P00000
00<0oooo000000000000103oool2000000@0oooo100000020?ooo`<00000
00@0oooo00000000000000000P3oool2000000<0oooo1@0000030?ooo`D0
000000<0oooo0000000000000P0000030?ooo`D000000P3oool4000000<0
oooo1@0000020?ooo`<0000000@0oooo0000000000000000603oool10000
0040oooo0@3oool00080oooo00<000000?ooo`3oool01P3oool2000000D0
oooo0P00000=0?ooo`8000006@3oool01P000000oooo000000000000oooo
00000140oooo0P00000=0?ooo`8000006P3oool00`000000oooo0?ooo`05
0?ooo`8000001@3oool2000000P0oooo00@000000?ooo`3oool00000203o
ool2000001T0oooo00H000000?ooo`00000000000?ooo`00000A0?ooo`80
00001`3oool010000000oooo0?ooo`0000080?ooo`8000007P3oool20000
0080oooo00<000000?ooo`3oool05P3oool2000001<0oooo0P00000<0?oo
o`8000006@3oool2000002<0oooo0@0000010?ooo`40oooo00020?ooo`03
0000003oool0oooo00L0oooo0`0000030?ooo`@000002@3oool4000001T0
oooo1P00000A0?ooo`@000002@3oool4000001X0oooo00<000000?ooo`3o
ool01P3oool3000000<0oooo0P0000090?ooo`030000003oool0000000P0
oooo0P00000I0?ooo`H000004@3oool2000000P0oooo00<000000?ooo`00
0000203oool2000001l0oooo1000000F0?ooo`@000004@3oool6000000/0
oooo0`0000030?ooo`800000303oool2000000@0oooo0P00000S0?ooo`40
00000@3oool10?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`030000
003oool0oooo00`0oooo0P0000090?ooo`030000003oool0000000P0oooo
0P00000`0?ooo`800000203oool00`000000oooo000000080?ooo`800000
WP3oool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0N@3o
ool00`000000oooo0?ooo`0<0?ooo`@000001@3oool6000000D0oooo1000
000`0?ooo`@00000103oool6000000D0oooo1000002N0?ooo`4000000@3o
ool10?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0
oooo0?l0oooo2P3oool100000040oooo0@3oool00080oooo00<000000?oo
o`3oool0N@3oool00`000000oooo0?ooo`3o0?ooo`X0oooo0@0000010?oo
o`40oooo00020?ooo`030000003oool0oooo07T0oooo00<000000?ooo`3o
ool0o`3oool:0?ooo`4000000@3oool10?ooo`000P3ooooo000008X00000
0P3oool00080oooo00<000000?ooo`3oool0N@3oool00`000000oooo0?oo
o`3o0?ooo`X0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0
oooo07T0oooo00<000000?ooo`3oool0o`3oool:0?ooo`4000000@3oool1
0?ooo`000P3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0oooo
0?l0oooo2P3oool100000040oooo0@3oool00080oooo00<000000?ooo`3o
ool0N@3oool00`000000oooo0?ooo`3o0?ooo`X0oooo0@0000010?ooo`40
oooo00020?ooo`030000003oool0oooo07T0oooo00<000000?ooo`3oool0
Q03oool400000840oooo0@0000010?ooo`40oooo00020?ooo`030000003o
ool0oooo07T0oooo00<000000?ooo`3oool0Q@3oool00`000000oooo0?oo
o`210?ooo`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`1i
0?ooo`030000003oool0oooo07/0oooo100000070?ooo`030000003oool0
oooo00D0oooo1000001g0?ooo`4000000@3oool10?ooo`000P3oool00`00
0000oooo0?ooo`1i0?ooo`030000003oool0oooo07/0oooo0P00000:0?oo
o`030000003oool0oooo00H0oooo0P00001g0?ooo`4000000@3oool10?oo
o`000P3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0oooo07/0
oooo0P0000070?ooo`040000003oool0oooo000000P0oooo0P00001g0?oo
o`4000000@3oool10?ooo`000P3oool00`000000oooo0?ooo`0f0?ooo`@0
00002@3oool400000380oooo00<000000?ooo`3oool0N`3oool2000000P0
oooo0P0000090?ooo`800000M`3oool100000040oooo0@3oool00080oooo
00<000000?ooo`3oool0=P3oool2000000d0oooo0P00000b0?ooo`030000
003oool0oooo07/0oooo0P00000C0?ooo`800000M`3oool100000040oooo
0@3oool00080oooo00<000000?ooo`3oool0;P3oool5000000<0oooo0P00
00030?ooo`<0000000@0oooo00000000000000000`3oool200000380oooo
00<000000?ooo`3oool0L`3oool5000000<0oooo0P00000C0?ooo`800000
M`3oool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0;`3o
ool2000000D0oooo0P0000040?ooo`80000000<0oooo000000000000103o
ool200000380oooo00<000000?ooo`3oool0M03oool2000000D0oooo0P00
000C0?ooo`800000M`3oool100000040oooo0@3oool00080oooo00<00000
0?ooo`3oool0;`3oool2000000D0oooo0P0000050?ooo`<000001@3oool2
00000380oooo00<000000?ooo`3oool0M03oool2000000D0oooo0P000005
0?ooo`T000001@3oool2000007L0oooo0@0000010?ooo`40oooo00020?oo
o`030000003oool0oooo02l0oooo0P0000050?ooo`8000001@3oool30000
00D0oooo0P00000b0?ooo`030000003oool0oooo07@0oooo0P0000050?oo
o`8000004`3oool2000007L0oooo0@0000010?ooo`40oooo00020?ooo`03
0000003oool0oooo02l0oooo0P0000050?ooo`800000103oool200000003
0?ooo`000000000000@0oooo0P00000b0?ooo`030000003oool0oooo07@0
oooo0P0000050?ooo`8000004`3oool2000007L0oooo0@0000010?ooo`40
oooo00020?ooo`030000003oool0oooo02h0oooo1@0000030?ooo`800000
0`3oool3000000040?ooo`0000000000000000<0oooo0P00000b0?ooo`03
0000003oool0oooo07<0oooo1@0000030?ooo`8000001`3oool00`000000
oooo0?ooo`020?ooo`030000003oool0oooo00@0oooo0P00001g0?ooo`40
00000@3oool10?ooo`000P3oool00`000000oooo0?ooo`0_0?ooo`800000
1@3oool2000000d0oooo0P00000b0?ooo`030000003oool0oooo07@0oooo
0P0000050?ooo`800000203oool010000000oooo0?ooo`0000070?ooo`80
0000M`3oool100000040oooo0@3oool00080oooo00<000000?ooo`3oool0
<03oool3000000<0oooo100000090?ooo`@00000<P3oool00`000000oooo
0?ooo`1e0?ooo`<000000`3oool2000000T0oooo00<000000?ooo`000000
1`3oool2000007L0oooo0@0000010?ooo`40oooo00020?ooo`030000003o
ool0oooo07T0oooo00<000000?ooo`3oool0N`3oool2000000T0oooo00<0
00000?ooo`0000001`3oool2000007L0oooo0@0000010?ooo`40oooo0002
0?ooo`030000003oool0oooo07T0oooo00<000000?ooo`3oool0N`3oool4
000000D0oooo1P0000040?ooo`@00000M`3oool100000040oooo0@3oool0
0080oooo00<000000?ooo`3oool0N@3oool00`000000oooo0?ooo`3o0?oo
o`X0oooo0@0000010?ooo`40oooo00020?ooo`030000003oool0oooo07T0
oooo00<000000?ooo`3oool0o`3oool:0?ooo`4000000@3oool10?ooo`00
0P3oool00`000000oooo0?ooo`1i0?ooo`030000003oool0oooo0?l0oooo
2P3oool100000040oooo0@3oool00080ooooo`00002:00000080oooo003o
0?ooohh0oooo0000\
\>"], "Input",
  Evaluatable->False,
  ImageSize->{397, 105},
  ImageMargins->{{0, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}}],

Cell[BoxData[
    \(Tan[\[Pi]\/2]\)], "Input"],

Cell[BoxData[
    \(Sec[\[Pi]\/2]\)], "Input"],

Cell[BoxData[
    \(\((Sec[\[Pi]\/2])\)\^2\)], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Definition (",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["Removable Singularity",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/RemovableSingularity.html"], None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[").",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  "A singular point ",
  Cell[BoxData[
      \(x = c\)]],
  " is called a removable singularity if ",
  Cell[BoxData[
      \(f \((x)\)\)]],
  " has a Taylor series expansion about ",
  Cell[BoxData[
      \(x = c\)]],
  ", i.e.  if  ",
  Cell[BoxData[
      \(f \((x)\)\)]],
  " has a representation of the form \n\n\t\t\t",
  Cell[BoxData[
      \(f \((x)\)\  = \ \(a\_0 + \(a\_1\) \((x - 
                      c)\)\  + \(a\_2\) \((x - c)\)\^2\  +  ... \) + \(a\_n\) \
\((x - c)\)\^n\  +  ... \)]],
  "   \n\n\t\t\t",
  Cell[BoxData[
      \(f \((x)\)\  = \ \[Sum]\+\(i = 0\)\%\[Infinity]\( 
                a\_i\) \((x - c)\)\^i\)]],
  "  valid for  ",
  Cell[BoxData[
      \(\(\(|\)\(x - c\)\(|\)\(\(<\)\(r\)\)\)\)]],
  ".  ",
  StyleBox["\n\nA common situation is that ",
    FontFamily->"Times New Roman"],
  " ",
  Cell[BoxData[
      \(f \((c)\)\)]],
  " is not defined and we only need to ",
  StyleBox["define ",
    FontFamily->"Times New Roman"],
  " ",
  Cell[BoxData[
      \(f \((c)\) = a\_0\)]],
  StyleBox["  in order to \"remove the singularity.\" ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["Example 2.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox["  The",
    FontFamily->"Times New Roman"],
  " function  ",
  Cell[BoxData[
      \(f[x]\  = \ sin[x]\/x\)]],
  "  ",
  StyleBox[" has a removable singularity at ",
    FontFamily->"Times New Roman"],
  "the point  ",
  Cell[BoxData[
      \(x = 0\)]],
  ".  "
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 2.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[TextData[{
  "Here we observe that ",
  Cell[BoxData[
      \(f[0] = \(\(Sin[0]\/0\)\(=\)\)\)]],
  " \"",
  Cell[BoxData[
      \(0\/0\)]],
  "\" is undefined.  The correct way to remove this singularity is to take \
the limit as  ",
  Cell[BoxData[
      \(x \[Rule] 0\)]],
  ". "
}], "Text"],

Cell[BoxData[{
    \(\(f[x_] = Sin[x]\/x;\)\), "\[IndentingNewLine]", 
    \(\(lim\  = \ Limit[f[x], x \[Rule] 0];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[0] = \>", f[0]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<lim\>"\+\(x \[Rule] 0\), "\< f[x] = \>", 
        lim\ ];\)\ \)}], "Input"],

Cell[TextData[{
  "We can expand  ",
  Cell[BoxData[
      \(Sin[x]\)]],
  "  in a Maclaurin series and then divide through by  ",
  Cell[BoxData[
      \(x\)]],
  "  to verify that this is correct.   \nWe can use ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " to obtain the first few terms in the series. "
}], "Text"],

Cell[BoxData[{
    \(\(s[x_] = Series[Sin[x], {x, 0, 15}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<s[x] = \>", s[x]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<\!\(s[x]\/x\) = \>\"", s[x]\/x\ ];\)\)}], "Input"],

Cell[TextData[{
  "Or we can use ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " to find the first few terms of the Taylor series for ",
  Cell[BoxData[
      \(f[x] = Sin[x]\/x\)]],
  ". "
}], "Text"],

Cell[BoxData[{
    \(\(f[x_] = Sin[x]\/x;\)\), "\[IndentingNewLine]", 
    \(\(p[x_] = Series[f[x], {x, 0, 15}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<p[x] = \>", Normal[p[x]]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<p[0] = \>", Normal[p[0]]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Define  f[0] = p[0] = 1  and we have\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", 
        Normal[p[x]], "\< + ...\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", p[x]\ ];\)\ \)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Definition (",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["Pole",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/Pole.html"], None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  StyleBox[").",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  "A singular point ",
  Cell[BoxData[
      \(x = c\)]],
  " is called a pole if ",
  Cell[BoxData[
      \(f \((x)\)\)]],
  " has a series expansion about ",
  Cell[BoxData[
      \(x = c\)]],
  " which includes only a finite number of negative powers ",
  Cell[BoxData[
      \(\((x - c)\)\^j\)]],
  " with  ",
  Cell[BoxData[
      \(j < 0\)]],
  ",  i.e.  if  ",
  Cell[BoxData[
      \(f \((x)\)\)]],
  " has a representation of the form \n\n\t\t\t",
  Cell[BoxData[
      \(f \((x)\)\  = \ \(\(\(\(a\_\(-m\)\/\((x - c)\)\^m\)\(+\)\) ... \) + 
                a\_\(-1\)\/\(x - c\) + 
                a\_0 + \(a\_1\) \((x - 
                      c)\)\  + \(a\_2\) \((x - c)\)\^2\  +  ... \) + \(a\_n\) \
\((x - c)\)\^n\  +  ... \)]],
  "   \n\n\t\t\t",
  Cell[BoxData[
      \(f \((x)\)\  = \ \[Sum]\+\(i = \(-m\)\)\%\[Infinity]\( 
                a\_i\) \((x - c)\)\^i\)]],
  "  valid for  ",
  Cell[BoxData[
      \(\(\(|\)\(x - c\)\(|\)\(\(<\)\(r\)\)\)\)]],
  ".  \n\nThe leading coefficient must be non-zero,  ",
  Cell[BoxData[
      \(a\_\(-m\) \[NotEqual] 0\)]],
  ",  and we say that ",
  Cell[BoxData[
      \(f \((x)\)\)]],
  " has a pole of order  ",
  Cell[BoxData[
      \(m\)]],
  "  at  ",
  Cell[BoxData[
      \(x = c\)]],
  ".  When  ",
  Cell[BoxData[
      \(m = 1\)]],
  "  we say it has a ",
  ButtonBox["simple pole",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/SimplePole.html"], None},
    ButtonStyle->"Hyperlink"],
  " at  ",
  Cell[BoxData[
      \(x = c\)]],
  ". "
}], "Text"],

Cell[TextData[{
  StyleBox["Remark.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  When you look at the graph  ",
  Cell[BoxData[
      \(y = f \((x)\)\)]],
  ", a pole at  ",
  Cell[BoxData[
      \(x = c\)]],
  "  is a vertical asymptote at  ",
  Cell[BoxData[
      \(x = c\)]],
  ".     "
}], "Text"],

Cell[TextData[{
  StyleBox["Theorem (Poles and Zeros).",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "  If  ",
  Cell[BoxData[
      \(y\  = \ f \((x)\)\)]],
  "  has a pole at  ",
  Cell[BoxData[
      \(x = c\)]],
  "  then the function  ",
  Cell[BoxData[
      \(y\  = \ \(g \((x)\)\  = \ 1\/\(f \((x)\)\)\)\)]],
  "  has a removable singularity at  ",
  Cell[BoxData[
      \(x = c\)]],
  ".  If we define  ",
  Cell[BoxData[
      \(g \((c)\) = 0\)]],
  "   then the equation  ",
  Cell[BoxData[
      \(g \((x)\) = 0\)]],
  "  will have a root at  ",
  Cell[BoxData[
      \(x = c\)]],
  "."
}], "Text"],

Cell[TextData[{
  StyleBox["Example 3 (a).",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox["  The",
    FontFamily->"Times New Roman"],
  " functions  ",
  Cell[BoxData[
      \(f[x]\  = \ 1\/x, 1\/x\^2, Cot[x], Csc[x], \((Csc[x])\)\^2\)]],
  "  ",
  StyleBox[" have poles at ",
    FontFamily->"Times New Roman"],
  "the point  ",
  Cell[BoxData[
      \(x = 0\)]],
  ".  \n",
  StyleBox["3 (b)",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox[".",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox["  The",
    FontFamily->"Times New Roman"],
  " functions  ",
  Cell[BoxData[
      \(f[x]\  = \ Tan[x], Sec[x], \((Sec[x])\)\^2\)]],
  "  ",
  StyleBox[" have poles at ",
    FontFamily->"Times New Roman"],
  "the point  ",
  Cell[BoxData[
      \(x = \[Pi]\/2\)]],
  ".  "
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 3 (a).",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(f[x_] = 1\/x;\)\), "\[IndentingNewLine]", 
    \(\(p[x_] = Series[f[x], {x, 0, 15}];\)\), "\[IndentingNewLine]", 
    \(\(m = \(-\(p[x]\)\_\(\(\[LeftDoubleBracket]\)\(-3\)\(\
\[RightDoubleBracket]\)\)\);\)\), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(gr1 = 
        Plot[f[x], {x, \(-1\), \(-0.0001\)}, PlotStyle \[Rule] Red, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(gr2 = 
        Plot[f[x], {x, 0.0001, 1}, PlotStyle \[Rule] Red, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(Show[gr1, gr2, PlotRange \[Rule] {{\(-1\), 1}, {\(-20\), 20}}, 
        Ticks \[Rule] {Range[\(-1\), 1, 0.5], Range[\(-20\), 20, 10]}, 
        DisplayFunction \[Rule] $DisplayFunction];\)\), \
"\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Has a pole of order  m = \>", m, "\<  at  x = \>", 
        0\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", 
        Normal[p[x]], "\< + ...\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", p[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The largest negative power is \>", 1\/x\^m\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(f[x_] = 1\/x\^2;\)\), "\[IndentingNewLine]", 
    \(\(p[x_] = Series[f[x], {x, 0, 15}];\)\), "\[IndentingNewLine]", 
    \(\(m = \(-\(p[x]\)\_\(\(\[LeftDoubleBracket]\)\(-3\)\(\
\[RightDoubleBracket]\)\)\);\)\), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(gr1 = 
        Plot[f[x], {x, \(-1\), \(-0.0001\)}, PlotStyle \[Rule] Blue, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(gr2 = 
        Plot[f[x], {x, 0.0001, 1}, PlotStyle \[Rule] Blue, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(Show[gr1, gr2, PlotRange \[Rule] {{\(-1\), 1}, {0, 500}}, 
        Ticks \[Rule] {Range[\(-1\), 1, 0.5], Range[0, 500, 100]}, 
        DisplayFunction \[Rule] $DisplayFunction];\)\), \
"\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Has a pole of order  m = \>", m, "\<  at  x = \>", 
        0\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", 
        Normal[p[x]], "\< + ...\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", p[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The largest negative power is \>", 1\/x\^m\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(f[x_] = Cot[x];\)\), "\[IndentingNewLine]", 
    \(\(p[x_] = Series[f[x], {x, 0, 15}];\)\), "\[IndentingNewLine]", 
    \(\(m = \(-\(p[x]\)\_\(\(\[LeftDoubleBracket]\)\(-3\)\(\
\[RightDoubleBracket]\)\)\);\)\), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(gr1 = 
        Plot[f[x], {x, \(-1\), \(-0.0001\)}, PlotStyle \[Rule] Red, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(gr2 = 
        Plot[f[x], {x, 0.0001, 1}, PlotStyle \[Rule] Red, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(Show[gr1, gr2, PlotRange \[Rule] {{\(-1\), 1}, {\(-20\), 20}}, 
        Ticks \[Rule] {Range[\(-1\), 1, 0.5], Range[\(-20\), 20, 10]}, 
        DisplayFunction \[Rule] $DisplayFunction];\)\), \
"\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Has a pole of order  m = \>", m, "\<  at  x = \>", 
        0\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", 
        Normal[p[x]], "\< + ...\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", p[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The largest negative power is \>", 1\/x\^m\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(f[x_] = Csc[x];\)\), "\[IndentingNewLine]", 
    \(\(p[x_] = Series[f[x], {x, 0, 15}];\)\), "\[IndentingNewLine]", 
    \(\(m = \(-\(p[x]\)\_\(\(\[LeftDoubleBracket]\)\(-3\)\(\
\[RightDoubleBracket]\)\)\);\)\), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(gr1 = 
        Plot[f[x], {x, \(-1\), \(-0.0001\)}, PlotStyle \[Rule] Red, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(gr2 = 
        Plot[f[x], {x, 0.0001, 1}, PlotStyle \[Rule] Red, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(Show[gr1, gr2, PlotRange \[Rule] {{\(-1\), 1}, {\(-20\), 20}}, 
        Ticks \[Rule] {Range[\(-1\), 1, 0.5], Range[\(-20\), 20, 10]}, 
        DisplayFunction \[Rule] $DisplayFunction];\)\), \
"\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Has a pole of order  m = \>", m, "\<  at  x = \>", 
        0\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", 
        Normal[p[x]], "\< + ...\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", p[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The largest negative power is \>", 1\/x\^m\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(f[x_] = \((Csc[x])\)\^2;\)\), "\[IndentingNewLine]", 
    \(\(p[x_] = Series[f[x], {x, 0, 15}];\)\), "\[IndentingNewLine]", 
    \(\(m = \(-\(p[x]\)\_\(\(\[LeftDoubleBracket]\)\(-3\)\(\
\[RightDoubleBracket]\)\)\);\)\), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(gr1 = 
        Plot[f[x], {x, \(-1\), \(-0.0001\)}, PlotStyle \[Rule] Blue, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(gr2 = 
        Plot[f[x], {x, 0.0001, 1}, PlotStyle \[Rule] Blue, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(Show[gr1, gr2, PlotRange \[Rule] {{\(-1\), 1}, {0, 500}}, 
        Ticks \[Rule] {Range[\(-1\), 1, 0.5], Range[0, 500, 100]}, 
        DisplayFunction \[Rule] $DisplayFunction];\)\), \
"\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Has a pole of order  m = \>", m, "\<  at  x = \>", 
        0\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", 
        Normal[p[x]], "\< + ...\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", p[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The largest negative power is \>", 1\/x\^m\ ];\)\)}], "Input"],

Cell[TextData[{
  StyleBox["Remark 1.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  "  The graphs of   ",
  Cell[BoxData[
      \(f[x]\  = \ 1\/x, Cot[x], Csc[x]\)]],
  " look similar (in Red) because they have simple poles of order ",
  Cell[BoxData[
      \(m = 1\)]],
  ".  "
}], "Text"],

Cell[TextData[{
  StyleBox["Remark 2.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  "  The graphs of   ",
  Cell[BoxData[
      \(f[x]\  = \ 1\/x\^2, \((Csc[x])\)\^2\)]],
  " look similar (in Blue) because they have poles of order ",
  Cell[BoxData[
      \(m = 2\)]],
  ".  "
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 3 (b).",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(f[x_] = Tan[x];\)\), "\[IndentingNewLine]", 
    \(\(c = \[Pi]\/2;\)\), "\[IndentingNewLine]", 
    \(\(p[x_] = Series[f[x], {x, c, 5}];\)\), "\[IndentingNewLine]", 
    \(\(m = \(-\(p[x]\)\_\(\(\[LeftDoubleBracket]\)\(-3\)\(\
\[RightDoubleBracket]\)\)\);\)\), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(gr1 = 
        Plot[f[x], {x, 0, c - 0.0001}, PlotStyle \[Rule] Red, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(gr2 = 
        Plot[f[x], {x, c + 0.0001, \[Pi]}, PlotStyle \[Rule] Red, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(Show[gr1, gr2, PlotRange \[Rule] {{0, \[Pi]}, {\(-40\), 40}}, 
        Ticks \[Rule] {Range[0, \[Pi], \[Pi]\/4], Range[\(-40\), 40, 10]}, 
        DisplayFunction \[Rule] $DisplayFunction];\)\), \
"\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Has a pole of order  m = \>", m, "\<  at  x = \>", 
        c\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", 
        Normal[p[x]], "\< + ...\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", p[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The largest negative power is \>", 
        1\/\((x - c)\)\^m\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(f[x_] = Sec[x];\)\), "\[IndentingNewLine]", 
    \(\(c = \[Pi]\/2;\)\), "\[IndentingNewLine]", 
    \(\(p[x_] = Series[f[x], {x, c, 5}];\)\), "\[IndentingNewLine]", 
    \(\(m = \(-\(p[x]\)\_\(\(\[LeftDoubleBracket]\)\(-3\)\(\
\[RightDoubleBracket]\)\)\);\)\), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(gr1 = 
        Plot[f[x], {x, 0, c - 0.0001}, PlotStyle \[Rule] Red, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(gr2 = 
        Plot[f[x], {x, c + 0.0001, \[Pi]}, PlotStyle \[Rule] Red, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(Show[gr1, gr2, PlotRange \[Rule] {{0, \[Pi]}, {\(-40\), 40}}, 
        Ticks \[Rule] {Range[0, \[Pi], \[Pi]\/4], Range[\(-40\), 40, 10]}, 
        DisplayFunction \[Rule] $DisplayFunction];\)\), \
"\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Has a pole of order  m = \>", m, "\<  at  x = \>", 
        c\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", 
        Normal[p[x]], "\< + ...\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", p[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The largest negative power is \>", 
        1\/\((x - c)\)\^m\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(f[x_] = \((Sec[x])\)\^2;\)\), "\[IndentingNewLine]", 
    \(\(c = \[Pi]\/2;\)\), "\[IndentingNewLine]", 
    \(\(p[x_] = Series[f[x], {x, c, 5}];\)\), "\[IndentingNewLine]", 
    \(\(m = \(-\(p[x]\)\_\(\(\[LeftDoubleBracket]\)\(-3\)\(\
\[RightDoubleBracket]\)\)\);\)\), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(gr1 = 
        Plot[f[x], {x, 0, c - 0.0001}, PlotStyle \[Rule] Blue, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(gr2 = 
        Plot[f[x], {x, c + 0.0001, \[Pi]}, PlotStyle \[Rule] Blue, 
          DisplayFunction \[Rule] Identity];\)\), "\[IndentingNewLine]", 
    \(\(Show[gr1, gr2, PlotRange \[Rule] {{0, \[Pi]}, {0, 500}}, 
        Ticks \[Rule] {Range[0, \[Pi], \[Pi]\/4], Range[0, 500, 100]}, 
        DisplayFunction \[Rule] $DisplayFunction];\)\), \
"\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Has a pole of order  m = \>", m, "\<  at  x = \>", 
        c\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", 
        Normal[p[x]], "\< + ...\>"\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", p[x]\ ];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<The largest negative power is \>", 
        1\/\((x - c)\)\^m\ ];\)\)}], "Input"],

Cell[TextData[{
  StyleBox["Remark 1.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  "  The graphs of   ",
  Cell[BoxData[
      \(f[x]\  = \ Tan[x], Sec[x]\)]],
  " look similar (in Red) because they have simple poles at  ",
  Cell[BoxData[
      \(x = \[Pi]\/2\)]],
  ".  of order ",
  Cell[BoxData[
      \(m = 1\)]],
  ".  "
}], "Text"]
}, Closed]],

Cell[TextData[{
  StyleBox["Definition (",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["Logarithmic Singularity",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/LogarithmicSingularity.html"], None},
    
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  StyleBox[").",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  "A ",
  ButtonBox["logarithmic singularity",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/LogarithmicSingularity.html"], None},
    
    ButtonStyle->"Hyperlink"],
  " involves a ",
  ButtonBox["logarithmic branch point",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/LogarithmicBranchPoint.html"], None},
    
    ButtonStyle->"Hyperlink"],
  " in the complex plane. \n\nFor example, the function  ",
  Cell[BoxData[
      \(f[x]\  = \ Log[x]\)]],
  " has a logarithmic singularitie at the point  ",
  Cell[BoxData[
      \(x = 0\)]],
  ".  "
}], "Text"],

Cell[TextData[{
  StyleBox["Definition (",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["Algebraic Branch Point",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/AlgebraicBranchPoint.html"], None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  StyleBox[").",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  "A algebraic branch point is a singular point associated with a fractional \
power.\n\nFor example, the \"",
  ButtonBox["multivalued function",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/MultivaluedFunction.html"], None},
    ButtonStyle->"Hyperlink"],
  "\"  ",
  Cell[BoxData[
      \(f[x]\  = \ \(\[PlusMinus]\ x\^\(1/2\)\)\)]],
  " has ",
  ButtonBox["algebraic branch point",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/AlgebraicBranchPoint.html"], None},
    ButtonStyle->"Hyperlink"],
  " at  ",
  Cell[BoxData[
      \(x = 0\)]],
  ".  "
}], "Text"],

Cell[TextData[{
  "\n",
  StyleBox["Restriction",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "\n\n\tThe ",
  StyleBox["Painlev\[EAcute] property",
    FontFamily->"Times New Roman"],
  " excludes the occurance of logarighmic branch points and algebraic branch \
points.  The underlying solution must be ",
  ButtonBox["analytic",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/AnalyticFunction.html"], None},
    ButtonStyle->"Hyperlink"],
  " except at isolated points where it has poles. It is not necessary to \
dwell on the above definitions, but it is important to know that we are \
restricting the type of singularities we want to allow. "
}], "Text"],

Cell[TextData[{
  StyleBox["Definition (",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["Movable Singularity",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/MovableSingularity.html"], None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  StyleBox[").",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  If the singularities of a differential equation depend on the \
initial conditions then they are said to be movable singularities. ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["Definition 1. ",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[ButtonBox["(Painlev\[EAcute] Property",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/PainleveProperty.html"], None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  StyleBox[")",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["  The",
    FontFamily->"Times New Roman"],
  " second-order ordinary differential equation  ",
  Cell[BoxData[
      \(y''\  = \ F \((y', y, x)\)\)]],
  " has the ",
  ButtonBox["Painlev\[EAcute] property",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/PainleveProperty.html"], None},
    ButtonStyle->"Hyperlink"],
  StyleBox[" if  all movable singularities of all solutions are poles. ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["Remark.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  We will take the liberty to extend this concept to first order \
equations.  "
}], "Text"],

Cell[TextData[{
  StyleBox["Definition 2. (Painlev\[EAcute] Property)",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["   The",
    FontFamily->"Times New Roman"],
  " first-order ordinary differential equation  ",
  Cell[BoxData[
      \(y'\  = \ F \((y, x)\)\)]],
  " has the ",
  StyleBox["Painlev\[EAcute] property if  all movable singularities of all \
solutions are poles. ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["Remark.",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  "  Movable singularities depend on initial conditions and in general it is \
difficult to predict their location.  The following examples have been chosen \
because the analytic solution can be found. "
}], "Text"],

Cell[TextData[{
  StyleBox["Example 4.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  Investigate the initial value problem  ",
  Cell[BoxData[
      \(y'\  = \ y\^2\)]],
  "  with  ",
  Cell[BoxData[
      \(y \((0)\) = 1\/c\)]],
  ".   "
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 4.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(Clear[c];\)\), "\[IndentingNewLine]", 
    \(\(deqns = {\(y'\)[x]\  \[Equal] \ \((y[x])\)\^2, 
          y[0] \[Equal] 1\/c};\)\), "\[IndentingNewLine]", 
    \(\(solset = DSolve[deqns, y[x], x];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the D.E. with I.C.'s\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\ deqns\ ];\)\), "\[IndentingNewLine]", 
    \(\(f[x_] = 
        solset\_\(\(\[LeftDoubleBracket]\)\(1, 1, \
2\)\(\[RightDoubleBracket]\)\);\)\), "\[IndentingNewLine]", 
    \(\(g[x_] = 1\/f[x];\)\ \), "\[IndentingNewLine]", 
    \(\(s[x_] = Series[g[x], {x, c, 9}];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<Consider the function g[x] = \!\(1\/f[x]\)\>\""];\)\ \), \
"\[IndentingNewLine]", 
    \(\(Print["\<g[x] = \>", g[x]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Expand it about x = c.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<g[x] = \>", s[x]\ ];\)\)}], "Input"],

Cell[TextData[{
  "The function  ",
  Cell[BoxData[
      \(g \((x)\)\)]],
  "  has a removable singularity at  ",
  Cell[BoxData[
      \(x = c\)]],
  ",  because it's series expansion has a simple zero at  ",
  Cell[BoxData[
      \(x = c\)]],
  ".   "
}], "Text"],

Cell[TextData[{
  "Therefore, the function  ",
  Cell[BoxData[
      \(f \((x)\)\)]],
  "  has a simple pole at  ",
  Cell[BoxData[
      \(x = c\)]],
  ".   "
}], "Text"],

Cell[TextData[{
  "The solution  ",
  Cell[BoxData[
      \(y\  = \ \(f \((x)\)\  = \ 1\/\(c - x\)\)\)]],
  "  to the D. E.   ",
  Cell[BoxData[
      \(y'\  = \ y\^2\)]],
  "  has a movable singularity at the point ",
  Cell[BoxData[
      \(x = c\)]],
  ".  "
}], "Text"],

Cell[TextData[{
  "Therefore, the differential equation  ",
  Cell[BoxData[
      \(y'\  = \ y\^2\)]],
  "  has the ",
  StyleBox["Painlev\[EAcute] property",
    FontFamily->"Times New Roman"],
  ".   "
}], "Text"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 5.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "   Investigate the initial value problem  ",
  Cell[BoxData[
      \(y'\  = \ y\^3\)]],
  "  with  ",
  Cell[BoxData[
      \(y \((0)\) = 1\/\@\(2  c\)\)]],
  ".   "
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 5.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(Clear[c];\)\), "\[IndentingNewLine]", 
    \(\(deqns = {\(y'\)[x]\  \[Equal] \ \((y[x])\)\^3, 
          y[0] \[Equal] 1\/\@\(2  c\)};\)\), "\[IndentingNewLine]", 
    \(\(solset = DSolve[deqns, y[x], x];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the D.E. with I.C.'s\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\ deqns\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print[solset];\)\), "\[IndentingNewLine]", 
    \(\(f[x_] = 
        solset\_\(\(\[LeftDoubleBracket]\)\(2, 1, \
2\)\(\[RightDoubleBracket]\)\);\)\), "\[IndentingNewLine]", 
    \(\(g[x_] = 1\/f[x];\)\ \), "\[IndentingNewLine]", 
    \(\(s[x_] = Series[g[x], {x, c, 9}];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<Consider the function g[x] = \!\(1\/f[x]\)\>\""];\)\ \), \
"\[IndentingNewLine]", 
    \(\(Print["\<g[x] = \>", g[x]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Expand it about x = c.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<g[x] = \>", s[x]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Remark. The expansion does not exist as a power series!\>"\ \
];\)\)}], "Input"],

Cell[TextData[{
  "The function  ",
  Cell[BoxData[
      \(g \((x)\)\)]],
  "  does not have a removable singularity at  ",
  Cell[BoxData[
      \(x = c\)]],
  ".  "
}], "Text"],

Cell[TextData[{
  StyleBox["Remark.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 1, 0]],
  StyleBox["  The function   ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(g[x]\  = \ \@\(2\ c - 2\ x\)\)]],
  StyleBox["   can be considered a multivalued function and does not have a \
removable singularity, it's",
    FontFamily->"Times New Roman"],
  " singularities are ",
  ButtonBox["algebraic branch points",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/AlgebraicBranchPoint.html"], None},
    ButtonStyle->"Hyperlink"],
  ". ",
  StyleBox["\n\nThe singularities of the function   ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(f \((x)\)\  = \ \(\[PlusMinus]1\)\/\@\(2\ c - 2\ x\)\)]],
  "  are not poles, they are ",
  ButtonBox["algebraic branch points",
    ButtonData:>{
      URL[ "http://mathworld.wolfram.com/AlgebraicBranchPoint.html"], None},
    ButtonStyle->"Hyperlink"],
  ". \n\nTherefore, the differential equation  ",
  Cell[BoxData[
      \(y'\  = \ y\^3\)]],
  "  does ",
  StyleBox["not",
    FontColor->RGBColor[1, 0, 0]],
  " have the ",
  StyleBox["Painlev\[EAcute] property",
    FontFamily->"Times New Roman"],
  ".     "
}], "Text"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 6.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "   Investigate the initial value problem  ",
  Cell[BoxData[
      \(y'\  = \ \(1\/x\) y\^2\)]],
  "  with  ",
  Cell[BoxData[
      \(y \((1)\) = 1\/Log[c]\)]],
  ".   "
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 6.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(Clear[c];\)\), "\[IndentingNewLine]", 
    \(\(deqns = {\(y'\)[x]\  \[Equal] \ \(1\/x\) \((y[x])\)\^2, 
          y[1] \[Equal] 1\/Log[c]};\)\), "\[IndentingNewLine]", 
    \(\(solset = DSolve[deqns, y[x], x];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the D.E. with I.C.'s\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\ deqns\ ];\)\), "\[IndentingNewLine]", 
    \(\(f[x_] = 
        solset\_\(\(\[LeftDoubleBracket]\)\(1, 1, \
2\)\(\[RightDoubleBracket]\)\);\)\), "\[IndentingNewLine]", 
    \(\(g[x_] = 1\/f[x];\)\ \), "\[IndentingNewLine]", 
    \(\(s[x_] = Series[g[x], {x, c, 9}];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print[\*"\"\<Consider the function g[x] = \!\(1\/f[x]\)\>\""];\)\ \), \
"\[IndentingNewLine]", 
    \(\(Print["\<g[x] = \>", g[x]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Expand it about x = c.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<g[x] = \>", s[x]\ ];\)\)}], "Input"],

Cell[TextData[{
  "The function  ",
  Cell[BoxData[
      \(g \((x)\)\)]],
  "  has a removable singularity at  ",
  Cell[BoxData[
      \(x = c\)]],
  ",  because it's series expansion has a simple zero at  ",
  Cell[BoxData[
      \(x = c\)]],
  ".   "
}], "Text"],

Cell[TextData[{
  "Therefore, the function  ",
  Cell[BoxData[
      \(f \((x)\)\)]],
  "  has a simple pole at  ",
  Cell[BoxData[
      \(x = c\)]],
  ".   "
}], "Text"],

Cell[TextData[{
  "The solution  ",
  Cell[BoxData[
      \(y\  = \ \(f \((x)\)\  = \ 1\/\(Log[c] - Log[x]\)\)\)]],
  "  to the D. E.   ",
  Cell[BoxData[
      \(y'\  = \ \(1\/x\) y\^2\)]],
  "  has a movable singularity at the point ",
  Cell[BoxData[
      \(x = c\)]],
  ".  "
}], "Text"],

Cell[TextData[{
  "Therefore, the differential equation  ",
  Cell[BoxData[
      \(y'\  = \ \(1\/x\) y\^2\)]],
  "  has the ",
  StyleBox["Painlev\[EAcute] property",
    FontFamily->"Times New Roman"],
  ".   "
}], "Text"]
}, Closed]],

Cell[TextData[{
  StyleBox["Computed Solution Curves for Differential Equations",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox["\n\n\tAn important problem in numerical analysis is to compute \
approximate solutions of the differential equation  \n\n(1)\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y' \((x)\)\  = \ f \((x, y \((x)\))\)\)]],
  ".  ",
  StyleBox["\n",
    FontFamily->"Times New Roman"],
  StyleBox["\n",
    FontFamily->"Times New Roman",
    FontVariations->{"CompatibilityType"->"Superscript"}],
  StyleBox["Under modest (and well known) assumptions on f, the \"general \
solution\" of (1) consists of an infinite family of functions, each of which \
may be distinguished by selection of an initial point ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\((a, y \((a)\))\)\)]],
  StyleBox[".  Starting from this initial point, numerical methods attempt to \
approximate the solution  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y = y \((x)\)\)]],
  StyleBox["  on some specified interval",
    FontFamily->"Times New Roman"],
  "  ",
  Cell[BoxData[
      \(a \[LessEqual] x \[LessEqual] b\)]],
  ".   ",
  StyleBox["Continuity of  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(f \((x, y)\)\)]],
  StyleBox["  does not ensure the continuity of  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y \((x)\)\)]],
  StyleBox[". ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["\tSuppose that  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y \((x)\)\)]],
  StyleBox["  has an infinite discontinuity at",
    FontFamily->"Times New Roman"],
  "  ",
  Cell[BoxData[
      \(x = c\)]],
  StyleBox[",  that is ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(lim\+\(x \[Rule] c\)\ \(\(|\)\(y \((x)\)\)\(|\)\)\  = \ \
\[Infinity]\)]],
  StyleBox[".  Then the reciprocal  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(Y \((x)\) = 1\/\(y \((x)\)\)\)]],
  StyleBox["  tends to zero as  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(x \[Rule] c\)]],
  StyleBox[",  and  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(Y \((x)\)\)]],
  "  ",
  StyleBox["will have a removable singularity at",
    FontFamily->"Times New Roman"],
  "  ",
  Cell[BoxData[
      \(x = c\)]],
  StyleBox["  provided that we define  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(Y \((c)\) = 0\)]],
  StyleBox[".   We can use the change of variable \n\n(2)\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(Y \((x)\)\  = \ 1\/\(y \((x)\)\)\)]],
  ".  ",
  StyleBox["\n\nNow differentiate each side of (2) and get \n\n\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(Y' \((x)\)\  = \ \(\(-\(\(y' \((x)\)\)\/\((y \((x)\))\)\^2\)\)\  = \ \
\(-\((Y \((x)\))\)\^2\) y' \((x)\)\)\)]],
  "  ",
  StyleBox["\n\nThen substitute  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y' \((x)\)\)]],
  StyleBox["  from (1) and obtain \n\n(3)\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(Y' \((x)\)\  = \ \(-\((Y \((x)\))\)\^2\) 
          f \((x, 1\/\(Y \((x)\)\))\)\)]],
  "  ",
  StyleBox["\n\nDifferential equation (3) is equivalent to (1) in this sense: \
 Given a neighborhood N of  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(x\_0\)]],
  StyleBox["  and a number  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y\_0 \[NotEqual] 0\)]],
  StyleBox[",  equation (1) has a solution with  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y \((x\_0)\) = y\_0\)]],
  StyleBox["  and  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y \((x)\) \[NotEqual] 0\)]],
  StyleBox["  for all x in N if and only if equation (3) has a solution with  \
",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(Y \((x\_0)\) = 1\/y\_0\)]],
  StyleBox["  and  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(Y \((x)\) \[NotEqual] 0\)]],
  StyleBox[". ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["\tWe call equation (3) the companion differential equation and \
write it as\n\n(4)\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(Y' \((x)\)\  = \ g \((x, Y \((x)\))\)\)]],
  ".    "
}], "Text"],

Cell[TextData[{
  StyleBox["\tNumerical methods \"track\" a specific solution curve through \
the starting point  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\((x\_0, y\_0)\)\)]],
  StyleBox[".  The success of using (4) for tracking the solution  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y \((x)\)\)]],
  StyleBox["  near a singularity is the fact that  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\(\(|\)\(y \((x)\)\)\(|\)\) \[Rule] \[Infinity]\)]],
  StyleBox["  as  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(x \[Rule] c\)]],
  StyleBox["  if and only if  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\(\(|\)\(Y \((x)\)\)\(|\)\) \[Rule] 0\)]],
  StyleBox["  as  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(x \[Rule] c\)]],
  StyleBox[".  A numerical solution  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(Y \((x)\)\)]],
  StyleBox["  to (4) can be computed over a small interval containing  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(c\)]],
  StyleBox[",  then (2) is used to determine a solution curve for (1) that \
lies on both sides of the vertical asymptote  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(x = c\)]],
  StyleBox[".  ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["\tA procedure such as the Runge-Kutta method, uses a fixed step \
size  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(h = \(b - a\)\/m\)]],
  StyleBox["  and for each  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(x\_j\  = \ a + j\ h\)]],
  StyleBox["  an approximation  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{\(y\_j\), "  ", 
        StyleBox["to",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "  ", "y", \((x\_j)\)}]]],
  "  ",
  StyleBox["is computed for  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{\(j = 1\), 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "2", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "...", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "m"}]]],
  StyleBox[".  If  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\(\(|\)\(y \((x)\)\)\(|\)\) \[Rule] \[Infinity]\)]],
  StyleBox["  as  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(x \[Rule] c\)]],
  StyleBox["  then the numerical method fails to follow the true solution \
accurately because of the inherent numerical instability of computing a \
\"rise\" as the product of a very large slope and very small \"run\" (a \
computation which magnifies the error present in the value ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y\_\(j - 1\)\)]],
  ")",
  StyleBox[".   One way to reduce this error is to select a bound B and \
change computational strategy as soon as a value  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y\_L\)]],
  "  ",
  StyleBox["is computed for which  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\(\(|\)\(y\_L\)\(|\)\(\(>\)\(\ \)\(B\)\)\)\)]],
  StyleBox[", that is, as soon as the possibility of a singularity is \
\"sensed.\"   Then we stop using (1) and start with the point  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\((x\_L, 1\/y\_L)\)\)]],
  StyleBox["  ",
    FontFamily->"Times New Roman",
    FontSlant->"Italic"],
  StyleBox["as an initial value to the differential equation (4).  Then \
proceed to track the reciprocal  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(Y \((x)\)\)]],
  StyleBox[",  which will not suffer from the difficulties created by steep \
slopes.",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["\tThe following strategy can be employed to extend any \
single-step numerical method.  We use equation (1) and the initial value  \n\n\
\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y \((x\_0)\) = y\_0\)]],
  " ",
  StyleBox["  and compute   ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \({\((x\_j, y\_j)\)}\_\(j = 1\)\%L\)]],
  " ",
  StyleBox["\n\nwhere    ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\(\(|\)\(y\_j\)\(|\)\(\(\[LessEqual]\)\(\ \)\(B\)\)\)\)]],
  StyleBox["   for  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{\(j = 1\), 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "2", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "...", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], \(L - 1\)}]]],
  StyleBox["  and  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\(\(|\)\(y\_L\)\(|\)\(\(>\)\(\ \)\(B\)\)\)\)]],
  ".  \n\n\t",
  StyleBox["Then switch equations and use (4) with the initial value  \n\n\t\t\
",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(Y \((x\_L)\) = 1\/y\_L\)]],
  " ",
  StyleBox["  and compute   ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \({\((x\_j, Y\_j)\)}\_\(j = L + 1\)\%N\)]],
  "  ",
  StyleBox["\n\nwhere  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\(\(|\)\(y\_j\)\(|\)\(\(>\)\(\ \)\(B\)\)\)\)]],
  " ",
  StyleBox[" for  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      RowBox[{\(j = L\), ",", \(L + 1\), 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], 
        RowBox[{
          StyleBox["L",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], 
          StyleBox["+",
            FontFamily->"Times New Roman",
            FontSize->12,
            FontWeight->"Plain",
            FontSlant->"Plain",
            FontColor->GrayLevel[0],
            FontVariations->{"Underline"->False,
            "StrikeThrough"->False}], "2"}], 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], "...", 
        StyleBox[",",
          FontFamily->"Times New Roman",
          FontSize->12,
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontColor->GrayLevel[0],
          FontVariations->{"Underline"->False,
          "StrikeThrough"->False}], \(N - 1\)}]]],
  StyleBox["  and  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\(\(|\)\(y\_N\)\(|\)\(\(\[LessEqual]\)\(\ \ \)\(B\)\)\)\)]],
  ".  \n\n",
  StyleBox["Continue in a similar fashion and alternate between formula (1) \
and formula (4) until  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(j = m\)]],
  StyleBox["  ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["\tThe decision process, for the \"extended\" Runge-Kutta method \
is:\n\n\tIF ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\(\(|\)\(y\_j\)\(|\)\(\(\[LessEqual]\)\(\ \)\(B\)\)\)\)]],
  StyleBox[" THEN\n\t\n\t\tPerform one Runge-Kutta step using   ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y' \((x)\)\  = \ f \((x, y \((x)\))\)\)]],
  " ",
  StyleBox["  to compute  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y\_\(j + 1\)\)]],
  StyleBox[",\n \n\tELSE\n\t\n\t\tSet  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(Y\_\(j + 1\)\  = \ 1\/y\_\(j + 1\)\)]],
  StyleBox["  and perform one Runge-Kutta step using   ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(Y' \((x)\)\  = \ g \((x, Y \((x)\))\)\)]],
  "   ",
  StyleBox["to compute  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(Y\_\(j + 1\)\)]],
  ",",
  StyleBox["  \n\t\tand keep track of   ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y\_\(j + 1\)\  = \ 1\/Y\_\(j + 1\)\)]],
  StyleBox[".\n\t\t\n\tENDIF\n\nBefore (4) is used for numerical \
computations, the formula for  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(g \((x, Y \((x)\))\)\)]],
  "  should",
  StyleBox[" be simplified in advance so that the  \"",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(0\/0\)]],
  "\"",
  StyleBox["  or  \"",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\[Infinity]\/\[Infinity]\)]],
  "\"",
  StyleBox["  computational problems do not occur. ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["Proof",
    FontFamily->"New Century Schlbk",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 1]],
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  StyleBox[ButtonBox["Painlev\[EAcute] Property",
    ButtonData:>{
      URL[ 
      "http://math.fullerton.edu/mathews/n2003/PainlevePropertyProof.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"]
}], "Text"],

Cell[TextData[{
  StyleBox["Computer Programs ",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  " ",
  StyleBox[ButtonBox["The Runge-Kutta Method",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/n2003/RungeKuttaProg.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  "  "
}], "Text"],

Cell[TextData[{
  StyleBox["Computer Programs ",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  " ",
  StyleBox[ButtonBox["Painlev\[EAcute] Property",
    ButtonData:>{
      URL[ 
      "http://math.fullerton.edu/mathews/n2003/PainlevePropertyProg.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  StyleBox["  ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[TextData[{
  StyleBox["Mathematica Subroutine (PoleVault ",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  StyleBox["Runge-Kutta Method of Order 4",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]],
  StyleBox[").",
    FontWeight->"Bold",
    FontColor->RGBColor[0.500008, 0, 0.996109]]
}], "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{\(PoleVaultRungeKutta[a0_, b0_, \[Alpha]_, m0_]\), ":=", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"Module", "[", 
          
          RowBox[{\({a = N[a0], b = N[b0], big = 3, j}\), ",", 
            "\[IndentingNewLine]", 
            RowBox[{
              RowBox[{"RungeSmall", ":=", " ", 
                RowBox[{"Module", "[", 
                  RowBox[{\({}\), ",", "\[IndentingNewLine]", 
                    
                    RowBox[{\(k\_1\  = \ 
                        h\ \ f[
                            T\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\), 
                            Y\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\)]\), ";", " ", 
                      "\[IndentingNewLine]", \(k\_2\  = \ 
                        h\ \ f[
                            T\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\) + h\/2, 
                            Y\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\) + k\_1\/2]\), ";", " ", 
                      "\[IndentingNewLine]", \(k\_3\  = \ 
                        h\ \ f[
                            T\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\) + h\/2, 
                            Y\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\) + k\_2\/2]\), ";", " ", 
                      "\[IndentingNewLine]", \(k\_4\  = \ 
                        h\ \ f[
                            T\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\) + h, 
                            Y\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\) + k\_3]\), ";", " ", 
                      "\[IndentingNewLine]", \
\(Y\_\(\(\[LeftDoubleBracket]\)\(j + 1\)\(\[RightDoubleBracket]\)\)\  = \ 
                        Y\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\) + \(1\/6\) \((k\_1 + 2  k\_2 + 2  k\_3 + k\_4)\)\), 
                      ";", " ", "\[IndentingNewLine]", " ", 
                      
                      RowBox[{\(Z\_\(\(\[LeftDoubleBracket]\)\(j + 
                              1\)\(\[RightDoubleBracket]\)\)\), " ", "=", " ",
                         
                        RowBox[{"If", "[", " ", 
                          
                          RowBox[{\(Y\_\(\(\[LeftDoubleBracket]\)\(j + 1\)\(\
\[RightDoubleBracket]\)\) \[NotEqual] 0\), ",", 
                            "  ", \(1\/Y\_\(\(\[LeftDoubleBracket]\)\(j + 1\)\
\(\[RightDoubleBracket]\)\)\), ",", " ", 
                            InterpretationBox[\(\(ComplexInfinity\)\(\ \)\),
                              DirectedInfinity[ ]]}], "]"}]}], ";"}]}], 
                  "]"}]}], ";", " ", "\[IndentingNewLine]", 
              RowBox[{"RungeLarge", ":=", " ", 
                RowBox[{"Module", "[", 
                  RowBox[{\({}\), ",", "\[IndentingNewLine]", 
                    
                    RowBox[{\(k\_1\  = \ 
                        h\ \ g[
                            T\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\), 
                            Z\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\)]\), ";", " ", 
                      "\[IndentingNewLine]", \(k\_2\  = \ 
                        h\ \ g[
                            T\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\) + h\/2, 
                            Z\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\) + k\_1\/2]\), ";", " ", 
                      "\[IndentingNewLine]", \(k\_3\  = \ 
                        h\ \ g[
                            T\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\) + h\/2, 
                            Z\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\) + k\_2\/2]\), ";", " ", 
                      "\[IndentingNewLine]", \(k\_4\  = \ 
                        h\ \ g[
                            T\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\) + h, 
                            Z\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\) + k\_3]\), ";", " ", 
                      "\[IndentingNewLine]", \
\(Z\_\(\(\[LeftDoubleBracket]\)\(j + 1\)\(\[RightDoubleBracket]\)\)\  = \ 
                        Z\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\) + \(1\/6\) \((k\_1 + 2  k\_2 + 2  k\_3 + k\_4)\)\), 
                      ";", " ", "\[IndentingNewLine]", 
                      
                      RowBox[{\(Y\_\(\(\[LeftDoubleBracket]\)\(j + 
                              1\)\(\[RightDoubleBracket]\)\)\), " ", "=", " ",
                         
                        RowBox[{"If", "[", " ", 
                          
                          RowBox[{\(Z\_\(\(\[LeftDoubleBracket]\)\(j + 1\)\(\
\[RightDoubleBracket]\)\) \[NotEqual] 0\), ",", 
                            "  ", \(1\/Z\_\(\(\[LeftDoubleBracket]\)\(j + 1\)\
\(\[RightDoubleBracket]\)\)\), ",", " ", 
                            InterpretationBox[\(\(ComplexInfinity\)\(\ \)\),
                              DirectedInfinity[ ]]}], "]"}]}], ";"}]}], " ", 
                  "]"}]}], ";", " ", "\[IndentingNewLine]", \(m = m0\), ";", 
              "\[IndentingNewLine]", \(h\  = \ \(b - a\)\/m\), ";", " ", 
              "\[IndentingNewLine]", \(T\  = \ 
                Table[a + \((j - 1)\)\ h, {j, 1, m + 1}]\), ";", 
              "\[IndentingNewLine]", \(Y\  = \ Table[0, {j, 1, m + 1}]\), ";",
               "\[IndentingNewLine]", \(Z\  = \ Table[0, {j, 1, m + 1}]\), 
              ";", "\[IndentingNewLine]", \
\(T\_\(\(\[LeftDoubleBracket]\)\(1\)\(\[RightDoubleBracket]\)\)\  = \ a\), 
              ";", " ", 
              "\[IndentingNewLine]", \(Y\_\(\(\[LeftDoubleBracket]\)\(1\)\(\
\[RightDoubleBracket]\)\)\  = \ \[Alpha]\), ";", " ", "\[IndentingNewLine]", 
              
              RowBox[{\(Z\_\(\(\[LeftDoubleBracket]\)\(1\)\(\
\[RightDoubleBracket]\)\)\), " ", "=", " ", 
                RowBox[{"If", "[", " ", 
                  
                  RowBox[{\(\[Alpha] \[NotEqual] 0\), ",", 
                    " ", \(1\/\[Alpha]\), ",", " ", 
                    InterpretationBox[\(\(ComplexInfinity\)\(\ \)\),
                      DirectedInfinity[ ]]}], "]"}]}], ";", " ", 
              "\[IndentingNewLine]", \(For[\ j = 1, \ 
                j \[LessEqual] 
                  m, \ \(j++\), \[IndentingNewLine]\(If[\ 
                    Abs[Y\_\(\(\[LeftDoubleBracket]\)\(j\)\(\
\[RightDoubleBracket]\)\)] \[LessEqual] \ big, \ RungeSmall, \ 
                    RungeLarge\ ];\)\ ]\), ";", " ", 
              "\[IndentingNewLine]", \(Return[Transpose[{T, Y}]]\), ";"}]}], 
          " ", "]"}]}], ";"}]], "Input"],

Cell[TextData[{
  StyleBox["Example 7.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "  ",
  StyleBox["Use the extended Runge-Kutta method to compute a numerical \
approximation for  ",
    FontFamily->"Times New Roman"],
  "\n\n\t\t\t",
  Cell[BoxData[
      \(y'\  = \ y\^2\)]],
  "   with   ",
  Cell[BoxData[
      \(y \((0)\) = 1\)]],
  StyleBox["   over the interval  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\([0, 2]\)\)]],
  ".  "
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 7.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[TextData[{
  StyleBox["\tThe companion differential equation is  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(Y'\  = \ \(-1\)\)]],
  StyleBox["  where   ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(g \((x, Y)\)\  = \ \(\(-\ Y\^2\) 
            f \((x, 1\/Y)\)\  = \ \(\(-\ 
                Y\^2\) \((1\/y\^2)\)\  = \ \(-1\)\)\)\)]],
  StyleBox[". ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[BoxData[{
    \(\(f[x_, y_]\  = \ y\^2;\)\ \), "\[IndentingNewLine]", 
    \(\(g[x_, y_]\  = \ \(-\ y\^2\) f[x, 1\/y];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Use Runge-Kutta Pole valulting method to solve\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<y' = \>", f[x, y]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The companion differential equation is\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<Y' = \>", g[x, "\<Y\>"]\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(pts\  = \ 
        PoleVaultRungeKutta[0.0, 2.0, 1, 500];\)\), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(gr1\  = \ 
        ListPlot[pts, PlotJoined \[Rule] True, PlotStyle \[Rule] Magenta, 
          PlotRange \[Rule] {{0, 2}, {\(-15\), 15}}, 
          Ticks \[Rule] {Range[0, 2, 0.5], 
              Range[\(-15\), 15, 5]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The Runge-Kutta Pole valulting solution.\>"];\)\)}], "Input"],

Cell[BoxData[{
    \(\(Clear[c];\)\), "\[IndentingNewLine]", 
    \(\(deqns = {\(y'\)[x]\  \[Equal] \ \((y[x])\)\^2, 
          y[0] \[Equal] 1};\)\), "\[IndentingNewLine]", 
    \(\(solset = DSolve[deqns, y[x], x];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the D.E. with I.C.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\ deqns\ ];\)\), "\[IndentingNewLine]", 
    \(\(f[x_] = 
        solset\_\(\(\[LeftDoubleBracket]\)\(1, 1, \
2\)\(\[RightDoubleBracket]\)\);\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The analytic solution is\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<y = f[x] = \>", f[x]\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(gr2\  = \ 
        Plot[f[x], {x, 0, 5}, PlotStyle \[Rule] Blue, 
          PlotRange \[Rule] {{0, 2}, {\(-15\), 15}}, 
          Ticks \[Rule] {Range[0, 2, 0.5], 
              Range[\(-15\), 15, 5]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The analytic solution.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(Show[gr1, gr2];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The Runge-Kutta Pole valulting solution,\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<and the analytic solution  f[x] = \>", 
        f[x]\ ];\)\)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 8.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox["  Use the extended Runge-Kutta method to compute a numerical \
approximation for  \n\n\t\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y'\  = \ 1 + y\^2\)]],
  StyleBox["   ",
    FontFamily->"Times New Roman",
    FontSlant->"Italic"],
  StyleBox["with   ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y \((0)\) = 0\)]],
  StyleBox["   over the interval  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\([0, 5]\)\)]],
  ".  "
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 8.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[TextData[{
  StyleBox["\tThe companion differential equation is  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(Y'\  = \ \(-1\) - Y\^2\)]],
  StyleBox["  where   ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(g \((x, Y)\)\  = \ \(\(-\ Y\^2\) 
            f \((x, 1\/Y)\)\  = \ \(\(-\ 
                Y\^2\) \((1 + 1\/y\^2)\)\  = \ \(-1\) - Y\^2\)\)\)]],
  StyleBox[". ",
    FontFamily->"Times New Roman"]
}], "Text"],

Cell[BoxData[{
    \(\(f[x_, y_]\  = \ 1 + y\^2;\)\ \), "\[IndentingNewLine]", 
    \(\(g[x_, y_]\  = \ \(-\ y\^2\) f[x, 1\/y];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Use Runge-Kutta Pole valulting method to solve\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<y' = \>", f[x, y]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The companion differential equation is\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<Y' = \>", g[x, "\<Y\>"]\ ];\)\), "\[IndentingNewLine]", 
    \(\(g[x_, y_]\  = \ Expand[g[x, y]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Y' = \>", g[x, "\<Y\>"]\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(pts\  = \ 
        PoleVaultRungeKutta[0.0, 5.0, 0, 1000];\)\), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(gr1\  = \ 
        ListPlot[pts, PlotJoined \[Rule] True, PlotStyle \[Rule] Magenta, 
          PlotRange \[Rule] {{0, 5}, {\(-15\), 15}}, 
          Ticks \[Rule] {Range[0, 2  \[Pi], \[Pi]\/4], 
              Range[\(-15\), 15, 5]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The Runge-Kutta Pole valulting solution.\>"];\)\)}], "Input"],

Cell[BoxData[{
    \(\(Clear[c];\)\), "\[IndentingNewLine]", 
    \(\(deqns = {\(y'\)[x]\  \[Equal] \ 1 + \((y[x])\)\^2, 
          y[0] \[Equal] 0};\)\), "\[IndentingNewLine]", 
    \(\(solset = DSolve[deqns, y[x], x];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the D.E. with I.C.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\ deqns\ ];\)\), "\[IndentingNewLine]", 
    \(\(f[x_] = 
        solset\_\(\(\[LeftDoubleBracket]\)\(1, 1, \
2\)\(\[RightDoubleBracket]\)\);\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The analytic solution is\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<y = f[x] = \>", f[x]\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(gr2\  = \ 
        Plot[f[x], {x, 0, 5}, PlotStyle \[Rule] Blue, 
          PlotRange \[Rule] {{0, 5}, {\(-15\), 15}}, 
          Ticks \[Rule] {Range[0, 2  \[Pi], \[Pi]\/4], 
              Range[\(-15\), 15, 5]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The analytic solution.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(Show[gr1, gr2];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The Runge-Kutta Pole valulting solution,\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<and the analytic solution  f[x] = \>", 
        f[x]\ ];\)\)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 9.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox["  Use the extended Runge-Kutta method to compute a numerical \
approximation for  \n\n\t\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y'\  = \ 2  t\ y[t]\^2\)]],
  "   with  ",
  Cell[BoxData[
      \(y \((0)\) = 1\)]],
  StyleBox["   over the interval  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\([0, 1.5]\)\)]],
  ".  "
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 9.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(f[x_, y_]\  = \ 2\ x\ y\^2;\)\ \), "\[IndentingNewLine]", 
    \(\(g[x_, y_]\  = \ \(-\ y\^2\) f[x, 1\/y];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Use Runge-Kutta Pole valulting method to solve\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<y' = \>", f[x, y]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The companion differential equation is\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<Y' = \>", g[x, "\<Y\>"]\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(pts\  = 
        PoleVaultRungeKutta[0.0, 1.5, 1.0, 300];\)\), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\), "\[IndentingNewLine]", 
    \(\(gr1\  = \ 
        ListPlot[pts, PlotJoined \[Rule] True, PlotStyle \[Rule] Magenta, 
          PlotRange \[Rule] {{0, 1.5}, {\(-15\), 15}}, 
          Ticks \[Rule] {Range[0, 1.5, 0.25], 
              Range[\(-15\), 15, 5]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The Runge-Kutta Pole valulting solution.\>"];\)\)}], "Input"],

Cell[BoxData[{
    \(\(Clear[c];\)\), "\[IndentingNewLine]", 
    \(\(deqns = {\(y'\)[x]\  \[Equal] 2  x\ y[x]\^2, 
          y[0] \[Equal] 1};\)\), "\[IndentingNewLine]", 
    \(\(solset = DSolve[deqns, y[x], x];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the D.E. with I.C.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\ deqns\ ];\)\), "\[IndentingNewLine]", 
    \(\(f[x_] = 
        solset\_\(\(\[LeftDoubleBracket]\)\(1, 1, \
2\)\(\[RightDoubleBracket]\)\);\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The analytic solution is\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<y = f[x] = \>", f[x]\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(gr2\  = \ 
        Plot[f[x], {x, 0, 1.5}, PlotStyle \[Rule] Blue, 
          PlotRange \[Rule] {{0, 1.5}, {\(-15\), 15}}, 
          Ticks \[Rule] {Range[0, 1.5, 0.25], 
              Range[\(-15\), 15, 5]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The analytic solution.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(Show[gr1, gr2];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The Runge-Kutta Pole valulting solution,\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<and the analytic solution  f[x] = \>", 
        f[x]\ ];\)\)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 10.",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  "   ",
  StyleBox["Use the extended Runge-Kutta method to compute a numerical \
approximation for  ",
    FontFamily->"Times New Roman"],
  "\n\n\t\t\t",
  Cell[BoxData[
      \(y'\  = \ \(1\/x\) y\^2\)]],
  "   with   ",
  Cell[BoxData[
      \(y \((1)\) = 1\)]],
  StyleBox["   over the interval  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\([0, 3]\)\)]],
  ".  "
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 10.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(f[x_, y_]\  = \ \(1\/x\) y\^2;\)\ \), "\[IndentingNewLine]", 
    \(\(g[x_, y_]\  = \ \(-\ y\^2\) f[x, 1\/y];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Use Runge-Kutta Pole valulting method to solve\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<y' = \>", f[x, y]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The companion differential equation is\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<Y' = \>", g[x, "\<Y\>"]\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(pts\  = 
        PoleVaultRungeKutta[1.0, 3.0, 1.0, 500];\)\), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(gr1\  = \ 
        ListPlot[pts, PlotJoined \[Rule] True, PlotStyle \[Rule] Magenta, 
          PlotRange \[Rule] {{1, 3}, {\(-30\), 30}}, 
          Ticks \[Rule] {Range[1, 3, 0.5], 
              Range[\(-30\), 30, 10]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The Runge-Kutta Pole valulting solution.\>"];\)\)}], "Input"],

Cell[BoxData[{
    \(\(Clear[c];\)\), "\[IndentingNewLine]", 
    \(\(deqns = {\(y'\)[x]\  \[Equal] \ \(1\/x\) \((y[x])\)\^2, 
          y[1] \[Equal] 1};\)\), "\[IndentingNewLine]", 
    \(\(solset = DSolve[deqns, y[x], x];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the D.E. with I.C.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\ deqns\ ];\)\), "\[IndentingNewLine]", 
    \(\(f[x_] = 
        solset\_\(\(\[LeftDoubleBracket]\)\(1, 1, \
2\)\(\[RightDoubleBracket]\)\);\)\), "\[IndentingNewLine]", 
    \(\(f[x_] = MapAll[FullSimplify, f[x]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The analytic solution is\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<y = f[x] = \>", f[x]\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(gr2\  = \ 
        Plot[f[x], {x, 1, 3.5}, PlotStyle \[Rule] Blue, 
          PlotRange \[Rule] {{1, 3}, {\(-30\), 30}}, 
          Ticks \[Rule] {Range[1, 3, 0.5], 
              Range[\(-30\), 30, 10]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The analytic solution.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(Show[gr1, gr2];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The Runge-Kutta Pole valulting solution,\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<and the analytic solution\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 11.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox["  Use the extended Runge-Kutta method to compute a numerical \
approximation for  \n\n\t\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y'\  = \ x\  + y[x]\^2\)]],
  "   with  ",
  Cell[BoxData[
      \(y \((0)\) = 1\)]],
  StyleBox["   over the interval  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\([0, 3.5]\)\)]],
  ".  "
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 11.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(f[x_, y_]\  = x + y\^2;\)\ \), "\[IndentingNewLine]", 
    \(\(g[x_, y_]\  = \ \(-\ y\^2\) f[x, 1\/y];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Use Runge-Kutta Pole valulting method to solve\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<y' = \>", f[x, y]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The companion differential equation is\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<Y' = \>", g[x, "\<Y\>"]\ ];\)\), "\[IndentingNewLine]", 
    \(\(g[x_, y_]\  = \ Expand[g[x, y]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Y' = \>", g[x, "\<Y\>"]\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(pts\  = 
        PoleVaultRungeKutta[0.0, 3.5, 1.0, 400];\)\), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(gr1\  = \ 
        ListPlot[pts, PlotJoined \[Rule] True, PlotStyle \[Rule] Magenta, 
          PlotRange \[Rule] {{0, 3.5}, {\(-15\), 15}}, 
          Ticks \[Rule] {Range[0, 3.5, 1], 
              Range[\(-15\), 15, 5]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The Runge-Kutta Pole valulting solution.\>"];\)\)}], "Input"],

Cell[BoxData[{
    \(\(Clear[c];\)\), "\[IndentingNewLine]", 
    \(\(deqns = {\(y'\)[x]\  \[Equal] x\  + y[x]\^2, 
          y[0] \[Equal] 1};\)\), "\[IndentingNewLine]", 
    \(\(solset = DSolve[deqns, y[x], x];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the D.E. with I.C.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\ deqns\ ];\)\), "\[IndentingNewLine]", 
    \(\(f[x_] = 
        solset\_\(\(\[LeftDoubleBracket]\)\(1, 1, \
2\)\(\[RightDoubleBracket]\)\);\)\), "\[IndentingNewLine]", 
    \(\(f[x_] = MapAll[FullSimplify, f[x]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The analytic solution is\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<y = f[x] = \>", f[x]\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(gr2\  = \ 
        Plot[f[x], {x, 0, 3.5}, PlotStyle \[Rule] Blue, 
          PlotRange \[Rule] {{0, 3.5}, {\(-15\), 15}}, 
          Ticks \[Rule] {Range[0, 3.5, 1], 
              Range[\(-15\), 15, 5]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The analytic solution.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(Show[gr1, gr2];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The Runge-Kutta Pole valulting solution,\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<and the analytic solution\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["Example 12.",
    FontFamily->"Times New Roman",
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox["  Use the extended Runge-Kutta method to compute a numerical \
approximation for  \n\n\t\t\t",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(y'\  = \ x\^2\  + y[x]\^2\)]],
  "   with  ",
  Cell[BoxData[
      \(y \((0)\) = 1\)]],
  " ",
  StyleBox["  over the interval  ",
    FontFamily->"Times New Roman"],
  Cell[BoxData[
      \(\([0, 3]\)\)]],
  ".  "
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solution 12.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]]], "Text"],

Cell[BoxData[{
    \(\(f[x_, y_]\  = \ x\^2 + y\^2;\)\ \), "\[IndentingNewLine]", 
    \(\(g[x_, y_]\  = \ \(-\ y\^2\) f[x, 1\/y];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Use Runge-Kutta Pole valulting method to solve\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<y' = \>", f[x, y]\ ];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The companion differential equation is\>"];\)\ \), "\
\[IndentingNewLine]", 
    \(\(Print["\<Y' = \>", g[t, "\<Y\>"]\ ];\)\), "\[IndentingNewLine]", 
    \(\(g[x_, y_]\  = \ Expand[g[x, y]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<Y' = \>", g[x, "\<Y\>"]\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(pts\  = 
        PoleVaultRungeKutta[0.0, 3.0, 1.0, 300];\)\), "\[IndentingNewLine]", 
    \(\(Needs["\<Graphics`Colors`\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(gr1\  = \ 
        ListPlot[pts, PlotJoined \[Rule] True, PlotStyle \[Rule] Magenta, 
          PlotRange \[Rule] {{0, 3.0}, {\(-15\), 15}}, 
          Ticks \[Rule] {Range[0, 3.0, 0.5], 
              Range[\(-15\), 15, 5]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The Runge-Kutta Pole valulting solution.\>"];\)\), "\
\[IndentingNewLine]", 
    \(\)}], "Input"],

Cell[BoxData[{
    \(\(Clear[c];\)\), "\[IndentingNewLine]", 
    \(\(deqns = {\(y'\)[x]\  \[Equal] x\^2\  + y[x]\^2, 
          y[0] \[Equal] 1};\)\), "\[IndentingNewLine]", 
    \(\(solset = DSolve[deqns, y[x], x];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<Solve the D.E. with I.C.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print[\ deqns\ ];\)\), "\[IndentingNewLine]", 
    \(\(f[x_] = 
        solset\_\(\(\[LeftDoubleBracket]\)\(1, 1, \
2\)\(\[RightDoubleBracket]\)\);\)\), "\[IndentingNewLine]", 
    \(\(f[x_] = MapAll[FullSimplify, f[x]];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The analytic solution is\>"];\)\ \), "\[IndentingNewLine]", 
    \(\(Print["\<y = f[x] = \>", f[x]\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(gr2\  = \ 
        Plot[f[x], {x, 0, 3.3}, PlotStyle \[Rule] Blue, 
          PlotRange \[Rule] {{0, 3.0}, {\(-15\), 15}}, 
          Ticks \[Rule] {Range[0, 3.0, 0.5], 
              Range[\(-15\), 15, 5]}];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The analytic solution.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\)}], "Input"],

Cell[BoxData[{
    \(\(Show[gr1, gr2];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The analytic solution.\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<The Runge-Kutta Pole valulting solution,\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(Print["\<and the analytic solution\>"];\)\), "\[IndentingNewLine]", 
    \(\(Print["\<f[x] = \>", f[x]\ ];\)\)}], "Input"]
}, Closed]],

Cell[TextData[{
  StyleBox["References",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  "\n\n1.  ",
  StyleBox["John H. Mathews",
    FontFamily->"New Century Schlbk"],
  StyleBox[", ",
    FontFamily->"Times New Roman"],
  ButtonBox["Computed Solution Curves for Differential Equations",
    ButtonData:>{
      URL[ 
      "http://math.fullerton.edu/mathews/articles/1989SolutonCurves4DE.pdf"], 
      None},
    ButtonStyle->"Hyperlink"],
  StyleBox[", The AMATYC Review, Vol. 11, No. 1, (Part I), Fall 1989, pp. \
30-33.  \n",
    FontFamily->"Times New Roman"],
  "2.  George F. Corliss",
  StyleBox[", ",
    FontFamily->"New Century Schlbk"],
  ButtonBox["Integrating ODE's in the Complex Plane-Pole Vaulting",
    ButtonData:>{
      URL[ 
      "http://links.jstor.org/sici?sici=0025-5718%28198010%2935%3A152%3C1181%\
3AIOITCP%3E2.0.CO%3B2-R  "], None},
    ButtonStyle->"Hyperlink"],
  ", Mathematics of Computation, Vol. 35, No. 152 (Oct., 1980), pp. \
1181-1189.   ",
  StyleBox["\n3.  Kurtis Fink;  ",
    FontFamily->"New Century Schlbk"],
  "John Mathews",
  StyleBox[", ",
    FontFamily->"New York"],
  ButtonBox["Numerical Methods Using Matlab",
    ButtonData:>{
      URL[ "http://math.fullerton.edu/mathews/books/nbook.htm"], None},
    ButtonStyle->"Hyperlink"],
  StyleBox[", 4",
    FontFamily->"Times New Roman"],
  StyleBox["th",
    FontFamily->"Times New Roman",
    FontVariations->{"CompatibilityType"->"Superscript"}],
  StyleBox[" Edition, ISBN 0-13-065248-2, Prentice-Hall Pub. Inc., ",
    FontFamily->"Times New Roman"],
  StyleBox["Upper Saddle River, NJ, 2004.  ",
    FontFamily->"New York"]
}], "Text"],

Cell[TextData[StyleBox["Research Experience for Undergraduates",
  FontSize->14,
  FontWeight->"Bold",
  FontColor->RGBColor[0.500008, 0, 0.996109]]], "Text"],

Cell[TextData[{
  StyleBox[ButtonBox["Painlev\[EAcute] Property",
    ButtonData:>{
      URL[ 
      "http://math.fullerton.edu/mathews/n2003/PainlevePropertyBib.html"], 
      None},
    ButtonStyle->"Hyperlink"],
    FontWeight->"Bold"],
  StyleBox["  ",
    FontFamily->"Times New Roman"],
  "Internet hyperlinks to web sites and a bibliography of articles.  "
}], "Text"],

Cell[TextData[StyleBox[ButtonBox["Return to the Numerical Analysis Project",
  ButtonData:>{
    URL[ "http://math.fullerton.edu/mathews/numerical.html"], None},
  ButtonStyle->"Hyperlink"],
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1],
  FontVariations->{"Underline"->True}]], "Text"]
},
FrontEndVersion->"5.2 for Microsoft Windows",
ScreenRectangle->{{0, 1024}, {0, 685}},
CellGrouping->Manual,
WindowSize->{993, 640},
WindowMargins->{{Automatic, 10}, {3, Automatic}}
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 171, 4, 35, "Text"],
Cell[1950, 59, 1133, 38, 140, "Text"],
Cell[3086, 99, 146, 3, 32, "Text"]
}, Closed]],
Cell[3247, 105, 1630, 56, 169, "Text"],

Cell[CellGroupData[{
Cell[4902, 165, 101, 2, 33, "Text"],
Cell[5006, 169, 49015, 806, 183, 48901, 802, "GraphicsData", "Bitmap", \
"Input",
  Evaluatable->False],
Cell[54024, 977, 42, 1, 42, "Input"],
Cell[54069, 980, 37, 1, 42, "Input"],
Cell[54109, 983, 39, 1, 30, "Input"],
Cell[54151, 986, 39, 1, 30, "Input"],
Cell[54193, 989, 40, 1, 42, "Input"],
Cell[54236, 992, 48, 1, 30, "Input"],
Cell[54287, 995, 39, 1, 30, "Input"],
Cell[54329, 998, 28422, 469, 117, 28308, 465, "GraphicsData", "Bitmap", \
"Input",
  Evaluatable->False],
Cell[82754, 1469, 46, 1, 40, "Input"],
Cell[82803, 1472, 46, 1, 40, "Input"],
Cell[82852, 1475, 55, 1, 41, "Input"]
}, Closed]],
Cell[82922, 1479, 1649, 55, 165, "Text"],
Cell[84574, 1536, 420, 17, 36, "Text"],

Cell[CellGroupData[{
Cell[85019, 1557, 101, 2, 33, "Text"],
Cell[85123, 1561, 298, 12, 36, "Text"],
Cell[85424, 1575, 374, 6, 131, "Input"],
Cell[85801, 1583, 331, 11, 52, "Text"],
Cell[86135, 1596, 226, 3, 83, "Input"],
Cell[86364, 1601, 212, 8, 36, "Text"],
Cell[86579, 1611, 610, 10, 183, "Input"]
}, Closed]],
Cell[87204, 1624, 1992, 72, 170, "Text"],
Cell[89199, 1698, 323, 14, 33, "Text"],
Cell[89525, 1714, 662, 27, 57, "Text"],
Cell[90190, 1743, 924, 36, 58, "Text"],

Cell[CellGroupData[{
Cell[91139, 1783, 105, 2, 33, "Text"],
Cell[91247, 1787, 1285, 22, 297, "Input"],
Cell[92535, 1811, 1281, 22, 277, "Input"],
Cell[93819, 1835, 1287, 22, 284, "Input"],
Cell[95109, 1859, 1287, 22, 284, "Input"],
Cell[96399, 1883, 1289, 22, 264, "Input"],
Cell[97691, 1907, 307, 11, 36, "Text"],
Cell[98001, 1920, 305, 11, 36, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[98343, 1936, 105, 2, 30, "Text"],
Cell[98451, 1940, 1361, 24, 310, "Input"],
Cell[99815, 1966, 1361, 24, 310, "Input"],
Cell[101179, 1992, 1363, 24, 310, "Input"],
Cell[102545, 2018, 356, 14, 36, "Text"]
}, Closed]],
Cell[102916, 2035, 1091, 36, 68, "Text"],
Cell[104010, 2073, 1090, 34, 71, "Text"],
Cell[105103, 2109, 688, 17, 109, "Text"],
Cell[105794, 2128, 635, 17, 33, "Text"],
Cell[106432, 2147, 909, 26, 52, "Text"],
Cell[107344, 2175, 192, 6, 33, "Text"],
Cell[107539, 2183, 487, 14, 33, "Text"],
Cell[108029, 2199, 313, 7, 52, "Text"],
Cell[108345, 2208, 270, 11, 36, "Text"],

Cell[CellGroupData[{
Cell[108640, 2223, 101, 2, 33, "Text"],
Cell[108744, 2227, 1006, 17, 316, "Input"],
Cell[109753, 2246, 266, 11, 33, "Text"],
Cell[110022, 2259, 171, 8, 33, "Text"],
Cell[110196, 2269, 273, 11, 36, "Text"],
Cell[110472, 2282, 215, 8, 33, "Text"]
}, Closed]],
Cell[110702, 2293, 280, 11, 40, "Text"],

Cell[CellGroupData[{
Cell[111007, 2308, 101, 2, 33, "Text"],
Cell[111111, 2312, 1176, 20, 364, "Input"],
Cell[112290, 2334, 179, 8, 33, "Text"],
Cell[112472, 2344, 1243, 37, 119, "Text"]
}, Closed]],
Cell[113730, 2384, 285, 11, 35, "Text"],

Cell[CellGroupData[{
Cell[114040, 2399, 101, 2, 33, "Text"],
Cell[114144, 2403, 1018, 17, 318, "Input"],
Cell[115165, 2422, 266, 11, 33, "Text"],
Cell[115434, 2435, 171, 8, 33, "Text"],
Cell[115608, 2445, 292, 11, 38, "Text"],
Cell[115903, 2458, 224, 8, 36, "Text"]
}, Closed]],
Cell[116142, 2469, 1535, 43, 190, "Text"],
Cell[117680, 2514, 2637, 86, 325, "Text"],
Cell[120320, 2602, 242, 7, 71, "Text"],
Cell[120565, 2611, 1360, 41, 71, "Text"],
Cell[121928, 2654, 3227, 93, 137, "Text"],
Cell[125158, 2749, 4001, 123, 269, "Text"],
Cell[129162, 2874, 1635, 51, 299, "Text"],
Cell[130800, 2927, 423, 14, 33, "Text"],
Cell[131226, 2943, 357, 12, 33, "Text"],
Cell[131586, 2957, 418, 14, 33, "Text"],
Cell[132007, 2973, 390, 11, 33, "Text"],
Cell[132400, 2986, 6680, 127, 703, "Input"],
Cell[139083, 3115, 489, 19, 71, "Text"],

Cell[CellGroupData[{
Cell[139597, 3138, 101, 2, 33, "Text"],
Cell[139701, 3142, 437, 13, 38, "Text"],
Cell[140141, 3157, 475, 8, 146, "Input"],
Cell[140619, 3167, 518, 9, 110, "Input"],
Cell[141140, 3178, 643, 11, 171, "Input"],
Cell[141786, 3191, 382, 7, 70, "Input"],
Cell[142171, 3200, 251, 5, 70, "Input"]
}, Closed]],
Cell[142437, 3208, 637, 22, 68, "Text"],

Cell[CellGroupData[{
Cell[143099, 3234, 101, 2, 33, "Text"],
Cell[143203, 3238, 455, 13, 38, "Text"],
Cell[143661, 3253, 623, 10, 186, "Input"],
Cell[144287, 3265, 531, 9, 123, "Input"],
Cell[144821, 3276, 647, 11, 171, "Input"],
Cell[145471, 3289, 394, 7, 81, "Input"],
Cell[145868, 3298, 251, 5, 70, "Input"]
}, Closed]],
Cell[146134, 3306, 522, 18, 68, "Text"],

Cell[CellGroupData[{
Cell[146681, 3328, 101, 2, 33, "Text"],
Cell[146785, 3332, 481, 8, 146, "Input"],
Cell[147269, 3342, 521, 9, 110, "Input"],
Cell[147793, 3353, 641, 11, 171, "Input"],
Cell[148437, 3366, 389, 7, 70, "Input"],
Cell[148829, 3375, 251, 5, 70, "Input"]
}, Closed]],
Cell[149095, 3383, 500, 19, 71, "Text"],

Cell[CellGroupData[{
Cell[149620, 3406, 102, 2, 33, "Text"],
Cell[149725, 3410, 484, 8, 159, "Input"],
Cell[150212, 3420, 519, 9, 110, "Input"],
Cell[150734, 3431, 725, 12, 204, "Input"],
Cell[151462, 3445, 385, 7, 70, "Input"],
Cell[151850, 3454, 292, 5, 90, "Input"]
}, Closed]],
Cell[152157, 3462, 523, 18, 68, "Text"],

Cell[CellGroupData[{
Cell[152705, 3484, 102, 2, 33, "Text"],
Cell[152810, 3488, 621, 10, 186, "Input"],
Cell[153434, 3500, 520, 9, 110, "Input"],
Cell[153957, 3511, 714, 12, 191, "Input"],
Cell[154674, 3525, 386, 7, 70, "Input"],
Cell[155063, 3534, 292, 5, 90, "Input"]
}, Closed]],
Cell[155370, 3542, 530, 19, 68, "Text"],

Cell[CellGroupData[{
Cell[155925, 3565, 102, 2, 33, "Text"],
Cell[156030, 3569, 626, 10, 186, "Input"],
Cell[156659, 3581, 558, 11, 130, "Input"],
Cell[157220, 3594, 717, 12, 191, "Input"],
Cell[157940, 3608, 388, 7, 70, "Input"],
Cell[158331, 3617, 366, 6, 110, "Input"]
}, Closed]],
Cell[158712, 3626, 1655, 47, 114, "Text"],
Cell[160370, 3675, 158, 3, 35, "Text"],
Cell[160531, 3680, 376, 11, 33, "Text"],
Cell[160910, 3693, 293, 6, 33, "Text"]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

